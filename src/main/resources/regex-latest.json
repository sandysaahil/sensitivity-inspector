{
   "PUBLIC_PRIVATE_KEY": {
      "regexes": [
         {
            "value": "/-----BEGIN ([A-Z ]+) KEY( ?BLOCK)?----- *(?:\\n{0,3} *[A-Za-z-]+: .+)*\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){2,32}[A-Za-z0-9+/]{1,128}=?=?(?:\\n *=[A-Za-z0-9+/]{4})? *\\n{0,3}(?: *-----END \\1 KEY\\2-----)?/g",
            "confidenceDetailed": {
               "name": "ppkey1",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/-----BEGIN CERTIFICATE----- *(?:\\n{0,3}[A-Za-z-]+: .+)*\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){2,32}[A-Za-z0-9+/]{1,128}=?=?(?:\\n *=[A-Za-z0-9+/]{4})? *\\n{0,3}(?: *-----END CERTIFICATE-----)?/g",
            "confidenceDetailed": {
               "name": "ppkey2",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/PuTTY-User-Key-File.{0,2}: [a-z0-9-]+ *\\n *(?:[A-Za-z-]+: .+\\n *)*(?:Public-Lines: \\d+) *\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){2,16}[A-Za-z0-9+/]{0,128}=?=?\\n{0,3} *Private-Lines: \\d+ *\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){1,32}(?:Private-MAC: [a-f0-9]{32,64}|[A-Za-z0-9+/]{0,128}=?=?(?:\\n{0,3} *Private-MAC: [a-f0-9]{32,64})?)/g",
            "confidenceDetailed": {
               "name": "ppkey3",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/(?:<RSAKeyValue>\\n* *)[<>A-Za-z0-9+/=\\n ]{50,2048}<DP>[A-Za-z0-9+/=\\n<>\\ ]{50,1024}\\n* *\\n* *<\\/DP>[<>A-Za-z0-9+/=\\n ]{50,2048}(?:\\n* *<\\/RSAKeyValue>)/g",
            "confidenceDetailed": {
               "name": "ppkey4",
               "type": "reg",
               "confidence": 1
            }
         }
      ],
      "validator": "public_private_key",
      "neighbours": [
         {
            "value": "/-----END (?:[A-Z ]+ KEY(?: ?BLOCK)?|CERTIFICATE)-----/g",
            "confidenceDetailed": {
               "name": "-----END PUBLIC KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPubKeyBlock",
               "type": "nb",
               "confidence": 0.2
            },
            "matchNeighbourOnlyBack": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "noBoundaryException": true,
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "dashesPubKeyBlock": {
            "value": "/-----END (?:[A-Z ]+ KEY(?: ?BLOCK)?|CERTIFICATE)-----/g",
            "confidenceDetailed": {
               "name": "-----END PUBLIC KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPubKeyBlock",
               "type": "nb",
               "confidence": 0.2
            },
            "matchNeighbourOnlyBack": true
         },
         "privatekey": {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pemfile": {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ssh": {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rsa": {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ecdsa": {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "dss": {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "publickey": {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "putty": {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 53,
            "value": "/(?<dashesPubKeyBlock>-----END (?:[A-Z ]+ KEY(?: ?BLOCK)?|CERTIFICATE)-----)/",
            "matchNeighbourOnlyBack": true
         },
         {
            "maxRegexSourceLength": 44,
            "value": "/(?<privatekey>(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n))|(?<pemfile>(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n))|(?<ssh>(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<rsa>(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<ecdsa>(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<dss>(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<publickey>(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n))|(?<putty>(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "dashesPubKeyBlock": {
            "value": "/-----END (?:[A-Z ]+ KEY(?: ?BLOCK)?|CERTIFICATE)-----/g",
            "confidenceDetailed": {
               "name": "-----END PUBLIC KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPubKeyBlock",
               "type": "nb",
               "confidence": 0.2
            },
            "matchNeighbourOnlyBack": true
         },
         "privatekey": {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pemfile": {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ssh": {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rsa": {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ecdsa": {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "dss": {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "publickey": {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "putty": {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 53,
            "value": "/(?<dashesPubKeyBlock>-----END (?:[A-Z ]+ KEY(?: ?BLOCK)?|CERTIFICATE)-----)/",
            "matchNeighbourOnlyBack": true
         },
         {
            "maxRegexSourceLength": 44,
            "value": "/(?<privatekey>(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n))|(?<pemfile>(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n))|(?<ssh>(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<rsa>(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<ecdsa>(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<dss>(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<publickey>(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n))|(?<putty>(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "PRIVATE_KEY": {
      "regexes": [
         {
            "value": "/-----BEGIN ((?:[A-Z]+ )?PRIVATE) KEY( ?BLOCK)?----- *(?:\\n{0,3} *[A-Za-z-]+: .+)*\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){2,32}[A-Za-z0-9+/]{1,128}=?=?(?:\\n *=[A-Za-z0-9+/]{4})? *\\n{0,3}(?: *-----END \\1 KEY\\2-----)?/g",
            "confidenceDetailed": {
               "name": "privkey1",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/PuTTY-User-Key-File.{0,2}: [a-z0-9-]+ *\\n *(?:[A-Za-z-]+: .+\\n *)*(?:Public-Lines: \\d+) *\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){2,16}[A-Za-z0-9+/]{0,128}=?=?\\n{0,3} *Private-Lines: \\d+ *\\n{0,3} *(?:[A-Za-z0-9+/]{63,128}(?:\\n *)?){1,32}(?:Private-MAC: [a-f0-9]{32,64}|[A-Za-z0-9+/]{0,128}=?=?(?:\\n{0,3} *Private-MAC: [a-f0-9]{32,64})?)/g",
            "confidenceDetailed": {
               "name": "privkey2",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/(?:<RSAKeyValue>\\n* *)[<>A-Za-z0-9+/=\\n ]{50,2048}<DP>[A-Za-z0-9+/=\\n<>\\ ]{50,1024}\\n* *\\n* *<\\/DP>[<>A-Za-z0-9+/=\\n ]{50,2048}(?:\\n* *<\\/RSAKeyValue>)/g",
            "confidenceDetailed": {
               "name": "privkey3",
               "type": "reg",
               "confidence": 1
            }
         }
      ],
      "validator": "public_private_key",
      "neighbours": [
         {
            "value": "/-----END (?:(?:[A-Z]+ )?PRIVATE) KEY(?: ?BLOCK)?-----/g",
            "confidenceDetailed": {
               "name": "-----END PRIVATE KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPrivKeyBlock",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "noBoundaryException": true,
      "preBuiltStructuredNeighboursMap": {
         "dashesPrivKeyBlock": {
            "value": "/-----END (?:(?:[A-Z]+ )?PRIVATE) KEY(?: ?BLOCK)?-----/g",
            "confidenceDetailed": {
               "name": "-----END PRIVATE KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPrivKeyBlock",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         "privatekey": {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pemfile": {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ssh": {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rsa": {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ecdsa": {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "dss": {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "publickey": {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "putty": {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 53,
            "value": "/(?<dashesPrivKeyBlock>-----END (?:(?:[A-Z]+ )?PRIVATE) KEY(?: ?BLOCK)?-----)/",
            "matchNeighbourOnlyBack": true
         },
         {
            "maxRegexSourceLength": 44,
            "value": "/(?<privatekey>(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n))|(?<pemfile>(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n))|(?<ssh>(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<rsa>(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<ecdsa>(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<dss>(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<publickey>(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n))|(?<putty>(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "dashesPrivKeyBlock": {
            "value": "/-----END (?:(?:[A-Z]+ )?PRIVATE) KEY(?: ?BLOCK)?-----/g",
            "confidenceDetailed": {
               "name": "-----END PRIVATE KEY BLOCK-----",
               "alternateCaptureGroupName": "dashesPrivKeyBlock",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         "privatekey": {
            "value": "/(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pemfile": {
            "value": "/(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pemfile",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ssh": {
            "value": "/(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ssh",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rsa": {
            "value": "/(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "ecdsa": {
            "value": "/(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ecdsa",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "dss": {
            "value": "/(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dss",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "publickey": {
            "value": "/(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "publickey",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "putty": {
            "value": "/(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "putty",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 53,
            "value": "/(?<dashesPrivKeyBlock>-----END (?:(?:[A-Z]+ )?PRIVATE) KEY(?: ?BLOCK)?-----)/",
            "matchNeighbourOnlyBack": true
         },
         {
            "maxRegexSourceLength": 44,
            "value": "/(?<privatekey>(?:\\b|_|\\\\n)private[ _-]?key(?:\\b|_|\\\\n))|(?<pemfile>(?:\\b|_|\\\\n)pem[-_ ]?file(?:\\b|_|\\\\n))|(?<ssh>(?:\\b|_|\\\\n)ssh(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<rsa>(?:\\b|_|\\\\n)rsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<ecdsa>(?:\\b|_|\\\\n)ecdsa(?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<dss>(?:\\b|_|\\\\n)ds[as](?:[ _-]?key)?(?:\\b|_|\\\\n))|(?<publickey>(?:\\b|_|\\\\n)public[ _-]?key(?:\\b|_|\\\\n))|(?<putty>(?:\\b|_|\\\\n)putty(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "CVV": {
      "regexes": [
         {
            "value": "/\\d{3,4}/g",
            "confidenceDetailed": {
               "name": "cvv1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "neighbours": [
         {
            "value": "/card[ _-]?security[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardsecuritycode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         {
            "value": "/card[ _-]?identification[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardidentificationcode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         {
            "value": "/card[ _-]?validation[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardvalidationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/card[ _-]?verification[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardverificationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)elo[ _-]?verification[ _-]?(?:number|num|no|code)/g",
            "confidenceDetailed": {
               "name": "eloverificationcode",
               "type": "nb",
               "confidence": 0.55
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/security[ _-]?code/g",
            "confidenceDetailed": {
               "name": "securitycode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/^cid$/g",
            "confidenceDetailed": {
               "name": "cid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^csc$/g",
            "confidenceDetailed": {
               "name": "csc",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^cvd$/g",
            "confidenceDetailed": {
               "name": "cvd",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/security[ _-]?code:/g",
            "confidenceDetailed": {
               "name": "securitycode:",
               "alternateCaptureGroupName": "securitycodecolon",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "alternateCaptureGroupName": "cvvFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "alternateCaptureGroupName": "cvvcFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "alternateCaptureGroupName": "cvcFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cid(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cid",
               "alternateCaptureGroupName": "cidFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)csc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "csc",
               "alternateCaptureGroupName": "cscFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvd(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvd",
               "alternateCaptureGroupName": "cvdFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "alternateCaptureGroupName": "cvvBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "alternateCaptureGroupName": "cvvcBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "alternateCaptureGroupName": "cvcBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         }
      ],
      "boosters": {
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.45,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "CREDIT_CARD_NUMBER"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.1,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 1
                  }
               }
            ]
         },
         "unstructured": {
            "closeFriends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.45,
                     "name": "closeFriends",
                     "type": "bst"
                  },
                  "params": {
                     "closeFriendInfoTypes": [
                        "CREDIT_CARD_NUMBER"
                     ],
                     "neighbourhoodLength": 50
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         }
      },
      "neighbourhoodLength": 10,
      "matchExact": true,
      "preBuiltStructuredNeighboursMap": {
         "cardsecuritycode": {
            "value": "/card[ _-]?security[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardsecuritycode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "cardidentificationcode": {
            "value": "/card[ _-]?identification[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardidentificationcode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "cardvalidationnumber": {
            "value": "/card[ _-]?validation[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardvalidationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "cardverificationnumber": {
            "value": "/card[ _-]?verification[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardverificationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "eloverificationcode": {
            "value": "/(?:\\b|_|\\\\n)elo[ _-]?verification[ _-]?(?:number|num|no|code)/g",
            "confidenceDetailed": {
               "name": "eloverificationcode",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "securitycode": {
            "value": "/security[ _-]?code/g",
            "confidenceDetailed": {
               "name": "securitycode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cvv": {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ccvc": {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cvc": {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cid": {
            "value": "/^cid$/g",
            "confidenceDetailed": {
               "name": "cid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "csc": {
            "value": "/^csc$/g",
            "confidenceDetailed": {
               "name": "csc",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cvd": {
            "value": "/^cvd$/g",
            "confidenceDetailed": {
               "name": "cvd",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 61,
            "value": "/(?<cardsecuritycode>card[ _-]?security[ _-]?code)|(?<cardidentificationcode>card[ _-]?identification[ _-]?code)|(?<cardvalidationnumber>card[ _-]?validation[ _-]?(?:number|num|no|data|value|code))|(?<cardverificationnumber>card[ _-]?verification[ _-]?(?:number|num|no|data|value|code))|(?<eloverificationcode>(?:\\b|_|\\\\n)elo[ _-]?verification[ _-]?(?:number|num|no|code))|(?<securitycode>security[ _-]?code)|(?<cvv>(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n))|(?<ccvc>(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n))|(?<cvc>(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n))|(?<cid>^cid$)|(?<csc>^csc$)|(?<cvd>^cvd$)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "cardsecuritycode": {
            "value": "/card[ _-]?security[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardsecuritycode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "cardidentificationcode": {
            "value": "/card[ _-]?identification[ _-]?code/g",
            "confidenceDetailed": {
               "name": "cardidentificationcode",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "cardvalidationnumber": {
            "value": "/card[ _-]?validation[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardvalidationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "cardverificationnumber": {
            "value": "/card[ _-]?verification[ _-]?(?:number|num|no|data|value|code)/g",
            "confidenceDetailed": {
               "name": "cardverificationnumber",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "eloverificationcode": {
            "value": "/(?:\\b|_|\\\\n)elo[ _-]?verification[ _-]?(?:number|num|no|code)/g",
            "confidenceDetailed": {
               "name": "eloverificationcode",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "securitycodecolon": {
            "value": "/security[ _-]?code:/g",
            "confidenceDetailed": {
               "name": "securitycode:",
               "alternateCaptureGroupName": "securitycodecolon",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cvvFront": {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "alternateCaptureGroupName": "cvvFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cvvcFront": {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "alternateCaptureGroupName": "cvvcFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cvcFront": {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "alternateCaptureGroupName": "cvcFront",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cidFront": {
            "value": "/(?:\\b|_|\\\\n)cid(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cid",
               "alternateCaptureGroupName": "cidFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "cscFront": {
            "value": "/(?:\\b|_|\\\\n)csc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "csc",
               "alternateCaptureGroupName": "cscFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "cvdFront": {
            "value": "/(?:\\b|_|\\\\n)cvd(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvd",
               "alternateCaptureGroupName": "cvdFront",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "cvvBack": {
            "value": "/(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvv",
               "alternateCaptureGroupName": "cvvBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         "cvvcBack": {
            "value": "/(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ccvc",
               "alternateCaptureGroupName": "cvvcBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         },
         "cvcBack": {
            "value": "/(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cvc",
               "alternateCaptureGroupName": "cvcBack",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyBack": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 61,
            "value": "/(?<cardsecuritycode>card[ _-]?security[ _-]?code)|(?<cardidentificationcode>card[ _-]?identification[ _-]?code)|(?<cardvalidationnumber>card[ _-]?validation[ _-]?(?:number|num|no|data|value|code))|(?<cardverificationnumber>card[ _-]?verification[ _-]?(?:number|num|no|data|value|code))|(?<eloverificationcode>(?:\\b|_|\\\\n)elo[ _-]?verification[ _-]?(?:number|num|no|code))/"
         },
         {
            "maxRegexSourceLength": 32,
            "value": "/(?<securitycodecolon>security[ _-]?code:)|(?<cvvFront>(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n))|(?<cvvcFront>(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n))|(?<cvcFront>(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n))|(?<cidFront>(?:\\b|_|\\\\n)cid(?:\\b|_|\\\\n))|(?<cscFront>(?:\\b|_|\\\\n)csc(?:\\b|_|\\\\n))|(?<cvdFront>(?:\\b|_|\\\\n)cvd(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 32,
            "value": "/(?<cvvBack>(?:\\b|_|\\\\n)cvv2?(?:\\b|_|\\\\n))|(?<cvvcBack>(?:\\b|_|\\\\n)ccv[c2]?(?:\\b|_|\\\\n))|(?<cvcBack>(?:\\b|_|\\\\n)cvc2?(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyBack": true
         }
      ]
   },
   "TEST_CREDIT_CARD_NUMBER": {
      "regexes": [
         {
            "value": "/(?:(?:\\d{4}[- ]){3}\\d{4}|\\d{4}[ -]\\d{6}[ -]\\d{5})/g",
            "confidenceDetailed": {
               "name": "testcc1",
               "type": "reg",
               "confidence": 0.7
            }
         },
         {
            "value": "/\\d{14,19}/g",
            "confidenceDetailed": {
               "name": "testcc2",
               "type": "reg",
               "confidence": 0.65
            }
         }
      ],
      "regexCacheCategory": "CREDIT_CARD_NUMBER",
      "validator": "testCreditCard",
      "boosters": {
         "structured": {
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.25,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.95
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pan",
               "type": "nb",
               "confidence": 0.25
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)pan:/g",
            "confidenceDetailed": {
               "name": "pan:",
               "alternateCaptureGroupName": "pancolon",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "card",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boundaries": {
         "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
         "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
      },
      "havePossibleScanByDefault": true,
      "preBuiltStructuredNeighboursMap": {
         "creditcard": {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "paymentcardnumber": {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "primaryaccountnumber": {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "credcard": {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "atmcard": {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "visa": {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mastercard": {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "cardholder": {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "rewardscard": {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "platinumcard": {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "amex": {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citibank": {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "dinersclub": {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "discovercard": {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "japanesecardbureau": {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citi": {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "americanexpress": {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "wellsfargo": {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofamerica": {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "barclays": {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "capitalone": {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usbank": {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pncbank": {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usaa": {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasebank": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "morgan": {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "goldman": {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jpmorgan": {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "applecard": {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "synchrony": {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cabelaswfb": {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofsingapore": {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "banking": {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "ocbc": {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "hsbc": {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "firstnational": {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasefreedom": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cc": {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pan": {
            "value": "/(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jcb": {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pnc": {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "chase": {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "discover": {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "dbs": {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "uob": {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "posb": {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "financial": {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 84,
            "value": "/(?<creditcard>(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte))|(?<paymentcardnumber>payment[-_ ]?card[-_ ]?(?:number|num|no))|(?<primaryaccountnumber>primary[-_ ]?account[-_ ]?(?:number|num|no))|(?<credcard>cre?d?[-_ ]?card)|(?<atmcard>atm[-_ ]?card)|(?<visa>(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n))|(?<mastercard>master[ _-]?card)|(?<cardholder>cardholder)|(?<rewardscard>rewards?[-_ ]?card)|(?<platinumcard>platinum[-_ ]?card)|(?<amex>(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n))|(?<citibank>citibank)|(?<dinersclub>diner'?s[ _-]?club)|(?<discovercard>discover[ _-]?card)|(?<japanesecardbureau>japanese[ _-]?card[ _-]?bureau)|(?<citi>(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n))|(?<americanexpress>american[ _-]?express)|(?<wellsfargo>wells[ _-]?fargo)|(?<bankofamerica>bank[ _-]?of[ _-]?america)|(?<barclays>barclays)|(?<capitalone>capital[ _-]?one)|(?<usbank>(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n))|(?<pncbank>(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n))|(?<usaa>(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n))|(?<chasebank>(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n))|(?<morgan>(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n))|(?<goldman>(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n))|(?<jpmorgan>(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n))|(?<applecard>(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n))|(?<synchrony>(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n))|(?<cabelaswfb>(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n))|(?<bankofsingapore>(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n))|(?<banking>(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n))|(?<ocbc>(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n))|(?<hsbc>(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n))|(?<firstnational>(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n))|(?<chasefreedom>(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n))|(?<cc>(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n))|(?<pan>(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n))|(?<jcb>(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n))|(?<pnc>(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n))|(?<chase>(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n))|(?<discover>(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n))|(?<dbs>(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n))|(?<uob>(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n))|(?<posb>(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n))|(?<financial>(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "creditcard": {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "paymentcardnumber": {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "primaryaccountnumber": {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "credcard": {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "atmcard": {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "visa": {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mastercard": {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "cardholder": {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "rewardscard": {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "platinumcard": {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "amex": {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citibank": {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "dinersclub": {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "discovercard": {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "japanesecardbureau": {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citi": {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "americanexpress": {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "wellsfargo": {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofamerica": {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "barclays": {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "capitalone": {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usbank": {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pncbank": {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usaa": {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasebank": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "morgan": {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "goldman": {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jpmorgan": {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "applecard": {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "synchrony": {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cabelaswfb": {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofsingapore": {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "banking": {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "ocbc": {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "hsbc": {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "firstnational": {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasefreedom": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pancolon": {
            "value": "/(?:\\b|_|\\\\n)pan:/g",
            "confidenceDetailed": {
               "name": "pan:",
               "alternateCaptureGroupName": "pancolon",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "cc": {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "card": {
            "value": "/card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "card",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "jcb": {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pnc": {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "chase": {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "discover": {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "dbs": {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "uob": {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "posb": {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "financial": {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 84,
            "value": "/(?<creditcard>(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte))|(?<paymentcardnumber>payment[-_ ]?card[-_ ]?(?:number|num|no))|(?<primaryaccountnumber>primary[-_ ]?account[-_ ]?(?:number|num|no))|(?<credcard>cre?d?[-_ ]?card)|(?<atmcard>atm[-_ ]?card)|(?<visa>(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n))|(?<mastercard>master[ _-]?card)|(?<cardholder>cardholder)|(?<rewardscard>rewards?[-_ ]?card)|(?<platinumcard>platinum[-_ ]?card)|(?<amex>(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n))|(?<citibank>citibank)|(?<dinersclub>diner'?s[ _-]?club)|(?<discovercard>discover[ _-]?card)|(?<japanesecardbureau>japanese[ _-]?card[ _-]?bureau)|(?<citi>(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n))|(?<americanexpress>american[ _-]?express)|(?<wellsfargo>wells[ _-]?fargo)|(?<bankofamerica>bank[ _-]?of[ _-]?america)|(?<barclays>barclays)|(?<capitalone>capital[ _-]?one)|(?<usbank>(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n))|(?<pncbank>(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n))|(?<usaa>(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n))|(?<chasebank>(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n))|(?<morgan>(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n))|(?<goldman>(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n))|(?<jpmorgan>(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n))|(?<applecard>(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n))|(?<synchrony>(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n))|(?<cabelaswfb>(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n))|(?<bankofsingapore>(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n))|(?<banking>(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n))|(?<ocbc>(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n))|(?<hsbc>(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n))|(?<firstnational>(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n))|(?<chasefreedom>(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n))|(?<jcb>(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n))|(?<pnc>(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n))|(?<chase>(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n))|(?<discover>(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n))|(?<dbs>(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n))|(?<uob>(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n))|(?<posb>(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n))|(?<financial>(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n))/"
         },
         {
            "maxRegexSourceLength": 26,
            "value": "/(?<pancolon>(?:\\b|_|\\\\n)pan:)|(?<cc>(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n))|(?<card>card(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "CREDIT_CARD_NUMBER": {
      "regexes": [
         {
            "value": "/(?:(?:\\d{4}[- ]){3}\\d{4}|\\d{4}[ -]\\d{6}[ -]\\d{5})/g",
            "confidenceDetailed": {
               "name": "cc1",
               "type": "reg",
               "confidence": 0.7
            }
         },
         {
            "value": "/\\d{14,19}/g",
            "confidenceDetailed": {
               "name": "cc2",
               "type": "reg",
               "confidence": 0.65
            }
         }
      ],
      "regexCacheCategory": "CREDIT_CARD_NUMBER",
      "validator": "creditCard",
      "boosters": {
         "structured": {
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.25,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.95
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pan",
               "type": "nb",
               "confidence": 0.25
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)pan:/g",
            "confidenceDetailed": {
               "name": "pan:",
               "alternateCaptureGroupName": "pancolon",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "card",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boundaries": {
         "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
         "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
      },
      "havePossibleScanByDefault": true,
      "preBuiltStructuredNeighboursMap": {
         "creditcard": {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "paymentcardnumber": {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "primaryaccountnumber": {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "credcard": {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "atmcard": {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "visa": {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mastercard": {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "cardholder": {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "rewardscard": {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "platinumcard": {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "amex": {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citibank": {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "dinersclub": {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "discovercard": {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "japanesecardbureau": {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citi": {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "americanexpress": {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "wellsfargo": {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofamerica": {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "barclays": {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "capitalone": {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usbank": {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pncbank": {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usaa": {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasebank": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "morgan": {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "goldman": {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jpmorgan": {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "applecard": {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "synchrony": {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cabelaswfb": {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofsingapore": {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "banking": {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "ocbc": {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "hsbc": {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "firstnational": {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasefreedom": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cc": {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pan": {
            "value": "/(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jcb": {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pnc": {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "chase": {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "discover": {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "dbs": {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "uob": {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "posb": {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "financial": {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 84,
            "value": "/(?<creditcard>(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte))|(?<paymentcardnumber>payment[-_ ]?card[-_ ]?(?:number|num|no))|(?<primaryaccountnumber>primary[-_ ]?account[-_ ]?(?:number|num|no))|(?<credcard>cre?d?[-_ ]?card)|(?<atmcard>atm[-_ ]?card)|(?<visa>(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n))|(?<mastercard>master[ _-]?card)|(?<cardholder>cardholder)|(?<rewardscard>rewards?[-_ ]?card)|(?<platinumcard>platinum[-_ ]?card)|(?<amex>(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n))|(?<citibank>citibank)|(?<dinersclub>diner'?s[ _-]?club)|(?<discovercard>discover[ _-]?card)|(?<japanesecardbureau>japanese[ _-]?card[ _-]?bureau)|(?<citi>(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n))|(?<americanexpress>american[ _-]?express)|(?<wellsfargo>wells[ _-]?fargo)|(?<bankofamerica>bank[ _-]?of[ _-]?america)|(?<barclays>barclays)|(?<capitalone>capital[ _-]?one)|(?<usbank>(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n))|(?<pncbank>(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n))|(?<usaa>(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n))|(?<chasebank>(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n))|(?<morgan>(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n))|(?<goldman>(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n))|(?<jpmorgan>(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n))|(?<applecard>(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n))|(?<synchrony>(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n))|(?<cabelaswfb>(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n))|(?<bankofsingapore>(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n))|(?<banking>(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n))|(?<ocbc>(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n))|(?<hsbc>(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n))|(?<firstnational>(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n))|(?<chasefreedom>(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n))|(?<cc>(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n))|(?<pan>(?:\\b|_|\\\\n)pan(?:\\b|_|\\\\n))|(?<jcb>(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n))|(?<pnc>(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n))|(?<chase>(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n))|(?<discover>(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n))|(?<dbs>(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n))|(?<uob>(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n))|(?<posb>(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n))|(?<financial>(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "creditcard": {
            "value": "/(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte)/g",
            "confidenceDetailed": {
               "name": "creditcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "paymentcardnumber": {
            "value": "/payment[-_ ]?card[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "paymentcardnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "primaryaccountnumber": {
            "value": "/primary[-_ ]?account[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "primaryaccountnumber",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "credcard": {
            "value": "/cre?d?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "credcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "atmcard": {
            "value": "/atm[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "atmcard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "visa": {
            "value": "/(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "visa",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mastercard": {
            "value": "/master[ _-]?card/g",
            "confidenceDetailed": {
               "name": "mastercard",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "cardholder": {
            "value": "/cardholder/g",
            "confidenceDetailed": {
               "name": "cardholder",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "rewardscard": {
            "value": "/rewards?[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "rewardscard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "platinumcard": {
            "value": "/platinum[-_ ]?card/g",
            "confidenceDetailed": {
               "name": "platinumcard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "amex": {
            "value": "/(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "amex",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citibank": {
            "value": "/citibank/g",
            "confidenceDetailed": {
               "name": "citibank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "dinersclub": {
            "value": "/diner'?s[ _-]?club/g",
            "confidenceDetailed": {
               "name": "dinersclub",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "discovercard": {
            "value": "/discover[ _-]?card/g",
            "confidenceDetailed": {
               "name": "discovercard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "japanesecardbureau": {
            "value": "/japanese[ _-]?card[ _-]?bureau/g",
            "confidenceDetailed": {
               "name": "japanesecardbureau",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "citi": {
            "value": "/(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "citi",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "americanexpress": {
            "value": "/american[ _-]?express/g",
            "confidenceDetailed": {
               "name": "americanexpress",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "wellsfargo": {
            "value": "/wells[ _-]?fargo/g",
            "confidenceDetailed": {
               "name": "wellsfargo",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofamerica": {
            "value": "/bank[ _-]?of[ _-]?america/g",
            "confidenceDetailed": {
               "name": "bankofamerica",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "barclays": {
            "value": "/barclays/g",
            "confidenceDetailed": {
               "name": "barclays",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "capitalone": {
            "value": "/capital[ _-]?one/g",
            "confidenceDetailed": {
               "name": "capitalone",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usbank": {
            "value": "/(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pncbank": {
            "value": "/(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pncbank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "usaa": {
            "value": "/(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "usaa",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasebank": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasebank",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "morgan": {
            "value": "/(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "morgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "goldman": {
            "value": "/(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "goldman",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "jpmorgan": {
            "value": "/(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jpmorgan",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "applecard": {
            "value": "/(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "applecard",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "synchrony": {
            "value": "/(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "synchrony",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "cabelaswfb": {
            "value": "/(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cabelaswfb",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bankofsingapore": {
            "value": "/(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bankofsingapore",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "banking": {
            "value": "/(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "banking",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "ocbc": {
            "value": "/(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ocbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "hsbc": {
            "value": "/(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "hsbc",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "firstnational": {
            "value": "/(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "firstnational",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "chasefreedom": {
            "value": "/(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chasefreedom",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "pancolon": {
            "value": "/(?:\\b|_|\\\\n)pan:/g",
            "confidenceDetailed": {
               "name": "pan:",
               "alternateCaptureGroupName": "pancolon",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "cc": {
            "value": "/(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cc",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "card": {
            "value": "/card(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "card",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true
         },
         "jcb": {
            "value": "/(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "jcb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "pnc": {
            "value": "/(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "pnc",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "chase": {
            "value": "/(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "chase",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "discover": {
            "value": "/(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "discover",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "dbs": {
            "value": "/(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dbs",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "uob": {
            "value": "/(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "uob",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "posb": {
            "value": "/(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "posb",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "financial": {
            "value": "/(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "financial",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 84,
            "value": "/(?<creditcard>(?:kredit|credit|bank|blanche|debit|atm|check|bancaire|numero).*(?:card|carte|karte))|(?<paymentcardnumber>payment[-_ ]?card[-_ ]?(?:number|num|no))|(?<primaryaccountnumber>primary[-_ ]?account[-_ ]?(?:number|num|no))|(?<credcard>cre?d?[-_ ]?card)|(?<atmcard>atm[-_ ]?card)|(?<visa>(?:\\b|_|\\\\n)visa(?:\\b|_|\\\\n))|(?<mastercard>master[ _-]?card)|(?<cardholder>cardholder)|(?<rewardscard>rewards?[-_ ]?card)|(?<platinumcard>platinum[-_ ]?card)|(?<amex>(?:\\b|_|\\\\n)amex(?:\\b|_|\\\\n))|(?<citibank>citibank)|(?<dinersclub>diner'?s[ _-]?club)|(?<discovercard>discover[ _-]?card)|(?<japanesecardbureau>japanese[ _-]?card[ _-]?bureau)|(?<citi>(?:\\b|_|\\\\n)citi(?:\\b|_|\\\\n))|(?<americanexpress>american[ _-]?express)|(?<wellsfargo>wells[ _-]?fargo)|(?<bankofamerica>bank[ _-]?of[ _-]?america)|(?<barclays>barclays)|(?<capitalone>capital[ _-]?one)|(?<usbank>(?:\\b|_|\\\\n)u\\.?s\\.?[ _-]?bank(?:\\b|_|\\\\n))|(?<pncbank>(?:\\b|_|\\\\n)pnc[ _-]?bank(?:\\b|_|\\\\n))|(?<usaa>(?:\\b|_|\\\\n)usaa(?:\\b|_|\\\\n))|(?<chasebank>(?:\\b|_|\\\\n)chase[ _-]?bank(?:\\b|_|\\\\n))|(?<morgan>(?:\\b|_|\\\\n)morgan(?:\\b|_|\\\\n))|(?<goldman>(?:\\b|_|\\\\n)goldman(?:\\b|_|\\\\n))|(?<jpmorgan>(?:\\b|_|\\\\n)jp[ _-]?morgan(?:\\b|_|\\\\n))|(?<applecard>(?:\\b|_|\\\\n)apple[ _-]?card(?:\\b|_|\\\\n))|(?<synchrony>(?:\\b|_|\\\\n)synchrony(?:\\b|_|\\\\n))|(?<cabelaswfb>(?:\\b|_|\\\\n)cabela’?s[ _-]?wfb(?:\\b|_|\\\\n))|(?<bankofsingapore>(?:\\b|_|\\\\n)bank[ _-]?of[ _-]?[a-z]+(?:\\b|_|\\\\n))|(?<banking>(?:\\b|_|\\\\n)banking(?:\\b|_|\\\\n))|(?<ocbc>(?:\\b|_|\\\\n)ocbc(?:\\b|_|\\\\n))|(?<hsbc>(?:\\b|_|\\\\n)hsbc(?:\\b|_|\\\\n))|(?<firstnational>(?:\\b|_|\\\\n)first[ _-]?national(?:\\b|_|\\\\n))|(?<chasefreedom>(?:\\b|_|\\\\n)chase[ _-]?freedom(?:\\b|_|\\\\n))|(?<jcb>(?:\\b|_|\\\\n)jcb(?:\\b|_|\\\\n))|(?<pnc>(?:\\b|_|\\\\n)pnc(?:\\b|_|\\\\n))|(?<chase>(?:\\b|_|\\\\n)chase(?:\\b|_|\\\\n))|(?<discover>(?:\\b|_|\\\\n)discover(?:\\b|_|\\\\n))|(?<dbs>(?:\\b|_|\\\\n)dbs(?:\\b|_|\\\\n))|(?<uob>(?:\\b|_|\\\\n)uob(?:\\b|_|\\\\n))|(?<posb>(?:\\b|_|\\\\n)posb(?:\\b|_|\\\\n))|(?<financial>(?:\\b|_|\\\\n)financial(?:\\b|_|\\\\n))/"
         },
         {
            "maxRegexSourceLength": 26,
            "value": "/(?<pancolon>(?:\\b|_|\\\\n)pan:)|(?<cc>(?:\\b|_|\\\\n)cc(?:\\b|_|\\\\n))|(?<card>card(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "DOMAIN_NAME": {
      "regexes": [
         {
            "value": "/\\b(?:https?:\\/\\/)?(?:www\\.)?(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])(?:(?:\\/[A-Za-z0-9][A-Za-z0-9-]*)*(?:\\.[A-Za-z0-9]+)?)?(?:\\?[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*(?:&[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*)*)?\\b/gi",
            "confidenceDetailed": {
               "name": "domain1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "validator": "domain",
      "neighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)https?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "http",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)web(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "web",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)link(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "link",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ur[il](?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "url",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)website(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "website",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)domain(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "domain",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)endpoint(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "endpoint",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)tls(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tls",
               "type": "nb",
               "confidence": 0.2
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.125,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "LATITUDE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.125,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "LONGITUDE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PUBLIC_PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "noBoundaryException": true,
      "alts": [
         "DOMAIN_NAME_2",
         "DOMAIN_NAME_3"
      ],
      "compulsoryInternal": true,
      "preBuiltStructuredNeighboursMap": {
         "http": {
            "value": "/(?:\\b|_|\\\\n)https?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "http",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "web": {
            "value": "/(?:\\b|_|\\\\n)web(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "web",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "link": {
            "value": "/(?:\\b|_|\\\\n)link(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "link",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "url": {
            "value": "/(?:\\b|_|\\\\n)ur[il](?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "url",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "website": {
            "value": "/(?:\\b|_|\\\\n)website(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "website",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "domain": {
            "value": "/(?:\\b|_|\\\\n)domain(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "domain",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "endpoint": {
            "value": "/(?:\\b|_|\\\\n)endpoint(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "endpoint",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "tls": {
            "value": "/(?:\\b|_|\\\\n)tls(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tls",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 32,
            "value": "/(?<http>(?:\\b|_|\\\\n)https?(?:\\b|_|\\\\n))|(?<web>(?:\\b|_|\\\\n)web(?:\\b|_|\\\\n))|(?<link>(?:\\b|_|\\\\n)link(?:\\b|_|\\\\n))|(?<url>(?:\\b|_|\\\\n)ur[il](?:\\b|_|\\\\n))|(?<website>(?:\\b|_|\\\\n)website(?:\\b|_|\\\\n))|(?<domain>(?:\\b|_|\\\\n)domain(?:\\b|_|\\\\n))|(?<endpoint>(?:\\b|_|\\\\n)endpoint(?:\\b|_|\\\\n))|(?<tls>(?:\\b|_|\\\\n)tls(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "http": {
            "value": "/(?:\\b|_|\\\\n)https?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "http",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "web": {
            "value": "/(?:\\b|_|\\\\n)web(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "web",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "link": {
            "value": "/(?:\\b|_|\\\\n)link(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "link",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "url": {
            "value": "/(?:\\b|_|\\\\n)ur[il](?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "url",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "website": {
            "value": "/(?:\\b|_|\\\\n)website(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "website",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "domain": {
            "value": "/(?:\\b|_|\\\\n)domain(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "domain",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "endpoint": {
            "value": "/(?:\\b|_|\\\\n)endpoint(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "endpoint",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "tls": {
            "value": "/(?:\\b|_|\\\\n)tls(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tls",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 32,
            "value": "/(?<http>(?:\\b|_|\\\\n)https?(?:\\b|_|\\\\n))|(?<web>(?:\\b|_|\\\\n)web(?:\\b|_|\\\\n))|(?<link>(?:\\b|_|\\\\n)link(?:\\b|_|\\\\n))|(?<url>(?:\\b|_|\\\\n)ur[il](?:\\b|_|\\\\n))|(?<website>(?:\\b|_|\\\\n)website(?:\\b|_|\\\\n))|(?<domain>(?:\\b|_|\\\\n)domain(?:\\b|_|\\\\n))|(?<endpoint>(?:\\b|_|\\\\n)endpoint(?:\\b|_|\\\\n))|(?<tls>(?:\\b|_|\\\\n)tls(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "DOMAIN_NAME_2": {
      "regexes": [
         {
            "value": "/\\bhttps?:\\/\\/(?:www\\.)?(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])(?:(?:\\/[A-Za-z0-9][A-Za-z0-9-]*)*(?:\\.[A-Za-z0-9]+)?)?(?:\\?[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*(?:&[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*)*)?\\b/gi",
            "confidenceDetailed": {
               "name": "domain_2_1",
               "type": "reg",
               "confidence": 0.95
            }
         },
         {
            "value": "/www\\.(?:(?:[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.)+[A-Za-z0-9](?:[A-Za-z0-9-]*[A-Za-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[A-Za-z0-9-]*[A-Za-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])(?:(?:\\/[A-Za-z0-9][A-Za-z0-9-]*)*(?:\\.[A-Za-z0-9]+)?)?(?:\\?[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*(?:&[-$_.+! *\\'(),A-Za-z0-9]+=[-$_.+! *\\'(),A-Za-z0-9]*)*)?\\b/gi",
            "confidenceDetailed": {
               "name": "domain_2_2",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "noBoundaryException": true,
      "altname": "DOMAIN_NAME",
      "compulsoryInternal": true
   },
   "DOMAIN_NAME_3": {
      "regexes": [
         {
            "value": "/[A-Za-z0-9]{4}(?:[A-Za-z0-9-]*[A-Za-z0-9])?\\.(?:com|net|org|gov)(?![A-Za-z0-9/_-])/gi",
            "confidenceDetailed": {
               "name": "domain_3_1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         }
      },
      "altname": "DOMAIN_NAME",
      "compulsoryInternal": true
   },
   "EMAIL_ADDRESS": {
      "regexes": [
         {
            "value": "/\\b[a-z0-9.+_-]+@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])\\b/gi",
            "confidenceDetailed": {
               "name": "email1",
               "type": "reg",
               "confidence": 1
            }
         }
      ],
      "validator": "email",
      "noBoundaryException": true,
      "compulsoryInternal": true
   },
   "IBAN_CODE": {
      "regexes": [
         {
            "value": "/[A-Z]{2}\\d{2}[ _-]?[A-Z0-9]{4}[ _-]?[A-Z0-9]{4}[ _-]?[A-Z0-9]{3,4}(?:[ _-]?[A-Z\\d]{4}){0,3}(?:[ _-]?[A-Z\\d]{1,3})?/g",
            "confidenceDetailed": {
               "name": "iban1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "validator": "iban",
      "boosters": {
         "structured": {
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.25,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.8
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      }
   },
   "IP_ADDRESS": {
      "regexes": [
         {
            "value": "/(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:[\\/\\\\][1-3]?[0-9])?/g",
            "confidenceDetailed": {
               "name": "ip1",
               "type": "reg",
               "confidence": 0.9
            }
         },
         {
            "value": "/[0-9a-f]{0,4}(?::[0-9a-f]{0,4}){5}(?<![0-9a-f]{2}(?::[0-9a-f]{2}){5})(?:(?::[0-9a-f]{0,4}){2})?(?:\\/[0-9]+)?/g",
            "confidenceDetailed": {
               "name": "ip2",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "regexCacheCategory": "IP_ADDRESS",
      "neighbours": [
         {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "validator": "ip_address",
      "boosters": {
         "tokenLevel": {
            "ipAddressAllSmallNumberNotRepeated": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "ipTokenAllSmallNumberNotRepeated",
                     "type": "bst"
                  },
                  "params": {}
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9.:-])/g",
            "back": "/(?![a-zA-Z0-9.:-])/g"
         }
      },
      "compulsoryInternal": true,
      "preBuiltStructuredNeighboursMap": {
         "ipaddress": {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ip": {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "address": {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "network": {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<ipaddress>ip[ _-]?(?:add?r?|add?ress))|(?<ip>(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n))|(?<address>(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n))|(?<network>(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "ipaddress": {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ip": {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "address": {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "network": {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<ipaddress>ip[ _-]?(?:add?r?|add?ress))|(?<ip>(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n))|(?<address>(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n))|(?<network>(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "USER_IP_ADDRESS": {
      "regexes": [
         {
            "value": "/(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])(?:[\\/\\\\][1-3]?[0-9])?/g",
            "confidenceDetailed": {
               "name": "user_ip1",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/[0-9a-f]{0,4}(?::[0-9a-f]{0,4}){5}(?<![0-9a-f]{2}(?::[0-9a-f]{2}){5})(?:(?::[0-9a-f]{0,4}){2})?(?:\\/[0-9]+)?/g",
            "confidenceDetailed": {
               "name": "user_ip2",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "regexCacheCategory": "IP_ADDRESS",
      "neighbours": [
         {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "validator": "ip_address",
      "boosters": {
         "tokenLevel": {
            "ipAddressAllSmallNumberNotRepeated": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "ipTokenAllSmallNumberNotRepeated",
                     "type": "bst"
                  },
                  "params": {}
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.25,
                     "name": "friend",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "US_ADOPTION_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_EMPLOYER_IDENTIFICATION_NUMBER",
                        "US_INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_PREPARER_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_PHONE_NUMBER",
                        "CREDIT_CARD_NUMBER",
                        "CVV",
                        "DATE_OF_EXPIRY",
                        "UK_DRIVER_LICENSE_NUMBER",
                        "US_PASSPORT_NUMBER",
                        "US_SOCIAL_SECURITY_NUMBER",
                        "PERSON_NAME",
                        "IBAN_CODE",
                        "SINGAPORE_NATIONAL_REGISTRATION_ID_NUMBER",
                        "EMAIL_ADDRESS",
                        "PHONE_NUMBER",
                        "SWIFT_CODE",
                        "AMERICAN_BANKERS_CUSIP_ID",
                        "US_BANK_ROUTING_MICR",
                        "US_VEHICLE_IDENTIFICATION_NUMBER",
                        "TURKEY_PHONE_NUMBER",
                        "TURKEY_IDENTITY_NUMBER",
                        "RHS_ACCOUNT_ID",
                        "BRAZIL_IDENTITY_NUMBER",
                        "AGE",
                        "AGE_RANGE",
                        "GENDER",
                        "SOCIAL_NETWORK_ID",
                        "SINGAPORE_PHONE_NUMBER",
                        "DATE_OF_BIRTH",
                        "AUSTRALIA_DRIVER_LICENSE_NUMBER",
                        "AUSTRALIA_PASSPORT_NUMBER",
                        "AUSTRALIA_PHONE_NUMBER",
                        "AUSTRALIA_TAX_FILE_NUMBER",
                        "TAIWAN_DRIVER_LICENSE_NUMBER",
                        "TAIWAN_NATIONAL_HEALTH_INSURANCE_NUMBER",
                        "TAIWAN_NATIONAL_ID_NUMBER",
                        "TAIWAN_PASSPORT_NUMBER",
                        "TAIWAN_PHONE_NUMBER",
                        "TAIWAN_RESIDENT_CERTIFICATE",
                        "PASSPORT_NUMBER",
                        "DRIVER_LICENSE_NUMBER",
                        "INCOME",
                        "INCOME_RANGE",
                        "RACE",
                        "RELIGION",
                        "ETHNIC_GROUP",
                        "EDUCATION_QUALIFICATION",
                        "EMPLOYMENT_STATUS",
                        "RHS_APEX_ID",
                        "RHS_USER_UUID",
                        "RHS_DEVICE_ID",
                        "MALAYSIA_IDENTITY_NUMBER",
                        "INDONESIA_IDENTITY_NUMBER",
                        "VIETNAM_IDENTITY_NUMBER",
                        "PHILIPPINES_IDENTITY_NUMBER",
                        "THAILAND_IDENTITY_NUMBER",
                        "LICENSE_PLATE_NUMBER",
                        "TURKEY_POSTAL_CODE",
                        "US_ZIP_CODE",
                        "TAIWAN_POSTAL_CODE",
                        "SINGAPORE_POSTAL_CODE",
                        "AUSTRALIA_POSTAL_CODE",
                        "POSTAL_CODE"
                     ]
                  }
               }
            ]
         },
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.25,
                     "name": "friend",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "US_ADOPTION_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_EMPLOYER_IDENTIFICATION_NUMBER",
                        "US_INDIVIDUAL_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_PREPARER_TAXPAYER_IDENTIFICATION_NUMBER",
                        "US_PHONE_NUMBER",
                        "CREDIT_CARD_NUMBER",
                        "CVV",
                        "DATE_OF_EXPIRY",
                        "UK_DRIVER_LICENSE_NUMBER",
                        "US_PASSPORT_NUMBER",
                        "US_SOCIAL_SECURITY_NUMBER",
                        "PERSON_NAME",
                        "IBAN_CODE",
                        "SINGAPORE_NATIONAL_REGISTRATION_ID_NUMBER",
                        "EMAIL_ADDRESS",
                        "PHONE_NUMBER",
                        "SWIFT_CODE",
                        "AMERICAN_BANKERS_CUSIP_ID",
                        "US_BANK_ROUTING_MICR",
                        "US_VEHICLE_IDENTIFICATION_NUMBER",
                        "TURKEY_PHONE_NUMBER",
                        "TURKEY_IDENTITY_NUMBER",
                        "RHS_ACCOUNT_ID",
                        "BRAZIL_IDENTITY_NUMBER",
                        "AGE",
                        "AGE_RANGE",
                        "GENDER",
                        "SOCIAL_NETWORK_ID",
                        "SINGAPORE_PHONE_NUMBER",
                        "DATE_OF_BIRTH",
                        "AUSTRALIA_DRIVER_LICENSE_NUMBER",
                        "AUSTRALIA_PASSPORT_NUMBER",
                        "AUSTRALIA_PHONE_NUMBER",
                        "AUSTRALIA_TAX_FILE_NUMBER",
                        "TAIWAN_DRIVER_LICENSE_NUMBER",
                        "TAIWAN_NATIONAL_HEALTH_INSURANCE_NUMBER",
                        "TAIWAN_NATIONAL_ID_NUMBER",
                        "TAIWAN_PASSPORT_NUMBER",
                        "TAIWAN_PHONE_NUMBER",
                        "TAIWAN_RESIDENT_CERTIFICATE",
                        "PASSPORT_NUMBER",
                        "DRIVER_LICENSE_NUMBER",
                        "INCOME",
                        "INCOME_RANGE",
                        "RACE",
                        "RELIGION",
                        "ETHNIC_GROUP",
                        "EDUCATION_QUALIFICATION",
                        "EMPLOYMENT_STATUS",
                        "RHS_APEX_ID",
                        "RHS_USER_UUID",
                        "RHS_DEVICE_ID",
                        "MALAYSIA_IDENTITY_NUMBER",
                        "INDONESIA_IDENTITY_NUMBER",
                        "VIETNAM_IDENTITY_NUMBER",
                        "PHILIPPINES_IDENTITY_NUMBER",
                        "THAILAND_IDENTITY_NUMBER",
                        "LICENSE_PLATE_NUMBER"
                     ]
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9.:-])/g",
            "back": "/(?![a-zA-Z0-9.:-])/g"
         }
      },
      "isSubsetOf": "IP_ADDRESS",
      "isRequirePIIVersionOf": "IP_ADDRESS",
      "preBuiltStructuredNeighboursMap": {
         "ipaddress": {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ip": {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "address": {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "network": {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<ipaddress>ip[ _-]?(?:add?r?|add?ress))|(?<ip>(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n))|(?<address>(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n))|(?<network>(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "ipaddress": {
            "value": "/ip[ _-]?(?:add?r?|add?ress)/g",
            "confidenceDetailed": {
               "name": "ipaddress",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ip": {
            "value": "/(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "ip",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "address": {
            "value": "/(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "address",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "network": {
            "value": "/(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "network",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<ipaddress>ip[ _-]?(?:add?r?|add?ress))|(?<ip>(?:\\b|_|\\\\n)ip(?:\\b|_|\\\\n))|(?<address>(?:\\b|_|\\\\n)address(?:\\b|_|\\\\n))|(?<network>(?:\\b|_|\\\\n)network(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "PHONE_NUMBER": {
      "regexes": [
         {
            "value": "/(?:\\d{1,4}\\)?[-. ]?)?\\(?\\d{2,5}\\)?[-. ]?(?:\\d[-. ]?){0,11}\\d/g",
            "confidenceDetailed": {
               "name": "phone1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "phone",
      "neighbours": [
         {
            "value": "/phone[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "phonenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/mobile[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "mobilenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/contact[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "contactnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:home|work|cell)[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "cellnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:home|work|cell)[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "cellphone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/mobile[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "mobilephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/number[ _-]?to[ _-]?(?:call|contact|phone|dial)/g",
            "confidenceDetailed": {
               "name": "numbertocall",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/telephone/g",
            "confidenceDetailed": {
               "name": "telephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)telefone?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "telefon",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/hotline/g",
            "confidenceDetailed": {
               "name": "hotline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/landline/g",
            "confidenceDetailed": {
               "name": "landline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)phone[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "phone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)fax(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fax",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)mobile[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mobile",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)contact(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "contact",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)cell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)dial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dial",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tele",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^from$/g",
            "confidenceDetailed": {
               "name": "from",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^to$/g",
            "confidenceDetailed": {
               "name": "to",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tele",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)tel:/g",
            "confidenceDetailed": {
               "name": "tel:",
               "alternateCaptureGroupName": "telcolon",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)ph:/g",
            "confidenceDetailed": {
               "name": "ph:",
               "alternateCaptureGroupName": "phcolon",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "matchExact": true,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?:\\(|\\+|\\(\\+|(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`(\\[“‘\\|,;:]|(?:\\s|[a-zA-Z])[:=])|\\s-))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?:\\(|\\+|\\(\\+|(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`(\\[“‘\\|,;:]|(?:\\s|[a-zA-Z])[:=])|\\s-))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         }
      },
      "neighbourhoodLength": 15,
      "preBuiltStructuredNeighboursMap": {
         "phonenumber": {
            "value": "/phone[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "phonenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "mobilenumber": {
            "value": "/mobile[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "mobilenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "contactnumber": {
            "value": "/contact[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "contactnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cellnumber": {
            "value": "/(?:home|work|cell)[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "cellnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cellphone": {
            "value": "/(?:home|work|cell)[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "cellphone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "mobilephone": {
            "value": "/mobile[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "mobilephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "numbertocall": {
            "value": "/number[ _-]?to[ _-]?(?:call|contact|phone|dial)/g",
            "confidenceDetailed": {
               "name": "numbertocall",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "telephone": {
            "value": "/telephone/g",
            "confidenceDetailed": {
               "name": "telephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "telefon": {
            "value": "/(?:\\b|_|\\\\n)telefone?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "telefon",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "hotline": {
            "value": "/hotline/g",
            "confidenceDetailed": {
               "name": "hotline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "landline": {
            "value": "/landline/g",
            "confidenceDetailed": {
               "name": "landline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "phone": {
            "value": "/(?:\\b|_|\\\\n)phone[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "phone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "fax": {
            "value": "/(?:\\b|_|\\\\n)fax(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fax",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "mobile": {
            "value": "/(?:\\b|_|\\\\n)mobile[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mobile",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "contact": {
            "value": "/(?:\\b|_|\\\\n)contact(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "contact",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cell": {
            "value": "/(?:\\b|_|\\\\n)cell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "dial": {
            "value": "/(?:\\b|_|\\\\n)dial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dial",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "tele": {
            "value": "/(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tele",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "from": {
            "value": "/^from$/g",
            "confidenceDetailed": {
               "name": "from",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "to": {
            "value": "/^to$/g",
            "confidenceDetailed": {
               "name": "to",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 47,
            "value": "/(?<phonenumber>phone[ _-]?(?:number|num|no))|(?<mobilenumber>mobile[ _-]?(?:number|num|no))|(?<contactnumber>contact[ _-]?(?:number|num|no))|(?<cellnumber>(?:home|work|cell)[ _-]?(?:number|num|no))|(?<cellphone>(?:home|work|cell)[ _-]?phone)|(?<mobilephone>mobile[ _-]?phone)|(?<numbertocall>number[ _-]?to[ _-]?(?:call|contact|phone|dial))|(?<telephone>telephone)|(?<telefon>(?:\\b|_|\\\\n)telefone?(?:\\b|_|\\\\n))|(?<hotline>hotline)|(?<landline>landline)|(?<phone>(?:\\b|_|\\\\n)phone[0-9]?(?:\\b|_|\\\\n))|(?<fax>(?:\\b|_|\\\\n)fax(?:\\b|_|\\\\n))|(?<mobile>(?:\\b|_|\\\\n)mobile[0-9]?(?:\\b|_|\\\\n))|(?<contact>(?:\\b|_|\\\\n)contact(?:\\b|_|\\\\n))|(?<cell>(?:\\b|_|\\\\n)cell(?:\\b|_|\\\\n))|(?<dial>(?:\\b|_|\\\\n)dial(?:\\b|_|\\\\n))|(?<tele>(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n))|(?<from>^from$)|(?<to>^to$)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "phonenumber": {
            "value": "/phone[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "phonenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "mobilenumber": {
            "value": "/mobile[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "mobilenumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "contactnumber": {
            "value": "/contact[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "contactnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cellnumber": {
            "value": "/(?:home|work|cell)[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "cellnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cellphone": {
            "value": "/(?:home|work|cell)[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "cellphone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "mobilephone": {
            "value": "/mobile[ _-]?phone/g",
            "confidenceDetailed": {
               "name": "mobilephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "numbertocall": {
            "value": "/number[ _-]?to[ _-]?(?:call|contact|phone|dial)/g",
            "confidenceDetailed": {
               "name": "numbertocall",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "telephone": {
            "value": "/telephone/g",
            "confidenceDetailed": {
               "name": "telephone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "telefon": {
            "value": "/(?:\\b|_|\\\\n)telefone?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "telefon",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "hotline": {
            "value": "/hotline/g",
            "confidenceDetailed": {
               "name": "hotline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "landline": {
            "value": "/landline/g",
            "confidenceDetailed": {
               "name": "landline",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "phone": {
            "value": "/(?:\\b|_|\\\\n)phone[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "phone",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "fax": {
            "value": "/(?:\\b|_|\\\\n)fax(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fax",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "mobile": {
            "value": "/(?:\\b|_|\\\\n)mobile[0-9]?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mobile",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "contact": {
            "value": "/(?:\\b|_|\\\\n)contact(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "contact",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cell": {
            "value": "/(?:\\b|_|\\\\n)cell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "cell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "dial": {
            "value": "/(?:\\b|_|\\\\n)dial(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dial",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "tele": {
            "value": "/(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "tele",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "telcolon": {
            "value": "/(?:\\b|_|\\\\n)tel:/g",
            "confidenceDetailed": {
               "name": "tel:",
               "alternateCaptureGroupName": "telcolon",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "phcolon": {
            "value": "/(?:\\b|_|\\\\n)ph:/g",
            "confidenceDetailed": {
               "name": "ph:",
               "alternateCaptureGroupName": "phcolon",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 47,
            "value": "/(?<phonenumber>phone[ _-]?(?:number|num|no))|(?<mobilenumber>mobile[ _-]?(?:number|num|no))|(?<contactnumber>contact[ _-]?(?:number|num|no))|(?<cellnumber>(?:home|work|cell)[ _-]?(?:number|num|no))|(?<cellphone>(?:home|work|cell)[ _-]?phone)|(?<mobilephone>mobile[ _-]?phone)|(?<numbertocall>number[ _-]?to[ _-]?(?:call|contact|phone|dial))|(?<telephone>telephone)|(?<telefon>(?:\\b|_|\\\\n)telefone?(?:\\b|_|\\\\n))|(?<hotline>hotline)|(?<landline>landline)|(?<phone>(?:\\b|_|\\\\n)phone[0-9]?(?:\\b|_|\\\\n))|(?<fax>(?:\\b|_|\\\\n)fax(?:\\b|_|\\\\n))|(?<mobile>(?:\\b|_|\\\\n)mobile[0-9]?(?:\\b|_|\\\\n))|(?<contact>(?:\\b|_|\\\\n)contact(?:\\b|_|\\\\n))|(?<cell>(?:\\b|_|\\\\n)cell(?:\\b|_|\\\\n))|(?<dial>(?:\\b|_|\\\\n)dial(?:\\b|_|\\\\n))/"
         },
         {
            "maxRegexSourceLength": 29,
            "value": "/(?<tele>(?:\\b|_|\\\\n)tele?(?:\\b|_|\\\\n))|(?<telcolon>(?:\\b|_|\\\\n)tel:)|(?<phcolon>(?:\\b|_|\\\\n)ph:)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "SWIFT_CODE": {
      "regexes": [
         {
            "value": "/[A-Z]{6}[A-Z0-9]{2}(?:[A-Z0-9]{3})/g",
            "confidenceDetailed": {
               "name": "swift1",
               "type": "reg",
               "confidence": 0.7
            }
         },
         {
            "value": "/[A-Z]{6}[A-Z0-9]{2}/g",
            "confidenceDetailed": {
               "name": "swift2",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "boosters": {
         "structured": {
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         },
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.075,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "SWIFT_CODE",
                        "SWIFT_CODE",
                        "SWIFT_CODE",
                        "SWIFT_CODE"
                     ]
                  }
               }
            ]
         }
      },
      "validator": "swift",
      "neighbours": [
         {
            "value": "/swift/g",
            "confidenceDetailed": {
               "name": "swift",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:標準化|iso)[ _-]?9362/g",
            "confidenceDetailed": {
               "name": "iso9362",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)bic(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bic",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bank",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/banque/g",
            "confidenceDetailed": {
               "name": "banque",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/rapide/g",
            "confidenceDetailed": {
               "name": "rapide",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/迅速/g",
            "confidenceDetailed": {
               "name": "迅速",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "havePossibleScanByDefault": true,
      "preBuiltStructuredNeighboursMap": {
         "swift": {
            "value": "/swift/g",
            "confidenceDetailed": {
               "name": "swift",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "iso9362": {
            "value": "/(?:標準化|iso)[ _-]?9362/g",
            "confidenceDetailed": {
               "name": "iso9362",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bic": {
            "value": "/(?:\\b|_|\\\\n)bic(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bic",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "bank": {
            "value": "/(?:\\b|_|\\\\n)bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bank",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "banque": {
            "value": "/banque/g",
            "confidenceDetailed": {
               "name": "banque",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rapide": {
            "value": "/rapide/g",
            "confidenceDetailed": {
               "name": "rapide",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "迅速": {
            "value": "/迅速/g",
            "confidenceDetailed": {
               "name": "迅速",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 28,
            "value": "/(?<swift>swift)|(?<iso9362>(?:標準化|iso)[ _-]?9362)|(?<bic>(?:\\b|_|\\\\n)bic(?:\\b|_|\\\\n))|(?<bank>(?:\\b|_|\\\\n)bank(?:\\b|_|\\\\n))|(?<banque>banque)|(?<rapide>rapide)|(?<迅速>迅速)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "swift": {
            "value": "/swift/g",
            "confidenceDetailed": {
               "name": "swift",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "iso9362": {
            "value": "/(?:標準化|iso)[ _-]?9362/g",
            "confidenceDetailed": {
               "name": "iso9362",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "bic": {
            "value": "/(?:\\b|_|\\\\n)bic(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bic",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "bank": {
            "value": "/(?:\\b|_|\\\\n)bank(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "bank",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "banque": {
            "value": "/banque/g",
            "confidenceDetailed": {
               "name": "banque",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "rapide": {
            "value": "/rapide/g",
            "confidenceDetailed": {
               "name": "rapide",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "迅速": {
            "value": "/迅速/g",
            "confidenceDetailed": {
               "name": "迅速",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 28,
            "value": "/(?<swift>swift)|(?<iso9362>(?:標準化|iso)[ _-]?9362)|(?<bic>(?:\\b|_|\\\\n)bic(?:\\b|_|\\\\n))|(?<bank>(?:\\b|_|\\\\n)bank(?:\\b|_|\\\\n))|(?<banque>banque)|(?<rapide>rapide)|(?<迅速>迅速)/"
         }
      ]
   },
   "LAT_AND_LONG": {
      "regexes": [
         {
            "value": "/(?:[NS] ?)?[+-]?(?:90(?:\\.0+)|(?:[1-8][0-9]|[0-9])(?:\\.\\d+)) ?(?:°|deg)?(?: ?[NS])? ?, ?(?:\\n\\s*)?(?:[EW] ?)?[+-]?(?:180(?:\\.0+)|(?:1[0-7][0-9]|[1-9][0-9]|[0-9])(?:\\.\\d+)) ?(?:°|deg)?(?: ?[EW])?/g",
            "confidenceDetailed": {
               "name": "latlng1",
               "type": "reg",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:[NS] ?)?[+-]?\\d+(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[NS])? ?(?:and|[, ]) ?(?:\\n\\s*)?(?:[EW] ?)?[+-]?\\d+(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[EW])?/g",
            "confidenceDetailed": {
               "name": "latlng2",
               "type": "reg",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:[EW] ?)?[+-]?(?:180(?:\\.0+)|(?:1[0-7][0-9]|[1-9][0-9]|[0-9])(?:\\.\\d+)) ?(?:°|deg)?(?: ?[EW])? ?, ?(?:\\n\\s*)?(?:[NS] ?)?[+-]?(?:90(?:\\.0+)|(?:[1-8][0-9]|[0-9])(?:\\.\\d+)) ?(?:°|deg)?(?: ?[NS])?/g",
            "confidenceDetailed": {
               "name": "latlng3",
               "type": "reg",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:[EW] ?)?[+-]?\\d+(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[EW])? ?(?:and|[, ]) ?(?:\\n\\s*)?(?:[NS] ?)?[+-]?\\d+(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[NS])?/g",
            "confidenceDetailed": {
               "name": "latlng4",
               "type": "reg",
               "confidence": 0.5
            }
         }
      ],
      "neighbours": [
         {
            "value": "/latitude[\\\\/ _-]?longitude/g",
            "confidenceDetailed": {
               "name": "latitudelongitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/lat[\\\\/ _-]?(?:long?|lng)/g",
            "confidenceDetailed": {
               "name": "latlong",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:long?|lng)?[\\\\/ _-]?lat/g",
            "confidenceDetailed": {
               "name": "longlat",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/geoloc/g",
            "confidenceDetailed": {
               "name": "geoloc",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/point[ _-]?of[ _-]?interest/g",
            "confidenceDetailed": {
               "name": "pointofinterest",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/coordinates/g",
            "confidenceDetailed": {
               "name": "coordinates",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)coords?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "coords",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/geospatial/g",
            "confidenceDetailed": {
               "name": "geospatial",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/street[ _-]?view/g",
            "confidenceDetailed": {
               "name": "streetview",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/routing/g",
            "confidenceDetailed": {
               "name": "routing",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)geo(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "geo",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)gsv(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "gsv",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)poi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "poi",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/location/g",
            "confidenceDetailed": {
               "name": "location",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "matchExact": true,
      "boundaries": {
         "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
         "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
      },
      "neighbourhoodLength": 15,
      "preBuiltStructuredNeighboursMap": {
         "latitudelongitude": {
            "value": "/latitude[\\\\/ _-]?longitude/g",
            "confidenceDetailed": {
               "name": "latitudelongitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "latlong": {
            "value": "/lat[\\\\/ _-]?(?:long?|lng)/g",
            "confidenceDetailed": {
               "name": "latlong",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "longlat": {
            "value": "/(?:long?|lng)?[\\\\/ _-]?lat/g",
            "confidenceDetailed": {
               "name": "longlat",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "geoloc": {
            "value": "/geoloc/g",
            "confidenceDetailed": {
               "name": "geoloc",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "pointofinterest": {
            "value": "/point[ _-]?of[ _-]?interest/g",
            "confidenceDetailed": {
               "name": "pointofinterest",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "coordinates": {
            "value": "/coordinates/g",
            "confidenceDetailed": {
               "name": "coordinates",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "coords": {
            "value": "/(?:\\b|_|\\\\n)coords?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "coords",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "geospatial": {
            "value": "/geospatial/g",
            "confidenceDetailed": {
               "name": "geospatial",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "streetview": {
            "value": "/street[ _-]?view/g",
            "confidenceDetailed": {
               "name": "streetview",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "routing": {
            "value": "/routing/g",
            "confidenceDetailed": {
               "name": "routing",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "geo": {
            "value": "/(?:\\b|_|\\\\n)geo(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "geo",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "gsv": {
            "value": "/(?:\\b|_|\\\\n)gsv(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "gsv",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "poi": {
            "value": "/(?:\\b|_|\\\\n)poi(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "poi",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "location": {
            "value": "/location/g",
            "confidenceDetailed": {
               "name": "location",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<latitudelongitude>latitude[\\\\/ _-]?longitude)|(?<latlong>lat[\\\\/ _-]?(?:long?|lng))|(?<longlat>(?:long?|lng)?[\\\\/ _-]?lat)|(?<geoloc>geoloc)|(?<pointofinterest>point[ _-]?of[ _-]?interest)|(?<coordinates>coordinates)|(?<coords>(?:\\b|_|\\\\n)coords?(?:\\b|_|\\\\n))|(?<geospatial>geospatial)|(?<streetview>street[ _-]?view)|(?<routing>routing)|(?<geo>(?:\\b|_|\\\\n)geo(?:\\b|_|\\\\n))|(?<gsv>(?:\\b|_|\\\\n)gsv(?:\\b|_|\\\\n))|(?<poi>(?:\\b|_|\\\\n)poi(?:\\b|_|\\\\n))|(?<location>location)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "latitudelongitude": {
            "value": "/latitude[\\\\/ _-]?longitude/g",
            "confidenceDetailed": {
               "name": "latitudelongitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "latlong": {
            "value": "/lat[\\\\/ _-]?(?:long?|lng)/g",
            "confidenceDetailed": {
               "name": "latlong",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "longlat": {
            "value": "/(?:long?|lng)?[\\\\/ _-]?lat/g",
            "confidenceDetailed": {
               "name": "longlat",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "geoloc": {
            "value": "/geoloc/g",
            "confidenceDetailed": {
               "name": "geoloc",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "pointofinterest": {
            "value": "/point[ _-]?of[ _-]?interest/g",
            "confidenceDetailed": {
               "name": "pointofinterest",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "coordinates": {
            "value": "/coordinates/g",
            "confidenceDetailed": {
               "name": "coordinates",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "coords": {
            "value": "/(?:\\b|_|\\\\n)coords?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "coords",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "geospatial": {
            "value": "/geospatial/g",
            "confidenceDetailed": {
               "name": "geospatial",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "streetview": {
            "value": "/street[ _-]?view/g",
            "confidenceDetailed": {
               "name": "streetview",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "routing": {
            "value": "/routing/g",
            "confidenceDetailed": {
               "name": "routing",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<latitudelongitude>latitude[\\\\/ _-]?longitude)|(?<latlong>lat[\\\\/ _-]?(?:long?|lng))|(?<longlat>(?:long?|lng)?[\\\\/ _-]?lat)|(?<geoloc>geoloc)|(?<pointofinterest>point[ _-]?of[ _-]?interest)|(?<coordinates>coordinates)|(?<coords>(?:\\b|_|\\\\n)coords?(?:\\b|_|\\\\n))|(?<geospatial>geospatial)|(?<streetview>street[ _-]?view)|(?<routing>routing)/"
         }
      ]
   },
   "LATITUDE": {
      "regexes": [
         {
            "value": "/(?:[NS] ?)?[+-]?(?:90(?:\\.0+)|(?:[1-8][0-9]|[0-9])(?:\\.[0-9]+)) ?(?:°|deg)?(?: ?[NS])?/g",
            "confidenceDetailed": {
               "name": "lat1",
               "type": "reg",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:[NS] ?)?[+-]?(?:90|(?:[1-8][0-9]|[0-9]))(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[NS])?/g",
            "confidenceDetailed": {
               "name": "lat2",
               "type": "reg",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:[NS] ?)?[+-]?(?:90(?:\\.0+)?|(?:[1-8][0-9]|[0-9])(?:\\.[0-9]+)?) ?(?:°|deg)?(?: ?[NS])?/g",
            "confidenceDetailed": {
               "name": "lat3",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/latitude/g",
            "confidenceDetailed": {
               "name": "latitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)lat(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "lat",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/latitude/g",
            "confidenceDetailed": {
               "name": "latitude",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)lat[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lat:",
               "alternateCaptureGroupName": "latcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "matchExact": true,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "latitude": {
            "value": "/latitude/g",
            "confidenceDetailed": {
               "name": "latitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "lat": {
            "value": "/(?:\\b|_|\\\\n)lat(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "lat",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<latitude>latitude)|(?<lat>(?:\\b|_|\\\\n)lat(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "latitude": {
            "value": "/latitude/g",
            "confidenceDetailed": {
               "name": "latitude",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "latcolon": {
            "value": "/(?:\\b|_|\\\\n)lat[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lat:",
               "alternateCaptureGroupName": "latcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 29,
            "value": "/(?<latitude>latitude)|(?<latcolon>(?:\\b|_|\\\\n)lat[`\"'”]? ?[:=-])/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "LONGITUDE": {
      "regexes": [
         {
            "value": "/(?:[EW] ?)?[+-]?(?:180(?:\\.0+)|(?:1[0-7][0-9]|[1-9][0-9]|[0-9])(?:\\.[0-9]+)) ?(?:°|deg)?(?: ?[EW])?/g",
            "confidenceDetailed": {
               "name": "lng1",
               "type": "reg",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:[EW] ?)?[+-]?(?:180|(?:1[0-7][0-9]|[1-9][0-9]|[0-9]))(?: | ?(?:°|deg) ?)(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:['′]|min)?(?: ?(?:(?:(?:60|[1-5][0-9]|0?[0-9])(?:\\.[0-9]+)?)) ?(?:[\"″]|sec)?)?(?: ?[EW])?/g",
            "confidenceDetailed": {
               "name": "lng2",
               "type": "reg",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:[EW] ?)?[+-]?(?:180(?:\\.0+)?|(?:1[0-7][0-9]|[1-9][0-9]|[0-9])(?:\\.[0-9]+)?) ?(?:°|deg)?(?: ?[EW])?/g",
            "confidenceDetailed": {
               "name": "lng3",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/longitude/g",
            "confidenceDetailed": {
               "name": "longitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)lo?ng(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "lng",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)longitude/g",
            "confidenceDetailed": {
               "name": "longitude",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)lo?ng[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lng:",
               "alternateCaptureGroupName": "lngcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)lon[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lon:",
               "alternateCaptureGroupName": "loncolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "matchExact": true,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "longitude": {
            "value": "/longitude/g",
            "confidenceDetailed": {
               "name": "longitude",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "lng": {
            "value": "/(?:\\b|_|\\\\n)lo?ng(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "lng",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 29,
            "value": "/(?<longitude>longitude)|(?<lng>(?:\\b|_|\\\\n)lo?ng(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "longitude": {
            "value": "/(?:\\b|_|\\\\n)longitude/g",
            "confidenceDetailed": {
               "name": "longitude",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "lngcolon": {
            "value": "/(?:\\b|_|\\\\n)lo?ng[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lng:",
               "alternateCaptureGroupName": "lngcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         },
         "loncolon": {
            "value": "/(?:\\b|_|\\\\n)lon[`\"'”]? ?[:=-]/g",
            "confidenceDetailed": {
               "name": "lon:",
               "alternateCaptureGroupName": "loncolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<longitude>(?:\\b|_|\\\\n)longitude)|(?<lngcolon>(?:\\b|_|\\\\n)lo?ng[`\"'”]? ?[:=-])|(?<loncolon>(?:\\b|_|\\\\n)lon[`\"'”]? ?[:=-])/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "GRAB_REGEX": {
      "regexes": [
         {
            "value": "/\\b(?:(?:(?:FALLBACK1_(?:GA|GO|FS|FL|FE|NK|AP|AZ))\\.[0-9A-Za-z\\-\\_\\|]{7,})|(?:(?:FALLBACK2_)?(?:GA|GO|FS|FL|FE|NK|AP|AZ)\\.[0-9A-Z\\|]{7,}))\\b/g",
            "confidenceDetailed": {
               "name": "grab1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "noBoundaryException": true,
      "specificClientOnly": true
   },
   "GEOHASH": {
      "regexes": [
         {
            "value": "/[0-9b-hjkmnp-z]{5,12}/g",
            "confidenceDetailed": {
               "name": "geohash1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/geohash/g",
            "confidenceDetailed": {
               "name": "geohash",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "availability": "structuredOnly",
      "preBuiltStructuredNeighboursMap": {
         "geohash": {
            "value": "/geohash/g",
            "confidenceDetailed": {
               "name": "geohash",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 7,
            "value": "/(?<geohash>geohash)/"
         }
      ]
   },
   "MAC_ADDRESS": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{2}([=:-])(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}/g",
            "confidenceDetailed": {
               "name": "mac1",
               "type": "reg",
               "confidence": 0.6
            }
         },
         {
            "value": "/[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}/g",
            "confidenceDetailed": {
               "name": "mac2",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "neighbours": [
         {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "compulsoryInternal": true,
      "alts": [
         "MAC_ADDRESS_2"
      ],
      "preBuiltStructuredNeighboursMap": {
         "macaddress": {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mac": {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         "octets": {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<macaddress>mac[ _-]?addr?(?:ess)?)|(?<mac>(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n))|(?<octets>octets)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "macaddress": {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mac": {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         "octets": {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<macaddress>mac[ _-]?addr?(?:ess)?)|(?<mac>(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n))|(?<octets>octets)/"
         }
      ]
   },
   "MAC_ADDRESS_2": {
      "regexes": [
         {
            "value": "/(?:[0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}/g",
            "confidenceDetailed": {
               "name": "mac_2_1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "compulsoryInternal": true,
      "altname": "MAC_ADDRESS"
   },
   "LOCAL_MAC_ADDRESS": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{2}([=:-])(?:[0-9A-Fa-f]{2}\\1){4}[0-9A-Fa-f]{2}/g",
            "confidenceDetailed": {
               "name": "loc_mac1",
               "type": "reg",
               "confidence": 0.6
            }
         },
         {
            "value": "/[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}\\.[0-9A-Fa-f]{4}/g",
            "confidenceDetailed": {
               "name": "loc_mac2",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "validator": "local_mac",
      "neighbours": [
         {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "isSubsetOf": "MAC_ADDRESS",
      "alts": [
         "LOCAL_MAC_ADDRESS_2"
      ],
      "preBuiltStructuredNeighboursMap": {
         "macaddress": {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mac": {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         "octets": {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<macaddress>mac[ _-]?addr?(?:ess)?)|(?<mac>(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n))|(?<octets>octets)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "macaddress": {
            "value": "/mac[ _-]?addr?(?:ess)?/g",
            "confidenceDetailed": {
               "name": "macaddress",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "mac": {
            "value": "/(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "mac",
               "type": "nb",
               "confidence": 0.275
            }
         },
         "octets": {
            "value": "/octets/g",
            "confidenceDetailed": {
               "name": "octets",
               "type": "nb",
               "confidence": 0.275
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<macaddress>mac[ _-]?addr?(?:ess)?)|(?<mac>(?:\\b|_|\\\\n)mac(?:\\b|_|\\\\n))|(?<octets>octets)/"
         }
      ]
   },
   "LOCAL_MAC_ADDRESS_2": {
      "regexes": [
         {
            "value": "/(?:[0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}/g",
            "confidenceDetailed": {
               "name": "loc_mac_2_1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "validator": "local_mac",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "isSubsetOf": "MAC_ADDRESS",
      "altname": "LOCAL_MAC_ADDRESS"
   },
   "PASSWORD": {
      "regexes": [
         {
            "value": "/(?<=[:=] {0,2})[^\\s]{8,256}(?=\\s*(?:\\n|$))/g",
            "confidenceDetailed": {
               "name": "pwd1",
               "type": "reg",
               "confidence": 0.3
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:password|passwd|pwd?|pswd) ?[:=-]/g",
            "confidenceDetailed": {
               "name": "password:",
               "alternateCaptureGroupName": "passwordcolon",
               "type": "nb",
               "confidence": 0.55
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": -20
         },
         {
            "value": "/pass ?[:=-]/g",
            "confidenceDetailed": {
               "name": "pass:",
               "alternateCaptureGroupName": "passcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         }
      ],
      "boosters": {
         "tokenLevel": {
            "entropy": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "entropy",
                     "type": "bst"
                  },
                  "params": {
                     "entropy": 0.3
                  }
               }
            ]
         },
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "GENERIC_API_KEY",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "AWS_SECRET_ACCESS_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "FACEBOOK_OAUTH",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "FACEBOOK_APP_TOKEN",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PUBLIC_PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "alts": [
         "PASSWORD_2",
         "PASSWORD_3",
         "PASSWORD_4",
         "PASSWORD_5"
      ],
      "availability": "unstructuredOnly",
      "preBuiltUnstructuredNeighboursMap": {
         "passwordcolon": {
            "value": "/(?:password|passwd|pwd?|pswd) ?[:=-]/g",
            "confidenceDetailed": {
               "name": "password:",
               "alternateCaptureGroupName": "passwordcolon",
               "type": "nb",
               "confidence": 0.55
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": -20
         },
         "passcolon": {
            "value": "/pass ?[:=-]/g",
            "confidenceDetailed": {
               "name": "pass:",
               "alternateCaptureGroupName": "passcolon",
               "type": "nb",
               "confidence": 0.4
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 11,
            "value": "/(?<passcolon>pass ?[:=-])/",
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<passwordcolon>(?:password|passwd|pwd?|pswd) ?[:=-])/",
            "neighbourhoodLength": -20,
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "PASSWORD_2": {
      "regexes": [
         {
            "value": "/(?<=(?:are|is)(\\s?[:=-])?\\s{1,2})(?=[^\\s]{0,256}[A-Z])(?=[^\\s]{0,256}[a-z])[\\\\!-~]{8,256}/g",
            "confidenceDetailed": {
               "name": "pwd_2_1",
               "type": "reg",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?=[^\\s]{0,256}[A-Z])(?=[^\\s]{0,256}[a-z])[\\\\!-~]{8,256}(?=\\s{1,2}(?:are|is))/g",
            "confidenceDetailed": {
               "name": "pwd_2_2",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "password",
      "unstructuredNeighbours": [
         {
            "value": "/(?:password|passwd|pwd?|pswd)s?[^\\n.]{1,50}(?:are|is)\\b/g",
            "confidenceDetailed": {
               "name": "password is ",
               "alternateCaptureGroupName": "passwordis",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         },
         {
            "value": "/\\b(?:are|is)[^\\n.]{1,50}(?:password|passwd|pwd?|pswd)s?\\b/g",
            "confidenceDetailed": {
               "name": " is password",
               "alternateCaptureGroupName": "ispassword",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyBack": true,
            "neighbourhoodLength": 0
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?=[^\\s]*(?:[!-/]|[\\[-~]))(?=[^\\s]*[0-9])/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "altname": "PASSWORD",
      "availability": "unstructuredOnly",
      "preBuiltUnstructuredNeighboursMap": {
         "passwordis": {
            "value": "/(?:password|passwd|pwd?|pswd)s?[^\\n.]{1,50}(?:are|is)\\b/g",
            "confidenceDetailed": {
               "name": "password is ",
               "alternateCaptureGroupName": "passwordis",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         },
         "ispassword": {
            "value": "/\\b(?:are|is)[^\\n.]{1,50}(?:password|passwd|pwd?|pswd)s?\\b/g",
            "confidenceDetailed": {
               "name": " is password",
               "alternateCaptureGroupName": "ispassword",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyBack": true,
            "neighbourhoodLength": 0
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 55,
            "value": "/(?<passwordis>(?:password|passwd|pwd?|pswd)s?[^\\n.]{1,50}(?:are|is)\\b)/",
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 57,
            "value": "/(?<ispassword>\\b(?:are|is)[^\\n.]{1,50}(?:password|passwd|pwd?|pswd)s?\\b)/",
            "matchNeighbourOnlyBack": true
         }
      ]
   },
   "PASSWORD_3": {
      "regexes": [
         {
            "value": "/(?=[^\\s]{0,256}[a-zA-Z0-9])[\\\\!-~]{8,256}/g",
            "confidenceDetailed": {
               "name": "pwd_3_1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "password",
      "unstructuredNeighbours": [
         {
            "value": "/(?:are|is)\\s(?:the|my|his|her|their|our|your)\\s(?:password|passwd|pwd?|pswd)s?\\b/g",
            "confidenceDetailed": {
               "name": "is my password",
               "alternateCaptureGroupName": "ismypassword",
               "type": "nb",
               "confidence": 0.5
            },
            "neighbourhoodLength": -15
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "altname": "PASSWORD",
      "availability": "unstructuredOnly",
      "preBuiltUnstructuredNeighboursMap": {
         "ismypassword": {
            "value": "/(?:are|is)\\s(?:the|my|his|her|their|our|your)\\s(?:password|passwd|pwd?|pswd)s?\\b/g",
            "confidenceDetailed": {
               "name": "is my password",
               "alternateCaptureGroupName": "ismypassword",
               "type": "nb",
               "confidence": 0.5
            },
            "neighbourhoodLength": -15
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 80,
            "value": "/(?<ismypassword>(?:are|is)\\s(?:the|my|his|her|their|our|your)\\s(?:password|passwd|pwd?|pswd)s?\\b)/",
            "neighbourhoodLength": -15
         }
      ]
   },
   "PASSWORD_4": {
      "regexes": [
         {
            "value": "/(?<=(?:password|passwd|pwd|pswd)[^a-zA-Z0-9]+)[^\\s]{8,256}(?=\\s*(?:\\n|$))/g",
            "confidenceDetailed": {
               "name": "pwd_4_1",
               "type": "reg",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?<=(?:^|\\n))(?:password|passwd|pwd?|pswd)/g",
            "confidenceDetailed": {
               "name": "\npassword",
               "alternateCaptureGroupName": "slashnpassword",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": -10
         }
      ],
      "secondaryNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)host(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "host",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)user(?:name)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "username",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?:\\b|_|\\\\n)/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "secondaryNeighbourhoodLength": 20,
      "altname": "PASSWORD",
      "availability": "unstructuredOnly",
      "preBuiltUnstructuredNeighboursMap": {
         "slashnpassword": {
            "value": "/(?<=(?:^|\\n))(?:password|passwd|pwd?|pswd)/g",
            "confidenceDetailed": {
               "name": "\npassword",
               "alternateCaptureGroupName": "slashnpassword",
               "type": "nb",
               "confidence": 0.25
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": -10
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 42,
            "value": "/(?<slashnpassword>(?<=(?:^|\\n))(?:password|passwd|pwd?|pswd))/",
            "neighbourhoodLength": -10,
            "matchNeighbourOnlyFront": true
         }
      ],
      "preBuiltSecondaryNeighboursMap": {
         "host": {
            "value": "/(?:\\b|_|\\\\n)host(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "host",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "username": {
            "value": "/(?:\\b|_|\\\\n)user(?:name)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "username",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltSecondaryNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 37,
            "value": "/(?<host>(?:\\b|_|\\\\n)host(?:\\b|_|\\\\n))|(?<username>(?:\\b|_|\\\\n)user(?:name)?(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "PASSWORD_5": {
      "regexes": [
         {
            "value": "/(?=[^\\s]{0,64}[A-Z])(?=[^\\s]{0,64}[a-z])(?=[^\\s]{0,64}[0-9])[\\\\!-~]{8,64}/g",
            "confidenceDetailed": {
               "name": "pwd_5_1",
               "type": "reg",
               "confidence": 0.85
            }
         }
      ],
      "validator": "passwordStrict",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?=[^\\s]*(?:[!-/]|[\\[-~]))(?=[^\\s]*[0-9])/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "altname": "PASSWORD",
      "availability": "unstructuredOnly",
      "veryShortTextOnly": true
   },
   "DATE": {
      "regexes": [
         {
            "value": "/\\d{4}-(?:0[1-9]|1[0-2])-(?:[12][0-9]|3[01]|0[1-9])T(?:(?:[01][0-9]|2[0-3])(?:\\:?[0-5][0-9])?(?:\\:?[0-5][0-9](?:\\.[0-9]{2,6})?)?)?(?:Z|[+-](?:[01][0-9]|2[0-3]):?(?:[0-5][0-9])?)?/g",
            "confidenceDetailed": {
               "name": "date1",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/(?:(?:(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?(?:[/\\_.\\t -]{1,2})?)(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)(?: ?, ?|(?:[/\\_.\\t -]{1,2})?)|(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)(?:[/\\_.\\t -]{1,2})?(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?)(?:(?: ?, ?|(?:[/\\_.\\t -]{1,2})?)(?:1[4-9]|2[0-2])?[0-9]{2})?/gi",
            "confidenceDetailed": {
               "name": "date2",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})((?:[/\\_.\\t -]{1,2})?)(?:(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?\\1(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.? |January|February|March|April|June|July|August|September|October|November|December)|(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.? |January|February|March|April|June|July|August|September|October|November|December)(?:\\1(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?))/gi",
            "confidenceDetailed": {
               "name": "date3",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/(?:(?:0?[1-9]|[12][0-9]|3[01])([/\\_.\\t -])(?:0?[1-9]|1[0-2])(?:, ?|\\1)|(?:0?[1-9]|1[0-2])([/\\_.\\t -])(?:[12][0-9]|3[01]|0?[1-9])(?:, ?|\\2)|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])|(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2]))(?:(?:1[4-9]|2[0-2])?[0-9]{2})/g",
            "confidenceDetailed": {
               "name": "date4",
               "type": "reg",
               "confidence": 0.6
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})(?:([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9])\\1(?:0?[1-9]|1[0-2])|(?:0?[1-9]|1[0-2])\\1(?:[12][0-9]|3[01]|0?[1-9]))|(?:(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2])|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])))/g",
            "confidenceDetailed": {
               "name": "date5",
               "type": "reg",
               "confidence": 0.6
            }
         },
         {
            "value": "/(?:(?:0?[1-9]|[12][0-9]|3[01])([/\\_.\\t -])(?:0?[1-9]|1[0-2])(?:, ?|\\1)|(?:0?[1-9]|1[0-2])([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9]),?(?:, ?|\\2))?|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])|(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2]))(?:(?:1[4-9]|2[0-2])?[0-9]{2})/g",
            "confidenceDetailed": {
               "name": "date6",
               "type": "reg",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})(?:([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9])(?:\\1(?:0?[1-9]|1[0-2]))?|(?:0?[1-9]|1[0-2])\\1(?:[12][0-9]|3[01]|0?[1-9]))|(?:(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2])|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])))/g",
            "confidenceDetailed": {
               "name": "date7",
               "type": "reg",
               "confidence": 0.5
            }
         }
      ],
      "regexCacheCategory": "DATE",
      "boosters": {
         "tokenLevel": {
            "dateTokenYear2K": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.1,
                     "name": "dateTokenYear2K",
                     "type": "bst"
                  },
                  "params": {}
               }
            ],
            "dateTokenDashes": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "dateTokenDashes",
                     "type": "bst"
                  },
                  "params": {}
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/date/g",
            "confidenceDetailed": {
               "name": "date",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/timestamp/g",
            "confidenceDetailed": {
               "name": "timestamp",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/datum/g",
            "confidenceDetailed": {
               "name": "datum",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/appointment/g",
            "confidenceDetailed": {
               "name": "appointment",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/meeting/g",
            "confidenceDetailed": {
               "name": "meeting",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/latest/g",
            "confidenceDetailed": {
               "name": "latest",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/earliest/g",
            "confidenceDetailed": {
               "name": "earliest",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "neighbourhoodLength": 15,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         }
      },
      "compulsoryInternal": true,
      "preBuiltStructuredNeighboursMap": {
         "date": {
            "value": "/date/g",
            "confidenceDetailed": {
               "name": "date",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "timestamp": {
            "value": "/timestamp/g",
            "confidenceDetailed": {
               "name": "timestamp",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "datum": {
            "value": "/datum/g",
            "confidenceDetailed": {
               "name": "datum",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "appointment": {
            "value": "/appointment/g",
            "confidenceDetailed": {
               "name": "appointment",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "meeting": {
            "value": "/meeting/g",
            "confidenceDetailed": {
               "name": "meeting",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "latest": {
            "value": "/latest/g",
            "confidenceDetailed": {
               "name": "latest",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "earliest": {
            "value": "/earliest/g",
            "confidenceDetailed": {
               "name": "earliest",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 11,
            "value": "/(?<date>date)|(?<timestamp>timestamp)|(?<datum>datum)|(?<appointment>appointment)|(?<meeting>meeting)|(?<latest>latest)|(?<earliest>earliest)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "date": {
            "value": "/date/g",
            "confidenceDetailed": {
               "name": "date",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "timestamp": {
            "value": "/timestamp/g",
            "confidenceDetailed": {
               "name": "timestamp",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "datum": {
            "value": "/datum/g",
            "confidenceDetailed": {
               "name": "datum",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "appointment": {
            "value": "/appointment/g",
            "confidenceDetailed": {
               "name": "appointment",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "meeting": {
            "value": "/meeting/g",
            "confidenceDetailed": {
               "name": "meeting",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "latest": {
            "value": "/latest/g",
            "confidenceDetailed": {
               "name": "latest",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "earliest": {
            "value": "/earliest/g",
            "confidenceDetailed": {
               "name": "earliest",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 11,
            "value": "/(?<date>date)|(?<timestamp>timestamp)|(?<datum>datum)|(?<appointment>appointment)|(?<meeting>meeting)|(?<latest>latest)|(?<earliest>earliest)/"
         }
      ]
   },
   "DATE_OF_BIRTH": {
      "regexes": [
         {
            "value": "/\\d{4}-(?:0[1-9]|1[0-2])-(?:[12][0-9]|3[01]|0[1-9])T(?:(?:[01][0-9]|2[0-3])(?:\\:?[0-5][0-9])?(?:\\:?[0-5][0-9](?:\\.[0-9]{2,6})?)?)?(?:Z|[+-](?:[01][0-9]|2[0-3]):?(?:[0-5][0-9])?)?/g",
            "confidenceDetailed": {
               "name": "dob1",
               "type": "reg",
               "confidence": 0.7999999999999999
            }
         },
         {
            "value": "/(?:(?:(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?(?:[/\\_.\\t -]{1,2})?)(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)(?: ?, ?|(?:[/\\_.\\t -]{1,2})?)|(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)(?:[/\\_.\\t -]{1,2})?(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?)(?:(?: ?, ?|(?:[/\\_.\\t -]{1,2})?)(?:1[4-9]|2[0-2])?[0-9]{2})?/gi",
            "confidenceDetailed": {
               "name": "dob2",
               "type": "reg",
               "confidence": 0.7999999999999999
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})((?:[/\\_.\\t -]{1,2})?)(?:(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?\\1(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.? |January|February|March|April|June|July|August|September|October|November|December)|(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.? |January|February|March|April|June|July|August|September|October|November|December)(?:\\1(?:[12][0-9]|3[01]|0?[1-9])(?:[a-zA-Z]{2})?))/gi",
            "confidenceDetailed": {
               "name": "dob3",
               "type": "reg",
               "confidence": 0.7999999999999999
            }
         },
         {
            "value": "/(?:(?:0?[1-9]|[12][0-9]|3[01])([/\\_.\\t -])(?:0?[1-9]|1[0-2])(?:, ?|\\1)|(?:0?[1-9]|1[0-2])([/\\_.\\t -])(?:[12][0-9]|3[01]|0?[1-9])(?:, ?|\\2)|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])|(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2]))(?:(?:1[4-9]|2[0-2])?[0-9]{2})/g",
            "confidenceDetailed": {
               "name": "dob4",
               "type": "reg",
               "confidence": 0.5499999999999999
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})(?:([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9])\\1(?:0?[1-9]|1[0-2])|(?:0?[1-9]|1[0-2])\\1(?:[12][0-9]|3[01]|0?[1-9]))|(?:(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2])|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])))/g",
            "confidenceDetailed": {
               "name": "dob5",
               "type": "reg",
               "confidence": 0.5499999999999999
            }
         },
         {
            "value": "/(?:(?:0?[1-9]|[12][0-9]|3[01])([/\\_.\\t -])(?:0?[1-9]|1[0-2])(?:, ?|\\1)|(?:0?[1-9]|1[0-2])([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9]),?(?:, ?|\\2))?|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])|(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2]))(?:(?:1[4-9]|2[0-2])?[0-9]{2})/g",
            "confidenceDetailed": {
               "name": "dob6",
               "type": "reg",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:(?:1[4-9]|2[0-2])?[0-9]{2})(?:([/\\_.\\t -])(?:(?:[12][0-9]|3[01]|0?[1-9])(?:\\1(?:0?[1-9]|1[0-2]))?|(?:0?[1-9]|1[0-2])\\1(?:[12][0-9]|3[01]|0?[1-9]))|(?:(?:0[1-9]|[1-2][0-9]|3[01])(?:0[1-9]|1[0-2])|(?:0[1-9]|1[0-2])(?:0[1-9]|[1-2][0-9]|3[01])))/g",
            "confidenceDetailed": {
               "name": "dob7",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "regexCacheCategory": "DATE",
      "boosters": {
         "tokenLevel": {
            "dateTokenYear2K": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.1,
                     "name": "dateTokenYear2K",
                     "type": "bst"
                  },
                  "params": {}
               }
            ],
            "dateTokenDashes": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "dateTokenDashes",
                     "type": "bst"
                  },
                  "params": {}
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/date[-_ ]?of[-_ ]?birth/g",
            "confidenceDetailed": {
               "name": "dateofbirth",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?b\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dob",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/naissance/g",
            "confidenceDetailed": {
               "name": "naissance",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/geb[-_ ]?datum/g",
            "confidenceDetailed": {
               "name": "gebdatum",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/birth[-_ ]?day/g",
            "confidenceDetailed": {
               "name": "birthday",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/ann?ivers/g",
            "confidenceDetailed": {
               "name": "anniversary",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/birth[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "birthdate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/b-?day/g",
            "confidenceDetailed": {
               "name": "bday",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "neighbourhoodLength": 15,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "dateofbirth": {
            "value": "/date[-_ ]?of[-_ ]?birth/g",
            "confidenceDetailed": {
               "name": "dateofbirth",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "dob": {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?b\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dob",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "naissance": {
            "value": "/naissance/g",
            "confidenceDetailed": {
               "name": "naissance",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "gebdatum": {
            "value": "/geb[-_ ]?datum/g",
            "confidenceDetailed": {
               "name": "gebdatum",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "birthday": {
            "value": "/birth[-_ ]?day/g",
            "confidenceDetailed": {
               "name": "birthday",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "anniversary": {
            "value": "/ann?ivers/g",
            "confidenceDetailed": {
               "name": "anniversary",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "birthdate": {
            "value": "/birth[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "birthdate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "bday": {
            "value": "/b-?day/g",
            "confidenceDetailed": {
               "name": "bday",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<dateofbirth>date[-_ ]?of[-_ ]?birth)|(?<dob>(?:\\b|_|\\\\n)d\\.?o\\.?b\\.?(?:\\b|_|\\\\n))|(?<naissance>naissance)|(?<gebdatum>geb[-_ ]?datum)|(?<birthday>birth[-_ ]?day)|(?<anniversary>ann?ivers)|(?<birthdate>birth[-_ ]?date)|(?<bday>b-?day)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "dateofbirth": {
            "value": "/date[-_ ]?of[-_ ]?birth/g",
            "confidenceDetailed": {
               "name": "dateofbirth",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "dob": {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?b\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "dob",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "naissance": {
            "value": "/naissance/g",
            "confidenceDetailed": {
               "name": "naissance",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "gebdatum": {
            "value": "/geb[-_ ]?datum/g",
            "confidenceDetailed": {
               "name": "gebdatum",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "birthday": {
            "value": "/birth[-_ ]?day/g",
            "confidenceDetailed": {
               "name": "birthday",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "anniversary": {
            "value": "/ann?ivers/g",
            "confidenceDetailed": {
               "name": "anniversary",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "birthdate": {
            "value": "/birth[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "birthdate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "bday": {
            "value": "/b-?day/g",
            "confidenceDetailed": {
               "name": "bday",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<dateofbirth>date[-_ ]?of[-_ ]?birth)|(?<dob>(?:\\b|_|\\\\n)d\\.?o\\.?b\\.?(?:\\b|_|\\\\n))|(?<naissance>naissance)|(?<gebdatum>geb[-_ ]?datum)|(?<birthday>birth[-_ ]?day)|(?<anniversary>ann?ivers)|(?<birthdate>birth[-_ ]?date)|(?<bday>b-?day)/"
         }
      ]
   },
   "DATE_OF_EXPIRY": {
      "regexes": [
         {
            "value": "/(?<!\\d+[ \\\\/_-]?)(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)[ \\\\/_-]?(?:2[0-9])?[0-9]{2}/g",
            "confidenceDetailed": {
               "name": "dateexp1",
               "type": "reg",
               "confidence": 0.65
            }
         },
         {
            "value": "/(?:2[0-9])?[0-9]{2}[ \\\\/_-]?(?:Jan\\.?|Feb\\.?|Mar\\.?|Apr\\.?|May\\.?|Jun\\.?|Jul\\.?|Aug\\.?|Sep\\.?|Oct\\.?|Nov\\.?|Dec\\.?|January|February|March|April|June|July|August|September|October|November|December)(?![ \\\\/_-]?\\d+)/g",
            "confidenceDetailed": {
               "name": "dateexp2",
               "type": "reg",
               "confidence": 0.65
            }
         },
         {
            "value": "/(?<!\\d+[ \\\\/_-])(?:0[1-9]|1[0-2])[ \\\\/_-](?:2[0-9])?[0-9]{2}(?![ \\\\/_-]?\\d+)/g",
            "confidenceDetailed": {
               "name": "dateexp3",
               "type": "reg",
               "confidence": 0.6
            }
         },
         {
            "value": "/(?<!\\d+)(?:0[1-9]|1[0-2])2[0-9][0-9]{2}(?![ \\\\/_-]?\\d+)/g",
            "confidenceDetailed": {
               "name": "dateexp4",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.35,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "CREDIT_CARD_NUMBER"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.35,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "CREDIT_CARD_NUMBER"
                     ]
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/date(?:[-_ ]?of)?[-_ ]?expir(?:y|ation)/g",
            "confidenceDetailed": {
               "name": "dateofexpiry",
               "type": "nb",
               "confidence": 0.8
            }
         },
         {
            "value": "/expi?r(?:y|ation)[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expirydate",
               "type": "nb",
               "confidence": 0.8
            }
         },
         {
            "value": "/cc[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "ccdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         {
            "value": "/date(?:[-_ ]?of)?[-_ ]?exp/g",
            "confidenceDetailed": {
               "name": "dateofexp",
               "type": "nb",
               "confidence": 0.7
            }
         },
         {
            "value": "/exp[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         {
            "value": "/card[-_ ]?expir(?:y|e)/g",
            "confidenceDetailed": {
               "name": "cardexpiry",
               "type": "nb",
               "confidence": 0.7
            }
         },
         {
            "value": "/valid[-_ ]?till/g",
            "confidenceDetailed": {
               "name": "valid till",
               "alternateCaptureGroupName": "validtill",
               "type": "nb",
               "confidence": 0.7
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?e\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "doe",
               "type": "nb",
               "confidence": 0.65
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/expir(?:y|ation)/g",
            "confidenceDetailed": {
               "name": "expiry",
               "type": "nb",
               "confidence": 0.65
            }
         }
      ],
      "neighbourhoodLength": 15,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:[mhstMHST]|\\\\\\\"|\\s|^|\\\\n|['\"`([“‘:]|(?:\\s|[a-zA-Z])[=:-]|[a-zA-Z][._\\\\\\/-]{1,3}))/g",
            "back": "/(?=(?:['\"`“‘):]|[.,;]?(?:\\s|$|\\\\n))|[._\\\\\\/-]{1,3}[a-zA-Z])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "dateofexpiry": {
            "value": "/date(?:[-_ ]?of)?[-_ ]?expir(?:y|ation)/g",
            "confidenceDetailed": {
               "name": "dateofexpiry",
               "type": "nb",
               "confidence": 0.8
            }
         },
         "expirydate": {
            "value": "/expi?r(?:y|ation)[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expirydate",
               "type": "nb",
               "confidence": 0.8
            }
         },
         "ccdate": {
            "value": "/cc[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "ccdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "dateofexp": {
            "value": "/date(?:[-_ ]?of)?[-_ ]?exp/g",
            "confidenceDetailed": {
               "name": "dateofexp",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "expdate": {
            "value": "/exp[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "cardexpiry": {
            "value": "/card[-_ ]?expir(?:y|e)/g",
            "confidenceDetailed": {
               "name": "cardexpiry",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "validtill": {
            "value": "/valid[-_ ]?till/g",
            "confidenceDetailed": {
               "name": "valid till",
               "alternateCaptureGroupName": "validtill",
               "type": "nb",
               "confidence": 0.7
            },
            "matchNeighbourOnlyFront": true
         },
         "doe": {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?e\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "doe",
               "type": "nb",
               "confidence": 0.65
            }
         },
         "expiry": {
            "value": "/expir(?:y|ation)/g",
            "confidenceDetailed": {
               "name": "expiry",
               "type": "nb",
               "confidence": 0.65
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 39,
            "value": "/(?<dateofexpiry>date(?:[-_ ]?of)?[-_ ]?expir(?:y|ation))|(?<expirydate>expi?r(?:y|ation)[-_ ]?date)|(?<ccdate>cc[-_ ]?date)|(?<dateofexp>date(?:[-_ ]?of)?[-_ ]?exp)|(?<expdate>exp[-_ ]?date)|(?<cardexpiry>card[-_ ]?expir(?:y|e))|(?<doe>(?:\\b|_|\\\\n)d\\.?o\\.?e\\.?(?:\\b|_|\\\\n))|(?<expiry>expir(?:y|ation))/"
         },
         {
            "maxRegexSourceLength": 15,
            "value": "/(?<validtill>valid[-_ ]?till)/",
            "matchNeighbourOnlyFront": true
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "dateofexpiry": {
            "value": "/date(?:[-_ ]?of)?[-_ ]?expir(?:y|ation)/g",
            "confidenceDetailed": {
               "name": "dateofexpiry",
               "type": "nb",
               "confidence": 0.8
            }
         },
         "expirydate": {
            "value": "/expi?r(?:y|ation)[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expirydate",
               "type": "nb",
               "confidence": 0.8
            }
         },
         "ccdate": {
            "value": "/cc[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "ccdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "dateofexp": {
            "value": "/date(?:[-_ ]?of)?[-_ ]?exp/g",
            "confidenceDetailed": {
               "name": "dateofexp",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "expdate": {
            "value": "/exp[-_ ]?date/g",
            "confidenceDetailed": {
               "name": "expdate",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "cardexpiry": {
            "value": "/card[-_ ]?expir(?:y|e)/g",
            "confidenceDetailed": {
               "name": "cardexpiry",
               "type": "nb",
               "confidence": 0.7
            }
         },
         "validtill": {
            "value": "/valid[-_ ]?till/g",
            "confidenceDetailed": {
               "name": "valid till",
               "alternateCaptureGroupName": "validtill",
               "type": "nb",
               "confidence": 0.7
            },
            "matchNeighbourOnlyFront": true
         },
         "doe": {
            "value": "/(?:\\b|_|\\\\n)d\\.?o\\.?e\\.?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "doe",
               "type": "nb",
               "confidence": 0.65
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 39,
            "value": "/(?<dateofexpiry>date(?:[-_ ]?of)?[-_ ]?expir(?:y|ation))|(?<expirydate>expi?r(?:y|ation)[-_ ]?date)|(?<ccdate>cc[-_ ]?date)|(?<dateofexp>date(?:[-_ ]?of)?[-_ ]?exp)|(?<expdate>exp[-_ ]?date)|(?<cardexpiry>card[-_ ]?expir(?:y|e))|(?<doe>(?:\\b|_|\\\\n)d\\.?o\\.?e\\.?(?:\\b|_|\\\\n))/"
         },
         {
            "maxRegexSourceLength": 15,
            "value": "/(?<validtill>valid[-_ ]?till)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "TWILIO_SID": {
      "regexes": [
         {
            "value": "/(?!SK)[A-Z]{2}[a-z0-9]{32}/g",
            "confidenceDetailed": {
               "name": "twlosid1",
               "type": "reg",
               "confidence": 0.75
            }
         }
      ],
      "validator": "minEntropy",
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_API_KEY",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_API_KEY",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/twilio[-_ ]?sid/g",
            "confidenceDetailed": {
               "name": "twiliosid",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.2
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/sid/g",
            "confidenceDetailed": {
               "name": "sid",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/event/g",
            "confidenceDetailed": {
               "name": "event",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/recording/g",
            "confidenceDetailed": {
               "name": "recording",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/customer/g",
            "confidenceDetailed": {
               "name": "customer",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "twiliosid": {
            "value": "/twilio[-_ ]?sid/g",
            "confidenceDetailed": {
               "name": "twiliosid",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "sid": {
            "value": "/sid/g",
            "confidenceDetailed": {
               "name": "sid",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.2
            }
         },
         "event": {
            "value": "/event/g",
            "confidenceDetailed": {
               "name": "event",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "recording": {
            "value": "/recording/g",
            "confidenceDetailed": {
               "name": "recording",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "customer": {
            "value": "/customer/g",
            "confidenceDetailed": {
               "name": "customer",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 15,
            "value": "/(?<twiliosid>twilio[-_ ]?sid)|(?<sid>sid)|(?<twilio>twilio)|(?<event>event)|(?<recording>recording)|(?<customer>customer)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "twiliosid": {
            "value": "/twilio[-_ ]?sid/g",
            "confidenceDetailed": {
               "name": "twiliosid",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 15,
            "value": "/(?<twiliosid>twilio[-_ ]?sid)|(?<twilio>twilio)/"
         }
      ]
   },
   "TWILIO_AUTH_TOKEN": {
      "regexes": [
         {
            "value": "/[0-9a-f]{32}/g",
            "confidenceDetailed": {
               "name": "twloauth1",
               "type": "reg",
               "confidence": 0.55
            }
         }
      ],
      "validator": "twilio_auth_token",
      "neighbours": [
         {
            "value": "/twilio[-_ ]?o?auth[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioauthtoken",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/twilio[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "twilioauth",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_API_KEY",
                        "TWILIO_SID",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_API_KEY",
                        "TWILIO_SID",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "twilioauthtoken": {
            "value": "/twilio[-_ ]?o?auth[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioauthtoken",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "twilioauth": {
            "value": "/twilio[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "twilioauth",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 42,
            "value": "/(?<twilioauthtoken>twilio[-_ ]?o?auth[-_ ]?(?:key|tok(?:en)?))|(?<twilioauth>twilio[-_ ]?o?auth)|(?<twilio>twilio)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "twilioauthtoken": {
            "value": "/twilio[-_ ]?o?auth[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioauthtoken",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "twilioauth": {
            "value": "/twilio[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "twilioauth",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 42,
            "value": "/(?<twilioauthtoken>twilio[-_ ]?o?auth[-_ ]?(?:key|tok(?:en)?))|(?<twilioauth>twilio[-_ ]?o?auth)|(?<twilio>twilio)/"
         }
      ]
   },
   "TWILIO_API_KEY": {
      "regexes": [
         {
            "value": "/SK[0-9a-z]{32}/g",
            "confidenceDetailed": {
               "name": "twloapikey1",
               "type": "reg",
               "confidence": 0.7
            }
         }
      ],
      "validator": "twilio_auth_token",
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_SID",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_SID",
                        "TWILIO_API_SECRET"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/twilio[-_ ]?api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioapitoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.2
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "twilioapitoken": {
            "value": "/twilio[-_ ]?api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioapitoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "apikey": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 39,
            "value": "/(?<twilioapitoken>twilio[-_ ]?api[-_ ]?(?:key|tok(?:en)?))|(?<twilio>twilio)|(?<apikey>api[-_ ]?(?:key|tok(?:en)?))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "twilioapitoken": {
            "value": "/twilio[-_ ]?api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twilioapitoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "apikey": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 39,
            "value": "/(?<twilioapitoken>twilio[-_ ]?api[-_ ]?(?:key|tok(?:en)?))|(?<twilio>twilio)|(?<apikey>api[-_ ]?(?:key|tok(?:en)?))/"
         }
      ]
   },
   "TWILIO_API_SECRET": {
      "regexes": [
         {
            "value": "/[a-zA-Z0-9]{32}/g",
            "confidenceDetailed": {
               "name": "twloapisec1",
               "type": "reg",
               "confidence": 0.5
            }
         }
      ],
      "validator": "entropy",
      "neighbours": [
         {
            "value": "/twilio[-_ ]?api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "twilioapisecret",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "apisecret",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_SID",
                        "TWILIO_API_KEY"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "TWILIO_AUTH_TOKEN",
                        "TWILIO_SID",
                        "TWILIO_API_KEY"
                     ]
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "twilioapisecret": {
            "value": "/twilio[-_ ]?api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "twilioapisecret",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "apisecret": {
            "value": "/api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "apisecret",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<twilioapisecret>twilio[-_ ]?api[-_ ]?secret)|(?<twilio>twilio)|(?<apisecret>api[-_ ]?secret)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "twilioapisecret": {
            "value": "/twilio[-_ ]?api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "twilioapisecret",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "twilio": {
            "value": "/twilio/g",
            "confidenceDetailed": {
               "name": "twilio",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "apisecret": {
            "value": "/api[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "apisecret",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<twilioapisecret>twilio[-_ ]?api[-_ ]?secret)|(?<twilio>twilio)|(?<apisecret>api[-_ ]?secret)/"
         }
      ]
   },
   "AWS_ACCESS_KEY_ID": {
      "regexes": [
         {
            "value": "/(?:A3T[A-Z0-9]|AKIA|ABIA|ACCA|AGPA|AIDA|AROA|AIPA|ANPA|ANVA|APKA|AROA|ASCA|ASIA)[A-Z0-9]{12,20}/g",
            "confidenceDetailed": {
               "name": "awsacckeyid1",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "validator": "aws_access_key",
      "neighbours": [
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "aws": {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "apikey": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<aws>(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n))|(?<apikey>api[-_ ]?(?:key|tok(?:en)?))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "aws": {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "apikey": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apikey",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<aws>(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n))|(?<apikey>api[-_ ]?(?:key|tok(?:en)?))/"
         }
      ]
   },
   "AWS_SECRET_ACCESS_KEY": {
      "regexes": [
         {
            "value": "/[A-Za-z0-9/+=]{40}/g",
            "confidenceDetailed": {
               "name": "awsseckey1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "AWS_ACCESS_KEY_ID"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "AWS_ACCESS_KEY_ID"
                     ]
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/aws[-_ ]?(?:secret[-_ ]?)?(?:access[-_ ]?)?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "awssecretaccesskey",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/secret[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/secret[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "awssecretaccesskey": {
            "value": "/aws[-_ ]?(?:secret[-_ ]?)?(?:access[-_ ]?)?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "awssecretaccesskey",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "aws": {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 61,
            "value": "/(?<awssecretaccesskey>aws[-_ ]?(?:secret[-_ ]?)?(?:access[-_ ]?)?(?:key|tok(?:en)?))|(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<secretkey>secret[-_ ]?(?:key|tok(?:en)?))|(?<aws>(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "awssecretaccesskey": {
            "value": "/aws[-_ ]?(?:secret[-_ ]?)?(?:access[-_ ]?)?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "awssecretaccesskey",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "aws": {
            "value": "/(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "aws",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 61,
            "value": "/(?<awssecretaccesskey>aws[-_ ]?(?:secret[-_ ]?)?(?:access[-_ ]?)?(?:key|tok(?:en)?))|(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<secretkey>secret[-_ ]?(?:key|tok(?:en)?))|(?<aws>(?:\\b|_|\\\\n)aws(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "TWITTER_ACCESS_TOKEN": {
      "regexes": [
         {
            "value": "/[1-9][0-9]+-[0-9a-zA-Z]{40}/g",
            "confidenceDetailed": {
               "name": "twtacctok1",
               "type": "reg",
               "confidence": 0.65
            }
         }
      ],
      "neighbours": [
         {
            "value": "/twitter[-_ ]?access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twitteraccesskey",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/twitter/g",
            "confidenceDetailed": {
               "name": "twitter",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "twitteraccesskey": {
            "value": "/twitter[-_ ]?access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twitteraccesskey",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "twitter": {
            "value": "/twitter/g",
            "confidenceDetailed": {
               "name": "twitter",
               "type": "nb",
               "confidence": 0.3
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 43,
            "value": "/(?<twitteraccesskey>twitter[-_ ]?access[-_ ]?(?:key|tok(?:en)?))|(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<twitter>twitter)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "twitteraccesskey": {
            "value": "/twitter[-_ ]?access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "twitteraccesskey",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "accesskey": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "twitter": {
            "value": "/twitter/g",
            "confidenceDetailed": {
               "name": "twitter",
               "type": "nb",
               "confidence": 0.3
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 43,
            "value": "/(?<twitteraccesskey>twitter[-_ ]?access[-_ ]?(?:key|tok(?:en)?))|(?<accesskey>access[-_ ]?(?:key|tok(?:en)?))|(?<twitter>twitter)/"
         }
      ]
   },
   "FACEBOOK_APP_TOKEN": {
      "regexes": [
         {
            "value": "/[0-9]{15}\\|[0-9A-Za-z-_]{27}/g",
            "confidenceDetailed": {
               "name": "fbapptok1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_ACCESS_TOKEN",
                        "FACEBOOK_OAUTH"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_ACCESS_TOKEN",
                        "FACEBOOK_OAUTH"
                     ]
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/(?:facebook|fb)[-_ ]?app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookapptoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apptoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.25
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "facebookapptoken": {
            "value": "/(?:facebook|fb)[-_ ]?app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookapptoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "apptoken": {
            "value": "/app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apptoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.25
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 48,
            "value": "/(?<facebookapptoken>(?:facebook|fb)[-_ ]?app[-_ ]?(?:key|tok(?:en)?))|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?))|(?<apptoken>app[-_ ]?(?:key|tok(?:en)?))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "facebookapptoken": {
            "value": "/(?:facebook|fb)[-_ ]?app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookapptoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "apptoken": {
            "value": "/app[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apptoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 48,
            "value": "/(?<facebookapptoken>(?:facebook|fb)[-_ ]?app[-_ ]?(?:key|tok(?:en)?))|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?))|(?<apptoken>app[-_ ]?(?:key|tok(?:en)?))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "FACEBOOK_ACCESS_TOKEN": {
      "regexes": [
         {
            "value": "/EAA[0-9A-Za-z]{100,}/g",
            "confidenceDetailed": {
               "name": "fbacctok1",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_APP_TOKEN",
                        "FACEBOOK_OAUTH"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_APP_TOKEN",
                        "FACEBOOK_OAUTH"
                     ]
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/(?:facebook|fb)[-_ ]?acc(?:ess)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookaccesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.05
            }
         }
      ],
      "validator": "minEntropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "facebookaccesstoken": {
            "value": "/(?:facebook|fb)[-_ ]?acc(?:ess)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookaccesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "accesstoken": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 55,
            "value": "/(?<facebookaccesstoken>(?:facebook|fb)[-_ ]?acc(?:ess)[-_ ]?(?:key|tok(?:en)?))|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?))|(?<accesstoken>access[-_ ]?(?:key|tok(?:en)?))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "facebookaccesstoken": {
            "value": "/(?:facebook|fb)[-_ ]?acc(?:ess)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebookaccesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "accesstoken": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 55,
            "value": "/(?<facebookaccesstoken>(?:facebook|fb)[-_ ]?acc(?:ess)[-_ ]?(?:key|tok(?:en)?))|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:key|tok(?:en)?))|(?<accesstoken>access[-_ ]?(?:key|tok(?:en)?))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "FACEBOOK_OAUTH": {
      "regexes": [
         {
            "value": "/[A-Za-z0-9]{125}/g",
            "confidenceDetailed": {
               "name": "fboauth1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_ACCESS_TOKEN",
                        "FACEBOOK_APP_TOKEN"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "FACEBOOK_ACCESS_TOKEN",
                        "FACEBOOK_APP_TOKEN"
                     ]
                  }
               }
            ]
         }
      },
      "validator": "entropy",
      "neighbours": [
         {
            "value": "/(?:facebook|fb)[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "facebookoauth",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:facebook|fb)[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/o?auth[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "oauthtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "facebookoauth": {
            "value": "/(?:facebook|fb)[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "facebookoauth",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "oauthtoken": {
            "value": "/o?auth[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "oauthtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.3
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 46,
            "value": "/(?<facebookoauth>(?:facebook|fb)[-_ ]?o?auth)|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:tok(?:en)?|key|secret))|(?<oauthtoken>o?auth[-_ ]?(?:tok(?:en)?|key|secret))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "facebookoauth": {
            "value": "/(?:facebook|fb)[-_ ]?o?auth/g",
            "confidenceDetailed": {
               "name": "facebookoauth",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "facebooktoken": {
            "value": "/(?:facebook|fb)[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "facebooktoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "oauthtoken": {
            "value": "/o?auth[-_ ]?(?:tok(?:en)?|key|secret)/g",
            "confidenceDetailed": {
               "name": "oauthtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "facebook": {
            "value": "/facebook/g",
            "confidenceDetailed": {
               "name": "facebook",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "fb": {
            "value": "/(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "fb",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 46,
            "value": "/(?<facebookoauth>(?:facebook|fb)[-_ ]?o?auth)|(?<facebooktoken>(?:facebook|fb)[-_ ]?(?:tok(?:en)?|key|secret))|(?<oauthtoken>o?auth[-_ ]?(?:tok(?:en)?|key|secret))|(?<facebook>facebook)|(?<fb>(?:\\b|_|\\\\n)fb(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "GOOGLE_API_KEY": {
      "regexes": [
         {
            "value": "/AIza[0-9A-Za-z-_]{35}/g",
            "confidenceDetailed": {
               "name": "googapikey1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/google[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "googletoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/google/g",
            "confidenceDetailed": {
               "name": "google",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "googletoken": {
            "value": "/google[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "googletoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "google": {
            "value": "/google/g",
            "confidenceDetailed": {
               "name": "google",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<googletoken>google[-_ ]?(?:key|tok(?:en)?))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<google>google)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "googletoken": {
            "value": "/google[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "googletoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "google": {
            "value": "/google/g",
            "confidenceDetailed": {
               "name": "google",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<googletoken>google[-_ ]?(?:key|tok(?:en)?))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<google>google)/"
         }
      ]
   },
   "GITHUB_TOKEN": {
      "regexes": [
         {
            "value": "/gh[opusr]_[0-9a-zA-Z]{36,255}/g",
            "confidenceDetailed": {
               "name": "gittok1",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/[0-9a-fA-F]{40}/g",
            "confidenceDetailed": {
               "name": "gittok2",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "validator": "github_token",
      "neighbours": [
         {
            "value": "/github[-_ ]?(?:token|api|key)/g",
            "confidenceDetailed": {
               "name": "githubtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)token ?=/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/github/g",
            "confidenceDetailed": {
               "name": "github",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "githubtoken": {
            "value": "/github[-_ ]?(?:token|api|key)/g",
            "confidenceDetailed": {
               "name": "githubtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "tokenequals": {
            "value": "/(?:\\b|_|\\\\n)token ?=/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "github": {
            "value": "/github/g",
            "confidenceDetailed": {
               "name": "github",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 29,
            "value": "/(?<githubtoken>github[-_ ]?(?:token|api|key))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<tokenequals>(?:\\b|_|\\\\n)token ?=)|(?<github>github)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "githubtoken": {
            "value": "/github[-_ ]?(?:token|api|key)/g",
            "confidenceDetailed": {
               "name": "githubtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "tokenequals": {
            "value": "/(?:\\b|_|\\\\n)token ?=/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "github": {
            "value": "/github/g",
            "confidenceDetailed": {
               "name": "github",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 29,
            "value": "/(?<githubtoken>github[-_ ]?(?:token|api|key))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<tokenequals>(?:\\b|_|\\\\n)token ?=)|(?<github>github)/"
         }
      ]
   },
   "STRIPE_API_KEY": {
      "regexes": [
         {
            "value": "/sk_live_[0-9a-zA-Z]{24}/g",
            "confidenceDetailed": {
               "name": "strpapikey1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "STRIPE_API_KEY"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "STRIPE_API_KEY"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "validator": "minEntropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "stripe": {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<stripe>stripe)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "stripe": {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<stripe>stripe)/"
         }
      ]
   },
   "STRIPE_RESTRICTED_API_KEY": {
      "regexes": [
         {
            "value": "/rk_live_[0-9a-zA-Z]{24,36}/g",
            "confidenceDetailed": {
               "name": "strpreskey1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/restricted[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "restrictedtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "STRIPE_RESTRICTED_API_KEY"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "STRIPE_RESTRICTED_API_KEY"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "validator": "minEntropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "restrictedtoken": {
            "value": "/restricted[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "restrictedtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "stripe": {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 34,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<restrictedtoken>restricted[-_ ]?(?:key|tok(?:en)?))|(?<stripe>stripe)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "restrictedtoken": {
            "value": "/restricted[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "restrictedtoken",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "stripe": {
            "value": "/stripe/g",
            "confidenceDetailed": {
               "name": "stripe",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 34,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<restrictedtoken>restricted[-_ ]?(?:key|tok(?:en)?))|(?<stripe>stripe)/"
         }
      ]
   },
   "SQUARE_ACCESS_TOKEN": {
      "regexes": [
         {
            "value": "/EAAAE[0-9A-Za-z-_]{59}/g",
            "confidenceDetailed": {
               "name": "sqracctok1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "SQUARE_OAUTH_SECRET"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "SQUARE_OAUTH_SECRET"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      ],
      "validator": "minEntropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "accesstoken": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "squaretoken": {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "square": {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<accesstoken>access[-_ ]?(?:key|tok(?:en)?))|(?<squaretoken>square[-_ ]?(?:key|tok(?:en)?))|(?<square>square)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "accesstoken": {
            "value": "/access[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "accesstoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "squaretoken": {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "square": {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<accesstoken>access[-_ ]?(?:key|tok(?:en)?))|(?<squaretoken>square[-_ ]?(?:key|tok(?:en)?))|(?<square>square)/"
         }
      ]
   },
   "SQUARE_OAUTH_SECRET": {
      "regexes": [
         {
            "value": "/sq0csp-[0-9A-Za-z-_]{43}/g",
            "confidenceDetailed": {
               "name": "sqroauth1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "SQUARE_ACCESS_TOKEN"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "SQUARE_ACCESS_TOKEN"
                     ]
                  }
               }
            ],
            "columnThreshold": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "columnThreshold",
                     "type": "bst"
                  },
                  "params": {
                     "percentageThreshold": 0.9
                  }
               }
            ]
         }
      },
      "neighbours": [
         {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/square[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "squaresecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/oauth[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "oauthsecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      ],
      "validator": "minEntropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "squaretoken": {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "squaresecret": {
            "value": "/square[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "squaresecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "oauthsecret": {
            "value": "/oauth[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "oauthsecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "square": {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<squaretoken>square[-_ ]?(?:key|tok(?:en)?))|(?<squaresecret>square[-_ ]?secret)|(?<oauthsecret>oauth[-_ ]?secret)|(?<square>square)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "squaretoken": {
            "value": "/square[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "squaretoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "squaresecret": {
            "value": "/square[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "squaresecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "oauthsecret": {
            "value": "/oauth[-_ ]?secret/g",
            "confidenceDetailed": {
               "name": "oauthsecret",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "square": {
            "value": "/square/g",
            "confidenceDetailed": {
               "name": "square",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 30,
            "value": "/(?<squaretoken>square[-_ ]?(?:key|tok(?:en)?))|(?<squaresecret>square[-_ ]?secret)|(?<oauthsecret>oauth[-_ ]?secret)|(?<square>square)/"
         }
      ]
   },
   "MAILGUN_API_KEY": {
      "regexes": [
         {
            "value": "/key-[0-9a-zA-Z]{32}/g",
            "confidenceDetailed": {
               "name": "mgunapikey1",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/mailgun/g",
            "confidenceDetailed": {
               "name": "mailgun",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "mailgun": {
            "value": "/mailgun/g",
            "confidenceDetailed": {
               "name": "mailgun",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<mailgun>mailgun)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "mailgun": {
            "value": "/mailgun/g",
            "confidenceDetailed": {
               "name": "mailgun",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<mailgun>mailgun)/"
         }
      ]
   },
   "MAILCHIMP_API_KEY": {
      "regexes": [
         {
            "value": "/[0-9a-f]{32}-us[0-9]{1,2}/g",
            "confidenceDetailed": {
               "name": "mchimpapikey1",
               "type": "reg",
               "confidence": 0.9
            }
         }
      ],
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/mailchimp/g",
            "confidenceDetailed": {
               "name": "mailchimp",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "mailchimp": {
            "value": "/mailchimp/g",
            "confidenceDetailed": {
               "name": "mailchimp",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<mailchimp>mailchimp)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "mailchimp": {
            "value": "/mailchimp/g",
            "confidenceDetailed": {
               "name": "mailchimp",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<mailchimp>mailchimp)/"
         }
      ]
   },
   "SLACK_TOKEN": {
      "regexes": [
         {
            "value": "/xox(?:a|b|p|o|s|r)-(?:\\d+-)+[a-zA-Z0-9]+/g",
            "confidenceDetailed": {
               "name": "slktok1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/&t=/g",
            "confidenceDetailed": {
               "name": "&t=",
               "alternateCaptureGroupName": "ampersandTequals",
               "type": "nb",
               "confidence": 0.1
            }
         },
         {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.1
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "ampersandTequals": {
            "value": "/&t=/g",
            "confidenceDetailed": {
               "name": "&t=",
               "alternateCaptureGroupName": "ampersandTequals",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "slack": {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<ampersandTequals>&t=)|(?<slack>slack)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "ampersandTequals": {
            "value": "/&t=/g",
            "confidenceDetailed": {
               "name": "&t=",
               "alternateCaptureGroupName": "ampersandTequals",
               "type": "nb",
               "confidence": 0.1
            }
         },
         "slack": {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.1
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<ampersandTequals>&t=)|(?<slack>slack)/"
         }
      ]
   },
   "SLACK_WEB_HOOK": {
      "regexes": [
         {
            "value": "/https:\\/\\/hooks\\.slack\\.com\\/services\\/T[a-zA-Z0-9_]{8}\\/B[a-zA-Z0-9_]{8,10}\\/[a-zA-Z0-9_]{24}/g",
            "confidenceDetailed": {
               "name": "slkhook1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/webhook/g",
            "confidenceDetailed": {
               "name": "webhook",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.15
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "isSubsetOf": "DOMAIN_NAME",
      "preBuiltStructuredNeighboursMap": {
         "webhook": {
            "value": "/webhook/g",
            "confidenceDetailed": {
               "name": "webhook",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "slack": {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 7,
            "value": "/(?<webhook>webhook)|(?<slack>slack)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "webhook": {
            "value": "/webhook/g",
            "confidenceDetailed": {
               "name": "webhook",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "slack": {
            "value": "/slack/g",
            "confidenceDetailed": {
               "name": "slack",
               "type": "nb",
               "confidence": 0.15
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 7,
            "value": "/(?<webhook>webhook)|(?<slack>slack)/"
         }
      ]
   },
   "JWT": {
      "regexes": [
         {
            "value": "/eyJ[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*?/g",
            "confidenceDetailed": {
               "name": "jwt1",
               "type": "reg",
               "confidence": 0.95
            }
         }
      ],
      "neighbours": [
         {
            "value": "/jwt/g",
            "confidenceDetailed": {
               "name": "jwt",
               "type": "nb",
               "confidence": 0.15
            }
         },
         {
            "value": "/token/g",
            "confidenceDetailed": {
               "name": "token",
               "type": "nb",
               "confidence": 0.05
            }
         }
      ],
      "validator": "entropy",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "jwt": {
            "value": "/jwt/g",
            "confidenceDetailed": {
               "name": "jwt",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "token": {
            "value": "/token/g",
            "confidenceDetailed": {
               "name": "token",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 5,
            "value": "/(?<jwt>jwt)|(?<token>token)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "jwt": {
            "value": "/jwt/g",
            "confidenceDetailed": {
               "name": "jwt",
               "type": "nb",
               "confidence": 0.15
            }
         },
         "token": {
            "value": "/token/g",
            "confidenceDetailed": {
               "name": "token",
               "type": "nb",
               "confidence": 0.05
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 5,
            "value": "/(?<jwt>jwt)|(?<token>token)/"
         }
      ]
   },
   "INSTAGRAM_API_KEY": {
      "regexes": [
         {
            "value": "/[0-9a-fA-F]{7}.[0-9a-fA-F]{32}/g",
            "confidenceDetailed": {
               "name": "igapikey1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "validator": "entropy",
      "neighbours": [
         {
            "value": "/instagram[-_ ]?(?:tok(?:en)|api|key)/g",
            "confidenceDetailed": {
               "name": "instagramtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/instagram/g",
            "confidenceDetailed": {
               "name": "instagram",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "instagramtoken": {
            "value": "/instagram[-_ ]?(?:tok(?:en)|api|key)/g",
            "confidenceDetailed": {
               "name": "instagramtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "instagram": {
            "value": "/instagram/g",
            "confidenceDetailed": {
               "name": "instagram",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<instagramtoken>instagram[-_ ]?(?:tok(?:en)|api|key))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<instagram>instagram)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "instagramtoken": {
            "value": "/instagram[-_ ]?(?:tok(?:en)|api|key)/g",
            "confidenceDetailed": {
               "name": "instagramtoken",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "apitoken": {
            "value": "/api[-_ ]?(?:key|tok(?:en)?)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "instagram": {
            "value": "/instagram/g",
            "confidenceDetailed": {
               "name": "instagram",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<instagramtoken>instagram[-_ ]?(?:tok(?:en)|api|key))|(?<apitoken>api[-_ ]?(?:key|tok(?:en)?))|(?<instagram>instagram)/"
         }
      ]
   },
   "HEROKU_API_KEY": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/g",
            "confidenceDetailed": {
               "name": "herokuapikey1",
               "type": "reg",
               "confidence": 0.7
            }
         }
      ],
      "validator": "entropy",
      "neighbours": [
         {
            "value": "/heroku[ _-]?api[ _-]?key/g",
            "confidenceDetailed": {
               "name": "herokuapikey",
               "type": "nb",
               "confidence": 0.6
            }
         },
         {
            "value": "/heroku/g",
            "confidenceDetailed": {
               "name": "heroku",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "preBuiltStructuredNeighboursMap": {
         "herokuapikey": {
            "value": "/heroku[ _-]?api[ _-]?key/g",
            "confidenceDetailed": {
               "name": "herokuapikey",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "heroku": {
            "value": "/heroku/g",
            "confidenceDetailed": {
               "name": "heroku",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 24,
            "value": "/(?<herokuapikey>heroku[ _-]?api[ _-]?key)|(?<heroku>heroku)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "herokuapikey": {
            "value": "/heroku[ _-]?api[ _-]?key/g",
            "confidenceDetailed": {
               "name": "herokuapikey",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "heroku": {
            "value": "/heroku/g",
            "confidenceDetailed": {
               "name": "heroku",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 24,
            "value": "/(?<herokuapikey>heroku[ _-]?api[ _-]?key)|(?<heroku>heroku)/"
         }
      ]
   },
   "GENERIC_API_KEY": {
      "regexes": [
         {
            "value": "/(?!<?[a-zA-Z0-9_-]+>)(?=[^\\s]*[0-9])(?=[^\\s]*[a-zA-Z])[a-zA-Z0-9!#$%&()*+.;<>?@\\[\\]^_{\\|}~-]{12,256}/g",
            "confidenceDetailed": {
               "name": "apikey1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "api_key",
      "neighbours": [
         {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.75
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PUBLIC_PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.75
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.75
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PUBLIC_PRIVATE_KEY",
                     "ifDominantInfoTypeConfAbove": 0.75
                  }
               }
            ]
         }
      },
      "alts": [
         "GENERIC_API_KEY_2"
      ],
      "neighbourhoodLength": 0,
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "bearerkey": {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "jwtkey": {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sshkey": {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "machinekey": {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "masterkey": {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "activationkey": {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "accesskey": {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "awskey": {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "amazonkey": {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "appkey": {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "botkey": {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "consumerkey": {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "downloadkey": {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "githubkey": {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "prodkey": {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "restrictedkey": {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "oauthkey": {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "userkey": {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "urlkey": {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sessionkey": {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "privatekey": {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "refreshkey": {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "reqkey": {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "tokenequals": {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "keyequals": {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretequals": {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "myapitoken": {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 74,
            "value": "/(?<myapitoken>(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))/",
            "neighbourhoodLength": 15
         },
         {
            "maxRegexSourceLength": 62,
            "value": "/(?<apitoken>ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))|(?<bearerkey>bearer[-_ ]?(?:tok(?:en)?|secret|key))|(?<jwtkey>jwt[-_ ]?(?:tok(?:en)?|secret|key))|(?<secretkey>secret[-_ ]?(?:tok(?:en)?|key))|(?<sshkey>ssh[-_ ]?(?:tok(?:en)?|secret|key))|(?<machinekey>machine[-_ ]?(?:tok(?:en)?|secret|key))|(?<masterkey>master[-_ ]?(?:tok(?:en)?|secret|key))|(?<activationkey>activation[-_ ]?(?:tok(?:en)?|secret|key))|(?<accesskey>ac?cess[-_ ]?(?:tok(?:en)?|secret|key))|(?<awskey>aws[-_ ]?(?:tok(?:en)?|secret|key))|(?<amazonkey>ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key))|(?<appkey>app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key))|(?<botkey>bot[-_ ]?(?:tok(?:en)?|secret|key))|(?<consumerkey>consumer[-_ ]?(?:tok(?:en)?|secret|key))|(?<downloadkey>download[-_ ]?(?:tok(?:en)?|secret|key))|(?<githubkey>github[-_ ]?(?:tok(?:en)?|secret|key))|(?<prodkey>prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<restrictedkey>restricted[-_ ]?(?:tok(?:en)?|secret|key))|(?<oauthkey>o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<userkey>user[-_ ]?(?:tok(?:en)?|secret|key))|(?<urlkey>url[-_ ]?(?:tok(?:en)?|secret|key))|(?<sessionkey>session[-_ ]?(?:tok(?:en)?|secret|key))|(?<privatekey>pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<refreshkey>refresh[-_ ]?(?:tok(?:en)?|secret|key))|(?<reqkey>req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<tokenequals>token[`\"'”]? ?(?:=>?|:=?|->|>))|(?<keyequals>key[`\"'”]? ?(?:=>?|:=?|->|>))|(?<secretequals>secret[`\"'”]? ?(?:=>?|:=?|->|>))/",
            "matchNeighbourOnlyFront": true
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "bearerkey": {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "jwtkey": {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sshkey": {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "machinekey": {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "masterkey": {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "activationkey": {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "accesskey": {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "awskey": {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "amazonkey": {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "appkey": {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "botkey": {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "consumerkey": {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "downloadkey": {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "githubkey": {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "prodkey": {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "restrictedkey": {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "oauthkey": {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "userkey": {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "urlkey": {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sessionkey": {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "privatekey": {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "refreshkey": {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "reqkey": {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "tokenequals": {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "keyequals": {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretequals": {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "myapitoken": {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 74,
            "value": "/(?<myapitoken>(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))/",
            "neighbourhoodLength": 15
         },
         {
            "maxRegexSourceLength": 62,
            "value": "/(?<apitoken>ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))|(?<bearerkey>bearer[-_ ]?(?:tok(?:en)?|secret|key))|(?<jwtkey>jwt[-_ ]?(?:tok(?:en)?|secret|key))|(?<secretkey>secret[-_ ]?(?:tok(?:en)?|key))|(?<sshkey>ssh[-_ ]?(?:tok(?:en)?|secret|key))|(?<machinekey>machine[-_ ]?(?:tok(?:en)?|secret|key))|(?<masterkey>master[-_ ]?(?:tok(?:en)?|secret|key))|(?<activationkey>activation[-_ ]?(?:tok(?:en)?|secret|key))|(?<accesskey>ac?cess[-_ ]?(?:tok(?:en)?|secret|key))|(?<awskey>aws[-_ ]?(?:tok(?:en)?|secret|key))|(?<amazonkey>ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key))|(?<appkey>app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key))|(?<botkey>bot[-_ ]?(?:tok(?:en)?|secret|key))|(?<consumerkey>consumer[-_ ]?(?:tok(?:en)?|secret|key))|(?<downloadkey>download[-_ ]?(?:tok(?:en)?|secret|key))|(?<githubkey>github[-_ ]?(?:tok(?:en)?|secret|key))|(?<prodkey>prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<restrictedkey>restricted[-_ ]?(?:tok(?:en)?|secret|key))|(?<oauthkey>o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<userkey>user[-_ ]?(?:tok(?:en)?|secret|key))|(?<urlkey>url[-_ ]?(?:tok(?:en)?|secret|key))|(?<sessionkey>session[-_ ]?(?:tok(?:en)?|secret|key))|(?<privatekey>pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<refreshkey>refresh[-_ ]?(?:tok(?:en)?|secret|key))|(?<reqkey>req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<tokenequals>token[`\"'”]? ?(?:=>?|:=?|->|>))|(?<keyequals>key[`\"'”]? ?(?:=>?|:=?|->|>))|(?<secretequals>secret[`\"'”]? ?(?:=>?|:=?|->|>))/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "GENERIC_API_KEY_2": {
      "regexes": [
         {
            "value": "/(?=[^\\s]*[0-9])(?=[^\\s]*[a-zA-Z])[a-zA-Z0-9!#$%&()*+.;<>?@\\[\\]^_{\\|}~-]{64}(?:\\n[a-zA-Z0-9!#$%&()*+.:;<=>?@\\[\\]^_{\\|}~-]{64}){0,2}(?:\\n[a-zA-Z0-9!#$%&()*+.:;<=>?@\\[\\]^_{\\|}~-]{1,63})/g",
            "confidenceDetailed": {
               "name": "apikey_2_1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "api_key",
      "neighbours": [
         {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      ],
      "boundaries": {
         "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
         "back": "/(?:)/g"
      },
      "altname": "GENERIC_API_KEY",
      "neighbourhoodLength": 0,
      "preBuiltStructuredNeighboursMap": {
         "apitoken": {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "bearerkey": {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "jwtkey": {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sshkey": {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "machinekey": {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "masterkey": {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "activationkey": {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "accesskey": {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "awskey": {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "amazonkey": {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "appkey": {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "botkey": {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "consumerkey": {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "downloadkey": {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "githubkey": {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "prodkey": {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "restrictedkey": {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "oauthkey": {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "userkey": {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "urlkey": {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sessionkey": {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "privatekey": {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "refreshkey": {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "reqkey": {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "tokenequals": {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "keyequals": {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretequals": {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "myapitoken": {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 74,
            "value": "/(?<myapitoken>(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))/",
            "neighbourhoodLength": 15
         },
         {
            "maxRegexSourceLength": 62,
            "value": "/(?<apitoken>ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))|(?<bearerkey>bearer[-_ ]?(?:tok(?:en)?|secret|key))|(?<jwtkey>jwt[-_ ]?(?:tok(?:en)?|secret|key))|(?<secretkey>secret[-_ ]?(?:tok(?:en)?|key))|(?<sshkey>ssh[-_ ]?(?:tok(?:en)?|secret|key))|(?<machinekey>machine[-_ ]?(?:tok(?:en)?|secret|key))|(?<masterkey>master[-_ ]?(?:tok(?:en)?|secret|key))|(?<activationkey>activation[-_ ]?(?:tok(?:en)?|secret|key))|(?<accesskey>ac?cess[-_ ]?(?:tok(?:en)?|secret|key))|(?<awskey>aws[-_ ]?(?:tok(?:en)?|secret|key))|(?<amazonkey>ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key))|(?<appkey>app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key))|(?<botkey>bot[-_ ]?(?:tok(?:en)?|secret|key))|(?<consumerkey>consumer[-_ ]?(?:tok(?:en)?|secret|key))|(?<downloadkey>download[-_ ]?(?:tok(?:en)?|secret|key))|(?<githubkey>github[-_ ]?(?:tok(?:en)?|secret|key))|(?<prodkey>prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<restrictedkey>restricted[-_ ]?(?:tok(?:en)?|secret|key))|(?<oauthkey>o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<userkey>user[-_ ]?(?:tok(?:en)?|secret|key))|(?<urlkey>url[-_ ]?(?:tok(?:en)?|secret|key))|(?<sessionkey>session[-_ ]?(?:tok(?:en)?|secret|key))|(?<privatekey>pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<refreshkey>refresh[-_ ]?(?:tok(?:en)?|secret|key))|(?<reqkey>req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<tokenequals>token[`\"'”]? ?(?:=>?|:=?|->|>))|(?<keyequals>key[`\"'”]? ?(?:=>?|:=?|->|>))|(?<secretequals>secret[`\"'”]? ?(?:=>?|:=?|->|>))/",
            "matchNeighbourOnlyFront": true
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apitoken": {
            "value": "/ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "apitoken",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "bearerkey": {
            "value": "/bearer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "bearerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "jwtkey": {
            "value": "/jwt[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "jwtkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretkey": {
            "value": "/secret[-_ ]?(?:tok(?:en)?|key)/g",
            "confidenceDetailed": {
               "name": "secretkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sshkey": {
            "value": "/ssh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "machinekey": {
            "value": "/machine[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "machinekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "masterkey": {
            "value": "/master[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "masterkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "activationkey": {
            "value": "/activation[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "activationkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "accesskey": {
            "value": "/ac?cess[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "accesskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "awskey": {
            "value": "/aws[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "awskey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "amazonkey": {
            "value": "/ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "amazonkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "appkey": {
            "value": "/app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "appkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "botkey": {
            "value": "/bot[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "botkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "consumerkey": {
            "value": "/consumer[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "consumerkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "downloadkey": {
            "value": "/download[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "downloadkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "githubkey": {
            "value": "/github[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "githubkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "prodkey": {
            "value": "/prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "prodkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "restrictedkey": {
            "value": "/restricted[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "restrictedkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "oauthkey": {
            "value": "/o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "oauthkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "userkey": {
            "value": "/user[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "userkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "urlkey": {
            "value": "/url[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "urlkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "sessionkey": {
            "value": "/session[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "sessionkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "privatekey": {
            "value": "/pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "privatekey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "refreshkey": {
            "value": "/refresh[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "refreshkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "reqkey": {
            "value": "/req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key)/g",
            "confidenceDetailed": {
               "name": "reqkey",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "tokenequals": {
            "value": "/token[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "token=",
               "alternateCaptureGroupName": "tokenequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "keyequals": {
            "value": "/key[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "_key=",
               "alternateCaptureGroupName": "keyequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "secretequals": {
            "value": "/secret[`\"'”]? ?(?:=>?|:=?|->|>)/g",
            "confidenceDetailed": {
               "name": "secret=",
               "alternateCaptureGroupName": "secretequals",
               "type": "nb",
               "confidence": 0.45
            },
            "matchNeighbourOnlyFront": true
         },
         "myapitoken": {
            "value": "/(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key)/g",
            "confidenceDetailed": {
               "name": "my apitoken",
               "alternateCaptureGroupName": "myapitoken",
               "type": "nb",
               "confidence": 0.45
            },
            "neighbourhoodLength": 15
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 74,
            "value": "/(?<myapitoken>(?:the|my|your|his|her|their|our) ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))/",
            "neighbourhoodLength": 15
         },
         {
            "maxRegexSourceLength": 62,
            "value": "/(?<apitoken>ap[ip]?[-\\._ ]?(?:tok(?:en)?|ky|tkn|key))|(?<bearerkey>bearer[-_ ]?(?:tok(?:en)?|secret|key))|(?<jwtkey>jwt[-_ ]?(?:tok(?:en)?|secret|key))|(?<secretkey>secret[-_ ]?(?:tok(?:en)?|key))|(?<sshkey>ssh[-_ ]?(?:tok(?:en)?|secret|key))|(?<machinekey>machine[-_ ]?(?:tok(?:en)?|secret|key))|(?<masterkey>master[-_ ]?(?:tok(?:en)?|secret|key))|(?<activationkey>activation[-_ ]?(?:tok(?:en)?|secret|key))|(?<accesskey>ac?cess[-_ ]?(?:tok(?:en)?|secret|key))|(?<awskey>aws[-_ ]?(?:tok(?:en)?|secret|key))|(?<amazonkey>ama?zo?n[-_ ]?(?:tok(?:en)?|secret|key))|(?<appkey>app(?:lication)[-_ ]?(?:tok(?:en)?|secret|key))|(?<botkey>bot[-_ ]?(?:tok(?:en)?|secret|key))|(?<consumerkey>consumer[-_ ]?(?:tok(?:en)?|secret|key))|(?<downloadkey>download[-_ ]?(?:tok(?:en)?|secret|key))|(?<githubkey>github[-_ ]?(?:tok(?:en)?|secret|key))|(?<prodkey>prod(?:uction)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<restrictedkey>restricted[-_ ]?(?:tok(?:en)?|secret|key))|(?<oauthkey>o?auth(?:orization|entication)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<userkey>user[-_ ]?(?:tok(?:en)?|secret|key))|(?<urlkey>url[-_ ]?(?:tok(?:en)?|secret|key))|(?<sessionkey>session[-_ ]?(?:tok(?:en)?|secret|key))|(?<privatekey>pri?v(?:ate)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<refreshkey>refresh[-_ ]?(?:tok(?:en)?|secret|key))|(?<reqkey>req(?:uest)?[-_ ]?(?:tok(?:en)?|secret|key))|(?<tokenequals>token[`\"'”]? ?(?:=>?|:=?|->|>))|(?<keyequals>key[`\"'”]? ?(?:=>?|:=?|->|>))|(?<secretequals>secret[`\"'”]? ?(?:=>?|:=?|->|>))/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "MONEY": {
      "regexes": [
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/g",
            "confidenceDetailed": {
               "name": "money1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "regexCacheCategory": "AMOUNT",
      "neighbours": [
         {
            "value": "/fund/g",
            "confidenceDetailed": {
               "name": "fund",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/balance/g",
            "confidenceDetailed": {
               "name": "balance",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/cash/g",
            "confidenceDetailed": {
               "name": "cash",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/deposit/g",
            "confidenceDetailed": {
               "name": "deposit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/withdraw/g",
            "confidenceDetailed": {
               "name": "withdraw",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/borrow/g",
            "confidenceDetailed": {
               "name": "borrow",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/debit/g",
            "confidenceDetailed": {
               "name": "debit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/credit/g",
            "confidenceDetailed": {
               "name": "credit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/price/g",
            "confidenceDetailed": {
               "name": "price",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/payment/g",
            "confidenceDetailed": {
               "name": "payment",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/loss/g",
            "confidenceDetailed": {
               "name": "loss",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/gain/g",
            "confidenceDetailed": {
               "name": "gain",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/profit/g",
            "confidenceDetailed": {
               "name": "profit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/revenue/g",
            "confidenceDetailed": {
               "name": "revenue",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:annual|monthly|weekly|daily|yearly)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)interest(?:rate)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "interestrate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)buy(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "buy",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)sell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "sell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/crypto/g",
            "confidenceDetailed": {
               "name": "crypto",
               "type": "nb",
               "confidence": 0.25
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "INCOME",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "INCOME",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               }
            ]
         }
      },
      "isSubsetOf": "AMOUNT",
      "availability": "structuredOnly",
      "preBuiltStructuredNeighboursMap": {
         "fund": {
            "value": "/fund/g",
            "confidenceDetailed": {
               "name": "fund",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "balance": {
            "value": "/balance/g",
            "confidenceDetailed": {
               "name": "balance",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cash": {
            "value": "/cash/g",
            "confidenceDetailed": {
               "name": "cash",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "deposit": {
            "value": "/deposit/g",
            "confidenceDetailed": {
               "name": "deposit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "withdraw": {
            "value": "/withdraw/g",
            "confidenceDetailed": {
               "name": "withdraw",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "borrow": {
            "value": "/borrow/g",
            "confidenceDetailed": {
               "name": "borrow",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "debit": {
            "value": "/debit/g",
            "confidenceDetailed": {
               "name": "debit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "credit": {
            "value": "/credit/g",
            "confidenceDetailed": {
               "name": "credit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "price": {
            "value": "/price/g",
            "confidenceDetailed": {
               "name": "price",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "payment": {
            "value": "/payment/g",
            "confidenceDetailed": {
               "name": "payment",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "loss": {
            "value": "/loss/g",
            "confidenceDetailed": {
               "name": "loss",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "gain": {
            "value": "/gain/g",
            "confidenceDetailed": {
               "name": "gain",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "profit": {
            "value": "/profit/g",
            "confidenceDetailed": {
               "name": "profit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "revenue": {
            "value": "/revenue/g",
            "confidenceDetailed": {
               "name": "revenue",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "annualincome": {
            "value": "/(?:annual|monthly|weekly|daily|yearly)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "interestrate": {
            "value": "/(?:\\b|_|\\\\n)interest(?:rate)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "interestrate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "buy": {
            "value": "/(?:\\b|_|\\\\n)buy(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "buy",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "sell": {
            "value": "/(?:\\b|_|\\\\n)sell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "sell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "crypto": {
            "value": "/crypto/g",
            "confidenceDetailed": {
               "name": "crypto",
               "type": "nb",
               "confidence": 0.25
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 55,
            "value": "/(?<fund>fund)|(?<balance>balance)|(?<cash>cash)|(?<deposit>deposit)|(?<withdraw>withdraw)|(?<borrow>borrow)|(?<debit>debit)|(?<credit>credit)|(?<price>price)|(?<payment>payment)|(?<loss>loss)|(?<gain>gain)|(?<profit>profit)|(?<revenue>revenue)|(?<income>income)|(?<annualincome>(?:annual|monthly|weekly|daily|yearly)[-_ ]?inc(?:ome)?)|(?<interestrate>(?:\\b|_|\\\\n)interest(?:rate)?(?:\\b|_|\\\\n))|(?<buy>(?:\\b|_|\\\\n)buy(?:\\b|_|\\\\n))|(?<sell>(?:\\b|_|\\\\n)sell(?:\\b|_|\\\\n))|(?<crypto>crypto)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "fund": {
            "value": "/fund/g",
            "confidenceDetailed": {
               "name": "fund",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "balance": {
            "value": "/balance/g",
            "confidenceDetailed": {
               "name": "balance",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cash": {
            "value": "/cash/g",
            "confidenceDetailed": {
               "name": "cash",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "deposit": {
            "value": "/deposit/g",
            "confidenceDetailed": {
               "name": "deposit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "withdraw": {
            "value": "/withdraw/g",
            "confidenceDetailed": {
               "name": "withdraw",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "borrow": {
            "value": "/borrow/g",
            "confidenceDetailed": {
               "name": "borrow",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "debit": {
            "value": "/debit/g",
            "confidenceDetailed": {
               "name": "debit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "credit": {
            "value": "/credit/g",
            "confidenceDetailed": {
               "name": "credit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "price": {
            "value": "/price/g",
            "confidenceDetailed": {
               "name": "price",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "payment": {
            "value": "/payment/g",
            "confidenceDetailed": {
               "name": "payment",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "loss": {
            "value": "/loss/g",
            "confidenceDetailed": {
               "name": "loss",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "gain": {
            "value": "/gain/g",
            "confidenceDetailed": {
               "name": "gain",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "profit": {
            "value": "/profit/g",
            "confidenceDetailed": {
               "name": "profit",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "revenue": {
            "value": "/revenue/g",
            "confidenceDetailed": {
               "name": "revenue",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "annualincome": {
            "value": "/(?:annual|monthly|weekly|daily|yearly)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "interestrate": {
            "value": "/(?:\\b|_|\\\\n)interest(?:rate)?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "interestrate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "buy": {
            "value": "/(?:\\b|_|\\\\n)buy(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "buy",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "sell": {
            "value": "/(?:\\b|_|\\\\n)sell(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "sell",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "crypto": {
            "value": "/crypto/g",
            "confidenceDetailed": {
               "name": "crypto",
               "type": "nb",
               "confidence": 0.25
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 55,
            "value": "/(?<fund>fund)|(?<balance>balance)|(?<cash>cash)|(?<deposit>deposit)|(?<withdraw>withdraw)|(?<borrow>borrow)|(?<debit>debit)|(?<credit>credit)|(?<price>price)|(?<payment>payment)|(?<loss>loss)|(?<gain>gain)|(?<profit>profit)|(?<revenue>revenue)|(?<income>income)|(?<annualincome>(?:annual|monthly|weekly|daily|yearly)[-_ ]?inc(?:ome)?)|(?<interestrate>(?:\\b|_|\\\\n)interest(?:rate)?(?:\\b|_|\\\\n))|(?<buy>(?:\\b|_|\\\\n)buy(?:\\b|_|\\\\n))|(?<sell>(?:\\b|_|\\\\n)sell(?:\\b|_|\\\\n))|(?<crypto>crypto)/"
         }
      ]
   },
   "AMOUNT": {
      "regexes": [
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/g",
            "confidenceDetailed": {
               "name": "amount1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "regexCacheCategory": "AMOUNT",
      "neighbours": [
         {
            "value": "/volume/g",
            "confidenceDetailed": {
               "name": "volume",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/amount/g",
            "confidenceDetailed": {
               "name": "amount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/count/g",
            "confidenceDetailed": {
               "name": "count",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/value/g",
            "confidenceDetailed": {
               "name": "value",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/quantity/g",
            "confidenceDetailed": {
               "name": "quantity",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/total/g",
            "confidenceDetailed": {
               "name": "total",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/aggregate/g",
            "confidenceDetailed": {
               "name": "aggregate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/weight/g",
            "confidenceDetailed": {
               "name": "weight",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/quota/g",
            "confidenceDetailed": {
               "name": "quota",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/size/g",
            "confidenceDetailed": {
               "name": "size",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "volume": {
            "value": "/volume/g",
            "confidenceDetailed": {
               "name": "volume",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "amount": {
            "value": "/amount/g",
            "confidenceDetailed": {
               "name": "amount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "count": {
            "value": "/count/g",
            "confidenceDetailed": {
               "name": "count",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "value": {
            "value": "/value/g",
            "confidenceDetailed": {
               "name": "value",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "quantity": {
            "value": "/quantity/g",
            "confidenceDetailed": {
               "name": "quantity",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "total": {
            "value": "/total/g",
            "confidenceDetailed": {
               "name": "total",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "aggregate": {
            "value": "/aggregate/g",
            "confidenceDetailed": {
               "name": "aggregate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "weight": {
            "value": "/weight/g",
            "confidenceDetailed": {
               "name": "weight",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "quota": {
            "value": "/quota/g",
            "confidenceDetailed": {
               "name": "quota",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "size": {
            "value": "/size/g",
            "confidenceDetailed": {
               "name": "size",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 9,
            "value": "/(?<volume>volume)|(?<amount>amount)|(?<count>count)|(?<value>value)|(?<quantity>quantity)|(?<total>total)|(?<aggregate>aggregate)|(?<weight>weight)|(?<quota>quota)|(?<size>size)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "volume": {
            "value": "/volume/g",
            "confidenceDetailed": {
               "name": "volume",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "amount": {
            "value": "/amount/g",
            "confidenceDetailed": {
               "name": "amount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "count": {
            "value": "/count/g",
            "confidenceDetailed": {
               "name": "count",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "value": {
            "value": "/value/g",
            "confidenceDetailed": {
               "name": "value",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "quantity": {
            "value": "/quantity/g",
            "confidenceDetailed": {
               "name": "quantity",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "total": {
            "value": "/total/g",
            "confidenceDetailed": {
               "name": "total",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "aggregate": {
            "value": "/aggregate/g",
            "confidenceDetailed": {
               "name": "aggregate",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "weight": {
            "value": "/weight/g",
            "confidenceDetailed": {
               "name": "weight",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "quota": {
            "value": "/quota/g",
            "confidenceDetailed": {
               "name": "quota",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "size": {
            "value": "/size/g",
            "confidenceDetailed": {
               "name": "size",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 9,
            "value": "/(?<volume>volume)|(?<amount>amount)|(?<count>count)|(?<value>value)|(?<quantity>quantity)|(?<total>total)|(?<aggregate>aggregate)|(?<weight>weight)|(?<quota>quota)|(?<size>size)/"
         }
      ]
   },
   "RHS_ACCOUNT_ID": {
      "regexes": [
         {
            "value": "/(?:RHS_?)\\d{9}/g",
            "confidenceDetailed": {
               "name": "rhsaccid1",
               "type": "reg",
               "confidence": 1
            }
         },
         {
            "value": "/\\d{9}/g",
            "confidenceDetailed": {
               "name": "rhsaccid2",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "neighbours": [
         {
            "value": "/acc(?:ount)[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "accountid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/rhs[-_ ]?acc(?:ount)?/g",
            "confidenceDetailed": {
               "name": "rhsaccount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/rhs[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "rhsid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)rhs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/account/g",
            "confidenceDetailed": {
               "name": "account",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "specificClientOnly": true,
      "neighbourhoodLength": 15,
      "preBuiltStructuredNeighboursMap": {
         "accountid": {
            "value": "/acc(?:ount)[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "accountid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhsaccount": {
            "value": "/rhs[-_ ]?acc(?:ount)?/g",
            "confidenceDetailed": {
               "name": "rhsaccount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhsid": {
            "value": "/rhs[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "rhsid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhs": {
            "value": "/(?:\\b|_|\\\\n)rhs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "account": {
            "value": "/account/g",
            "confidenceDetailed": {
               "name": "account",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "user": {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<accountid>acc(?:ount)[-_ ]?id)|(?<rhsaccount>rhs[-_ ]?acc(?:ount)?)|(?<rhsid>rhs[-_ ]?id)|(?<rhs>(?:\\b|_|\\\\n)rhs(?:\\b|_|\\\\n))|(?<account>account)|(?<user>user)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "accountid": {
            "value": "/acc(?:ount)[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "accountid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhsaccount": {
            "value": "/rhs[-_ ]?acc(?:ount)?/g",
            "confidenceDetailed": {
               "name": "rhsaccount",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhsid": {
            "value": "/rhs[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "rhsid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhs": {
            "value": "/(?:\\b|_|\\\\n)rhs(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<accountid>acc(?:ount)[-_ ]?id)|(?<rhsaccount>rhs[-_ ]?acc(?:ount)?)|(?<rhsid>rhs[-_ ]?id)|(?<rhs>(?:\\b|_|\\\\n)rhs(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "RHS_APEX_ID": {
      "regexes": [
         {
            "value": "/\\d{1}[A-Z]{2}\\d{5}/g",
            "confidenceDetailed": {
               "name": "rhsapexid1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "neighbours": [
         {
            "value": "/apex[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "apexid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/apex/",
            "confidenceDetailed": {
               "name": "apex",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/user/",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "specificClientOnly": true,
      "neighbourhoodLength": 15,
      "preBuiltStructuredNeighboursMap": {
         "apexid": {
            "value": "/apex[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "apexid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "userid": {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "rhs": {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "apex": {
            "value": "/apex/",
            "confidenceDetailed": {
               "name": "apex",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "user": {
            "value": "/user/",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 19,
            "value": "/(?<apexid>apex[-_ ]?id)|(?<userid>user[-_ ]?id)|(?<rhs>(?:\\b|_)rhs(?:\\b|_))|(?<apex>apex)|(?<user>user)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "apexid": {
            "value": "/apex[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "apexid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "userid": {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "rhs": {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.4
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 19,
            "value": "/(?<apexid>apex[-_ ]?id)|(?<userid>user[-_ ]?id)|(?<rhs>(?:\\b|_)rhs(?:\\b|_))/"
         }
      ]
   },
   "RHS_USER_UUID": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/g",
            "confidenceDetailed": {
               "name": "rhsuseruuid1",
               "type": "reg",
               "confidence": 0.7
            }
         }
      ],
      "regexCacheCategory": "UUID",
      "neighbours": [
         {
            "value": "/user[-_ ]?uuid/g",
            "confidenceDetailed": {
               "name": "useruuid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         },
         "highSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         }
      },
      "specificClientOnly": true,
      "neighbourhoodLength": 15,
      "isSubsetOf": "UUID",
      "preBuiltStructuredNeighboursMap": {
         "useruuid": {
            "value": "/user[-_ ]?uuid/g",
            "confidenceDetailed": {
               "name": "useruuid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "userid": {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "user": {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhs": {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 19,
            "value": "/(?<useruuid>user[-_ ]?uuid)|(?<userid>user[-_ ]?id)|(?<user>user)|(?<rhs>(?:\\b|_)rhs(?:\\b|_))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "useruuid": {
            "value": "/user[-_ ]?uuid/g",
            "confidenceDetailed": {
               "name": "useruuid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "userid": {
            "value": "/user[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "user": {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "rhs": {
            "value": "/(?:\\b|_)rhs(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "rhs",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 19,
            "value": "/(?<useruuid>user[-_ ]?uuid)|(?<userid>user[-_ ]?id)|(?<user>user)|(?<rhs>(?:\\b|_)rhs(?:\\b|_))/"
         }
      ]
   },
   "RHS_DEVICE_ID": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/g",
            "confidenceDetailed": {
               "name": "rhsdeviceid1",
               "type": "reg",
               "confidence": 0.7
            }
         }
      ],
      "regexCacheCategory": "UUID",
      "neighbours": [
         {
            "value": "/device[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "deviceid",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/device/g",
            "confidenceDetailed": {
               "name": "device",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         },
         "highSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         }
      },
      "specificClientOnly": true,
      "availability": "structuredOnly",
      "isSubsetOf": "UUID",
      "preBuiltStructuredNeighboursMap": {
         "deviceid": {
            "value": "/device[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "deviceid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "device": {
            "value": "/device/g",
            "confidenceDetailed": {
               "name": "device",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 14,
            "value": "/(?<deviceid>device[-_ ]?id)|(?<device>device)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "deviceid": {
            "value": "/device[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "deviceid",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 14,
            "value": "/(?<deviceid>device[-_ ]?id)/"
         }
      ]
   },
   "SALESFORCE_ID": {
      "regexes": [
         {
            "value": "/[a-zA-Z0-9]{18}/g",
            "confidenceDetailed": {
               "name": "salesforceid1",
               "type": "reg",
               "confidence": 0.6
            }
         }
      ],
      "validator": "salesforce_id",
      "neighbours": [
         {
            "value": "/salesforce[-_ ]?(?:ticket|case)/g",
            "confidenceDetailed": {
               "name": "salesforceticket",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/salesforce[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "salesforceid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/cx[-_ ]?ticket/g",
            "confidenceDetailed": {
               "name": "cxticket",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/case[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "caseid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/cx[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "cxid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/ticket[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "ticketid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         {
            "value": "/salesforce/g",
            "confidenceDetailed": {
               "name": "salesforce",
               "type": "nb",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/customer/g",
            "confidenceDetailed": {
               "name": "customer",
               "type": "nb",
               "confidence": 0.35
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "isSubsetOf": "GENERIC_ID",
      "preBuiltStructuredNeighboursMap": {
         "salesforceticket": {
            "value": "/salesforce[-_ ]?(?:ticket|case)/g",
            "confidenceDetailed": {
               "name": "salesforceticket",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "salesforceid": {
            "value": "/salesforce[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "salesforceid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cxticket": {
            "value": "/cx[-_ ]?ticket/g",
            "confidenceDetailed": {
               "name": "cxticket",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "caseid": {
            "value": "/case[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "caseid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cxid": {
            "value": "/cx[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "cxid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "ticketid": {
            "value": "/ticket[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "ticketid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "salesforce": {
            "value": "/salesforce/g",
            "confidenceDetailed": {
               "name": "salesforce",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "customer": {
            "value": "/customer/g",
            "confidenceDetailed": {
               "name": "customer",
               "type": "nb",
               "confidence": 0.35
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<salesforceticket>salesforce[-_ ]?(?:ticket|case))|(?<salesforceid>salesforce[-_ ]?id)|(?<cxticket>cx[-_ ]?ticket)|(?<caseid>case[-_ ]?id)|(?<cxid>cx[-_ ]?id)|(?<ticketid>ticket[-_ ]?id)|(?<salesforce>salesforce)|(?<customer>customer)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "salesforceticket": {
            "value": "/salesforce[-_ ]?(?:ticket|case)/g",
            "confidenceDetailed": {
               "name": "salesforceticket",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "salesforceid": {
            "value": "/salesforce[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "salesforceid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cxticket": {
            "value": "/cx[-_ ]?ticket/g",
            "confidenceDetailed": {
               "name": "cxticket",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "caseid": {
            "value": "/case[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "caseid",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "cxid": {
            "value": "/cx[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "cxid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "ticketid": {
            "value": "/ticket[-_ ]?id/g",
            "confidenceDetailed": {
               "name": "ticketid",
               "type": "nb",
               "confidence": 0.4
            }
         },
         "salesforce": {
            "value": "/salesforce/g",
            "confidenceDetailed": {
               "name": "salesforce",
               "type": "nb",
               "confidence": 0.4
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 31,
            "value": "/(?<salesforceticket>salesforce[-_ ]?(?:ticket|case))|(?<salesforceid>salesforce[-_ ]?id)|(?<cxticket>cx[-_ ]?ticket)|(?<caseid>case[-_ ]?id)|(?<cxid>cx[-_ ]?id)|(?<ticketid>ticket[-_ ]?id)|(?<salesforce>salesforce)/"
         }
      ]
   },
   "UUID": {
      "regexes": [
         {
            "value": "/[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/g",
            "confidenceDetailed": {
               "name": "uuid1",
               "type": "reg",
               "confidence": 1
            }
         }
      ],
      "regexCacheCategory": "UUID",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         },
         "highSensitivity": {
            "front": "/(?:_|\\b)/g",
            "back": "/(?:_|\\b)/g"
         }
      },
      "isSubsetOf": "GENERIC_ID"
   },
   "AGE": {
      "regexes": [
         {
            "value": "/(?:1[0-2][0-9]|[0-9]?[0-9])(years?|yrs?|yo?)/g",
            "confidenceDetailed": {
               "name": "age1",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/(?:1[0-2][0-9]|[0-9]?[0-9])/g",
            "confidenceDetailed": {
               "name": "age2",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)age(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "age",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "howold",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "idade",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/yaş/g",
            "confidenceDetailed": {
               "name": "yaş",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "yearsold",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)(?:age is|ages are)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "age is ",
               "alternateCaptureGroupName": "ageis",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)age ?[:=-]/g",
            "confidenceDetailed": {
               "name": "age:",
               "alternateCaptureGroupName": "agecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-]/g",
            "confidenceDetailed": {
               "name": "howold:",
               "alternateCaptureGroupName": "howoldcolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)idade ?[:=-]/g",
            "confidenceDetailed": {
               "name": "idade:",
               "alternateCaptureGroupName": "idadecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)yaş ?[:=-]/g",
            "confidenceDetailed": {
               "name": "yaş:",
               "alternateCaptureGroupName": "yascolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "yearsold",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyBack": true
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         }
      },
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               }
            ]
         }
      },
      "highDetectionSensitivityConfidenceThreshold": 0.75,
      "neighbourhoodLength": 10,
      "preBuiltStructuredNeighboursMap": {
         "age": {
            "value": "/(?:\\b|_|\\\\n)age(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "age",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "howold": {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "howold",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "idade": {
            "value": "/(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "idade",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "yaş": {
            "value": "/yaş/g",
            "confidenceDetailed": {
               "name": "yaş",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "yearsold": {
            "value": "/(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "yearsold",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 54,
            "value": "/(?<age>(?:\\b|_|\\\\n)age(?:\\b|_|\\\\n))|(?<howold>(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n))|(?<idade>(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n))|(?<yaş>yaş)|(?<yearsold>(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n))/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "ageis": {
            "value": "/(?:\\b|_|\\\\n)(?:age is|ages are)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "age is ",
               "alternateCaptureGroupName": "ageis",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "agecolon": {
            "value": "/(?:\\b|_|\\\\n)age ?[:=-]/g",
            "confidenceDetailed": {
               "name": "age:",
               "alternateCaptureGroupName": "agecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "howoldcolon": {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-]/g",
            "confidenceDetailed": {
               "name": "howold:",
               "alternateCaptureGroupName": "howoldcolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "idadecolon": {
            "value": "/(?:\\b|_|\\\\n)idade ?[:=-]/g",
            "confidenceDetailed": {
               "name": "idade:",
               "alternateCaptureGroupName": "idadecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "yascolon": {
            "value": "/(?:\\b|_|\\\\n)yaş ?[:=-]/g",
            "confidenceDetailed": {
               "name": "yaş:",
               "alternateCaptureGroupName": "yascolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "yearsold": {
            "value": "/(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "yearsold",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyBack": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 43,
            "value": "/(?<ageis>(?:\\b|_|\\\\n)(?:age is|ages are)(?:\\b|_|\\\\n))|(?<agecolon>(?:\\b|_|\\\\n)age ?[:=-])|(?<howoldcolon>(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-])|(?<idadecolon>(?:\\b|_|\\\\n)idade ?[:=-])|(?<yascolon>(?:\\b|_|\\\\n)yaş ?[:=-])/",
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 54,
            "value": "/(?<yearsold>(?:\\b|_|\\\\n)years[ _-]?(?:of[ _-]?age|old)(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyBack": true
         }
      ]
   },
   "AGE_RANGE": {
      "regexes": [
         {
            "value": "/(?<!-)(?:1[0-2][0-9]|[0-9]?[0-9])(years?|yrs?|yo?)? ?(?:-{1,2}|to) ?(?:1[0-2][0-9]|[0-9]?[0-9])(years?|yrs?|yo?)(?!-)/g",
            "confidenceDetailed": {
               "name": "agerange1",
               "type": "reg",
               "confidence": 0.95
            }
         },
         {
            "value": "/[><]=? ?(?:1[0-2][0-9]|[0-9]{1,2})(?:years?|yrs?|yo?)/g",
            "confidenceDetailed": {
               "name": "agerange2",
               "type": "reg",
               "confidence": 0.9
            }
         },
         {
            "value": "/(?:1[0-2][0-9]|[0-9]{1,2})(?:(?:years?|yrs?|yo?)\\+|\\+(?:years?|yrs?|yo?))/g",
            "confidenceDetailed": {
               "name": "agerange3",
               "type": "reg",
               "confidence": 0.85
            }
         },
         {
            "value": "/(?<!-)(?:1[0-2][0-9]|[0-9]?[0-9]) ?(?:-{1,2}|to) ?(?:1[0-2][0-9]|[0-9]?[0-9])(?!-)/g",
            "confidenceDetailed": {
               "name": "agerange4",
               "type": "reg",
               "confidence": 0.4
            }
         },
         {
            "value": "/[><]=? ?(?:1[0-2][0-9]|[0-9]{1,2})/g",
            "confidenceDetailed": {
               "name": "agerange5",
               "type": "reg",
               "confidence": 0.4
            }
         },
         {
            "value": "/(?:1[0-2][0-9]|[0-9]{1,2})\\+/g",
            "confidenceDetailed": {
               "name": "agerange6",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "validator": "age_range",
      "structuredNeighbours": [
         {
            "value": "/(?:\\b|_|\\\\n)age/g",
            "confidenceDetailed": {
               "name": "age",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/age[ _-]?range/g",
            "confidenceDetailed": {
               "name": "agerange",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/age[ _-]?cat(?:egory)?/g",
            "confidenceDetailed": {
               "name": "agecategory",
               "type": "nb",
               "confidence": 0.55
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "howold",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "idade",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/yaş/g",
            "confidenceDetailed": {
               "name": "yaş",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/age[ _-]?range/g",
            "confidenceDetailed": {
               "name": "agerange",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/age[ _-]?cat(?:egory)?/g",
            "confidenceDetailed": {
               "name": "agecategory",
               "type": "nb",
               "confidence": 0.35
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)age ?[:=-]/g",
            "confidenceDetailed": {
               "name": "age:",
               "alternateCaptureGroupName": "agecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-]/g",
            "confidenceDetailed": {
               "name": "howold:",
               "alternateCaptureGroupName": "howoldcolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)idade ?[:=-]/g",
            "confidenceDetailed": {
               "name": "idade:",
               "alternateCaptureGroupName": "idadecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_|\\\\n)yaş ?[:=-]/g",
            "confidenceDetailed": {
               "name": "yaş:",
               "alternateCaptureGroupName": "yascolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         }
      },
      "highDetectionSensitivityConfidenceThreshold": 0.75,
      "preBuiltStructuredNeighboursMap": {
         "age": {
            "value": "/(?:\\b|_|\\\\n)age/g",
            "confidenceDetailed": {
               "name": "age",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "agerange": {
            "value": "/age[ _-]?range/g",
            "confidenceDetailed": {
               "name": "agerange",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "agecategory": {
            "value": "/age[ _-]?cat(?:egory)?/g",
            "confidenceDetailed": {
               "name": "agecategory",
               "type": "nb",
               "confidence": 0.55
            }
         },
         "howold": {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "howold",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "idade": {
            "value": "/(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "idade",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "yaş": {
            "value": "/yaş/g",
            "confidenceDetailed": {
               "name": "yaş",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 36,
            "value": "/(?<age>(?:\\b|_|\\\\n)age)|(?<agerange>age[ _-]?range)|(?<agecategory>age[ _-]?cat(?:egory)?)|(?<howold>(?:\\b|_|\\\\n)how[ _-]?old(?:\\b|_|\\\\n))|(?<idade>(?:\\b|_|\\\\n)idade(?:\\b|_|\\\\n))|(?<yaş>yaş)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "agerange": {
            "value": "/age[ _-]?range/g",
            "confidenceDetailed": {
               "name": "agerange",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "agecategory": {
            "value": "/age[ _-]?cat(?:egory)?/g",
            "confidenceDetailed": {
               "name": "agecategory",
               "type": "nb",
               "confidence": 0.35
            }
         },
         "agecolon": {
            "value": "/(?:\\b|_|\\\\n)age ?[:=-]/g",
            "confidenceDetailed": {
               "name": "age:",
               "alternateCaptureGroupName": "agecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "howoldcolon": {
            "value": "/(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-]/g",
            "confidenceDetailed": {
               "name": "howold:",
               "alternateCaptureGroupName": "howoldcolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "idadecolon": {
            "value": "/(?:\\b|_|\\\\n)idade ?[:=-]/g",
            "confidenceDetailed": {
               "name": "idade:",
               "alternateCaptureGroupName": "idadecolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         },
         "yascolon": {
            "value": "/(?:\\b|_|\\\\n)yaş ?[:=-]/g",
            "confidenceDetailed": {
               "name": "yaş:",
               "alternateCaptureGroupName": "yascolon",
               "type": "nb",
               "confidence": 0.35
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 22,
            "value": "/(?<agerange>age[ _-]?range)|(?<agecategory>age[ _-]?cat(?:egory)?)/"
         },
         {
            "maxRegexSourceLength": 32,
            "value": "/(?<agecolon>(?:\\b|_|\\\\n)age ?[:=-])|(?<howoldcolon>(?:\\b|_|\\\\n)how[ _-]?old ?[?:=-])|(?<idadecolon>(?:\\b|_|\\\\n)idade ?[:=-])|(?<yascolon>(?:\\b|_|\\\\n)yaş ?[:=-])/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "INCOME": {
      "regexes": [
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/g",
            "confidenceDetailed": {
               "name": "income1",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "regexCacheCategory": "AMOUNT",
      "structuredNeighbours": [
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^wages?$/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.3
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.3
            }
         }
      ],
      "validator": "income",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.15,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "INCOME_RANGE",
                     "ifDominantInfoTypeConfAbove": 0.45
                  }
               }
            ]
         }
      },
      "highDetectionSensitivityConfidenceThreshold": 0.75,
      "isSubsetOf": "MONEY",
      "preBuiltStructuredNeighboursMap": {
         "annualincome": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "annualcomps": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "annualwages": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "salary": {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "wages": {
            "value": "/^wages?$/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 141,
            "value": "/(?<annualincome>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?)|(?<annualcomps>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?)|(?<annualwages>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?))|(?<income>income)|(?<salary>salar(?:y|ies))|(?<wages>^wages?$)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "annualincome": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "annualcomps": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "annualwages": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "salary": {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.3
            }
         },
         "wages": {
            "value": "/(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.3
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 141,
            "value": "/(?<annualincome>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?)|(?<annualcomps>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?)|(?<annualwages>(?:gross|base|basic|overtime|other|total|annual|monthly|weekly|daily|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?))|(?<income>income)|(?<salary>salar(?:y|ies))|(?<wages>(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "INCOME_RANGE": {
      "regexes": [
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})? ?(?:-{1,2}|to) ?(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/gi",
            "confidenceDetailed": {
               "name": "income_range1",
               "type": "reg",
               "confidence": 0.55
            }
         },
         {
            "value": "/(?:up ?to|less ?than|lower ?than|under|below|over|above) ?(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/gi",
            "confidenceDetailed": {
               "name": "income_range2",
               "type": "reg",
               "confidence": 0.55
            }
         },
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})? ?(?:(?:or|and) ?(?:higher|more|above|under|over|below)|more ?than|higher ?than)/gi",
            "confidenceDetailed": {
               "name": "income_range3",
               "type": "reg",
               "confidence": 0.55
            }
         },
         {
            "value": "/[><~]=? ?(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?/g",
            "confidenceDetailed": {
               "name": "income_range4",
               "type": "reg",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\$?[a-zA-Z]{2,3}\\$? ?)?(?:\\$?\\(?\\$?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?)(?:\\.\\d+)?\\)?|\\$?[+-]?\\d{1,3}(?:(?:,\\d{2,3}){1,5}|\\d{0,15}[kKmMbB]?))(?:\\.\\d+)?(?: [a-zA-Z]{2,3})?\\+/g",
            "confidenceDetailed": {
               "name": "income_range5",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band)/g",
            "confidenceDetailed": {
               "name": "incomerange",
               "type": "nb",
               "confidence": 0.6
            }
         },
         {
            "value": "/inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist)/g",
            "confidenceDetailed": {
               "name": "inc_rge",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^wages?$/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band)/g",
            "confidenceDetailed": {
               "name": "incomerange",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist)/g",
            "confidenceDetailed": {
               "name": "inc_rge",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.25
            }
         },
         {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.2
            }
         },
         {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.2
            }
         },
         {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.2
            }
         },
         {
            "value": "/(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.2
            }
         }
      ],
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "highDetectionSensitivityConfidenceThreshold": 0.75,
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "incomerange": {
            "value": "/(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band)/g",
            "confidenceDetailed": {
               "name": "incomerange",
               "type": "nb",
               "confidence": 0.6
            }
         },
         "inc_rge": {
            "value": "/inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist)/g",
            "confidenceDetailed": {
               "name": "inc_rge",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "annualincome": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "annualcomps": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "annualwages": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "salary": {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "wages": {
            "value": "/^wages?$/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 120,
            "value": "/(?<incomerange>(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band))|(?<inc_rge>inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist))|(?<annualincome>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?)|(?<annualcomps>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?)|(?<annualwages>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?))|(?<income>income)|(?<salary>salar(?:y|ies))|(?<wages>^wages?$)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "incomerange": {
            "value": "/(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band)/g",
            "confidenceDetailed": {
               "name": "incomerange",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "inc_rge": {
            "value": "/inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist)/g",
            "confidenceDetailed": {
               "name": "inc_rge",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "annualincome": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?/g",
            "confidenceDetailed": {
               "name": "annualincome",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "annualcomps": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?/g",
            "confidenceDetailed": {
               "name": "annualcomps",
               "type": "nb",
               "confidence": 0.25
            }
         },
         "annualwages": {
            "value": "/(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?)/g",
            "confidenceDetailed": {
               "name": "annualwages",
               "type": "nb",
               "confidence": 0.2
            }
         },
         "income": {
            "value": "/income/g",
            "confidenceDetailed": {
               "name": "income",
               "type": "nb",
               "confidence": 0.2
            }
         },
         "salary": {
            "value": "/salar(?:y|ies)/g",
            "confidenceDetailed": {
               "name": "salary",
               "type": "nb",
               "confidence": 0.2
            }
         },
         "wages": {
            "value": "/(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "wages",
               "type": "nb",
               "confidence": 0.2
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 120,
            "value": "/(?<incomerange>(?:wages?|pay|salary|income|compensation)[-_ ]?(?:range|bracket|group|distribution|band))|(?<inc_rge>inc(?:ome)?[-_ ]?(?:ra?n?ge?|gr(?:ou)?p|dist))|(?<annualincome>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?inc(?:ome)?)|(?<annualcomps>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?comp(?:s|ensation)?)|(?<annualwages>(?:gross|base|basic|overtime|other|total|annual|yearly|emp(?:loy(?:ment|ee))?)[-_ ]?(?:pay|earnings|remuneration|wages?))|(?<income>income)|(?<salary>salar(?:y|ies))|(?<wages>(?:\\b|_|\\\\n)wages?(?:\\b|_|\\\\n))/"
         }
      ]
   },
   "SOCIAL_NETWORK_ID": {
      "regexes": [
         {
            "value": "/\\S{5,}/g",
            "confidenceDetailed": {
               "name": "socnetid1",
               "type": "reg",
               "confidence": 0.4
            }
         }
      ],
      "neighbours": [
         {
            "value": "/social[ _-]?network[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialnetworkid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/social[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/user[ _-]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/^id$/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.45
            }
         },
         {
            "value": "/handle/g",
            "confidenceDetailed": {
               "name": "handle",
               "type": "nb",
               "confidence": 0.45
            }
         }
      ],
      "matchExact": true,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "availability": "structuredOnly",
      "isSubsetOf": "GENERIC_ID",
      "specificClientOnly": true,
      "preBuiltStructuredNeighboursMap": {
         "socialnetworkid": {
            "value": "/social[ _-]?network[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialnetworkid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "socialid": {
            "value": "/social[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "userid": {
            "value": "/user[ _-]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "user": {
            "value": "/user/g",
            "confidenceDetailed": {
               "name": "user",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "id": {
            "value": "/^id$/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.45
            }
         },
         "handle": {
            "value": "/handle/g",
            "confidenceDetailed": {
               "name": "handle",
               "type": "nb",
               "confidence": 0.45
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<socialnetworkid>social[ _-]?network[ _-]?id)|(?<socialid>social[ _-]?id)|(?<userid>user[ _-]?id)|(?<user>user)|(?<id>^id$)|(?<handle>handle)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "socialnetworkid": {
            "value": "/social[ _-]?network[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialnetworkid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "socialid": {
            "value": "/social[ _-]?id/g",
            "confidenceDetailed": {
               "name": "socialid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "userid": {
            "value": "/user[ _-]?id/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 27,
            "value": "/(?<socialnetworkid>social[ _-]?network[ _-]?id)|(?<socialid>social[ _-]?id)|(?<userid>user[ _-]?id)/"
         }
      ]
   },
   "POSTAL_CODE": {
      "regexes": [
         {
            "value": "/(?:[A-Za-z0-9][A-Za-z0-9 -]{3,11}|[0-9]{3})/g",
            "confidenceDetailed": {
               "name": "postal1",
               "type": "reg",
               "confidence": 0.35
            }
         },
         {
            "value": "/\\s[0-9]{5,6}\\s/g",
            "confidenceDetailed": {
               "name": "postal2",
               "type": "reg",
               "confidence": 0.45
            }
         }
      ],
      "validator": "postal",
      "unstructuredNeighbours": [
         {
            "value": "/(?<=(?:\\s|^|['\\\"`]))(?<!(?:[=:] ?|[._-]))zip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "zip",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         },
         {
            "value": "/post(?:al)?[ _-]?code/g",
            "confidenceDetailed": {
               "name": "postalcode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/zip[ _-]?code/g",
            "confidenceDetailed": {
               "name": "zipcode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/pin[ _-]?code/g",
            "confidenceDetailed": {
               "name": "pincode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/postal/g",
            "confidenceDetailed": {
               "name": "postal",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/po[ _-]?box/g",
            "confidenceDetailed": {
               "name": "pobox",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/eircode/g",
            "confidenceDetailed": {
               "name": "eircode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/\\bplz\\b/g",
            "confidenceDetailed": {
               "name": "plz",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 3
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?<!(?:[=:] ?|\\.))zip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "zip",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/post(?:al)?[ _-]?code/g",
            "confidenceDetailed": {
               "name": "postalcode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/zip[ _-]?code/g",
            "confidenceDetailed": {
               "name": "zipcode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/pin[ _-]?code/g",
            "confidenceDetailed": {
               "name": "pincode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/po[ _-]?box/g",
            "confidenceDetailed": {
               "name": "pobox",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/postal/g",
            "confidenceDetailed": {
               "name": "postal",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/eircode/g",
            "confidenceDetailed": {
               "name": "eircode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/\\bplz\\b/g",
            "confidenceDetailed": {
               "name": "plz",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "matchExact": true,
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "zip": {
            "value": "/(?<!(?:[=:] ?|\\.))zip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "zip",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "postalcode": {
            "value": "/post(?:al)?[ _-]?code/g",
            "confidenceDetailed": {
               "name": "postalcode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "zipcode": {
            "value": "/zip[ _-]?code/g",
            "confidenceDetailed": {
               "name": "zipcode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "pincode": {
            "value": "/pin[ _-]?code/g",
            "confidenceDetailed": {
               "name": "pincode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "pobox": {
            "value": "/po[ _-]?box/g",
            "confidenceDetailed": {
               "name": "pobox",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "postal": {
            "value": "/postal/g",
            "confidenceDetailed": {
               "name": "postal",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "eircode": {
            "value": "/eircode/g",
            "confidenceDetailed": {
               "name": "eircode",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "plz": {
            "value": "/\\bplz\\b/g",
            "confidenceDetailed": {
               "name": "plz",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 33,
            "value": "/(?<zip>(?<!(?:[=:] ?|\\.))zip(?:\\b|_|\\\\n))|(?<postalcode>post(?:al)?[ _-]?code)|(?<zipcode>zip[ _-]?code)|(?<pincode>pin[ _-]?code)|(?<pobox>po[ _-]?box)|(?<postal>postal)|(?<eircode>eircode)|(?<plz>\\bplz\\b)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "zip": {
            "value": "/(?<=(?:\\s|^|['\\\"`]))(?<!(?:[=:] ?|[._-]))zip(?:\\b|_|\\\\n)/g",
            "confidenceDetailed": {
               "name": "zip",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 0
         },
         "postalcode": {
            "value": "/post(?:al)?[ _-]?code/g",
            "confidenceDetailed": {
               "name": "postalcode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "zipcode": {
            "value": "/zip[ _-]?code/g",
            "confidenceDetailed": {
               "name": "zipcode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "pincode": {
            "value": "/pin[ _-]?code/g",
            "confidenceDetailed": {
               "name": "pincode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "postal": {
            "value": "/postal/g",
            "confidenceDetailed": {
               "name": "postal",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "pobox": {
            "value": "/po[ _-]?box/g",
            "confidenceDetailed": {
               "name": "pobox",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "eircode": {
            "value": "/eircode/g",
            "confidenceDetailed": {
               "name": "eircode",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "plz": {
            "value": "/\\bplz\\b/g",
            "confidenceDetailed": {
               "name": "plz",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true,
            "neighbourhoodLength": 3
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 56,
            "value": "/(?<zip>(?<=(?:\\s|^|['\\\"`]))(?<!(?:[=:] ?|[._-]))zip(?:\\b|_|\\\\n))/",
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 7,
            "value": "/(?<plz>\\bplz\\b)/",
            "neighbourhoodLength": 3,
            "matchNeighbourOnlyFront": true
         },
         {
            "maxRegexSourceLength": 21,
            "value": "/(?<postalcode>post(?:al)?[ _-]?code)|(?<zipcode>zip[ _-]?code)|(?<pincode>pin[ _-]?code)|(?<postal>postal)|(?<pobox>po[ _-]?box)|(?<eircode>eircode)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "DRIVER_LICENSE_NUMBER": {
      "regexes": [
         {
            "value": "/[A-Z0-9-]{8,18}/g",
            "confidenceDetailed": {
               "name": "lic1",
               "type": "reg",
               "confidence": 0.35
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/driver'?s?[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "driverlicense",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/driving[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "drivinglicense",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/fuehrerscheinnummer/g",
            "confidenceDetailed": {
               "name": "fuehrerscheinnummer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/f[üu]e?hrersch[ea]in/g",
            "confidenceDetailed": {
               "name": "fuhrerschein",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/permis[ _-]?conduire/g",
            "confidenceDetailed": {
               "name": "permisconduire",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/rijbewijsnummer/g",
            "confidenceDetailed": {
               "name": "rijbewijsnummer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/[cč][ií]slo[ _-]?licenci?e/g",
            "confidenceDetailed": {
               "name": "cislolicence",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/k[øo]rekort/g",
            "confidenceDetailed": {
               "name": "korekort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/voza[cč]ka[ _-]?dozvola/g",
            "confidenceDetailed": {
               "name": "vozackadozvola",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/illeszt[oő]programok[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "illesztoprogramoklic",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/jogos[ií]tv[aá]ny/g",
            "confidenceDetailed": {
               "name": "jogositvany",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/vezet[oő]i?[ _-]?enged[eé]ly/g",
            "confidenceDetailed": {
               "name": "vezetoengedely",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/juhiluba/g",
            "confidenceDetailed": {
               "name": "juhiluba",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/juhi[ _-]?litsentsi/g",
            "confidenceDetailed": {
               "name": "juhilitsentsi",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/patente[ _-]?(?:di[ _-]?)?guida/g",
            "confidenceDetailed": {
               "name": "patenteguida",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja)/g",
            "confidenceDetailed": {
               "name": "vaditajaaplieciba",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/vairuotojo[ _-]?pa[zž]ym[eė]jimas/g",
            "confidenceDetailed": {
               "name": "vairuotojopazymejimas",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/li[cċ]enzja[ _-]?tas-?sewqan/g",
            "confidenceDetailed": {
               "name": "licenzjatassewqan",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/rijbewijs/g",
            "confidenceDetailed": {
               "name": "rijbewijs",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/numer[-_ ]?licencyjny/g",
            "confidenceDetailed": {
               "name": "numerlicencyjny",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/prawo[-_ ]?jazdy/g",
            "confidenceDetailed": {
               "name": "prawojazdy",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/zezwolenie[-_ ]?na[-_ ]?prowadzenie/g",
            "confidenceDetailed": {
               "name": "zezwolenienaprowadzenie",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist)/g",
            "confidenceDetailed": {
               "name": "carteiradehabilitacao",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o/g",
            "confidenceDetailed": {
               "name": "cartadeconducao",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/permis[-_ ]?(?:de[-_ ]?)?conducere/g",
            "confidenceDetailed": {
               "name": "permisdeconducere",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov)/g",
            "confidenceDetailed": {
               "name": "povoleniavodicov",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/vozni[sš]ko[-_ ]?dovoljenje/g",
            "confidenceDetailed": {
               "name": "vozniskodovoljenje",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n)/g",
            "confidenceDetailed": {
               "name": "carnetdeconducer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/ajokortin[ _-]?numero/g",
            "confidenceDetailed": {
               "name": "ajokortinnumero",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/k[oö]rkort/g",
            "confidenceDetailed": {
               "name": "korkort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:f[oö]rare|drivere)[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "forarelic",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/driver'?s?[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "driverlicense",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/driving[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "drivinglicense",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/fuehrerscheinnummer/g",
            "confidenceDetailed": {
               "name": "fuehrerscheinnummer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/f[üu]e?hrersch[ea]in/g",
            "confidenceDetailed": {
               "name": "fuhrerschein",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/permis[ _-]?conduire/g",
            "confidenceDetailed": {
               "name": "permisconduire",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/rijbewijsnummer/g",
            "confidenceDetailed": {
               "name": "rijbewijsnummer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/[cč][ií]slo[ _-]?licenci?e/g",
            "confidenceDetailed": {
               "name": "cislolicence",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/kørekort/g",
            "confidenceDetailed": {
               "name": "kørekort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/voza[cč]ka[ _-]?dozvola/g",
            "confidenceDetailed": {
               "name": "vozackadozvola",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/illeszt[oő]programok[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "illesztoprogramoklic",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/jogos[ií]tv[aá]ny/g",
            "confidenceDetailed": {
               "name": "jogositvany",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/vezet[oő]i?[ _-]?enged[eé]ly/g",
            "confidenceDetailed": {
               "name": "vezetoengedely",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/juhiluba/g",
            "confidenceDetailed": {
               "name": "juhiluba",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/juhi[ _-]?litsentsi/g",
            "confidenceDetailed": {
               "name": "juhilitsentsi",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/patente[ _-]?(?:di[ _-]?)?guida/g",
            "confidenceDetailed": {
               "name": "patenteguida",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja)/g",
            "confidenceDetailed": {
               "name": "vaditajaaplieciba",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/vairuotojo[ _-]?pa[zž]ym[eė]jimas/g",
            "confidenceDetailed": {
               "name": "vairuotojopazymejimas",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/li[cċ]enzja[ _-]?tas-?sewqan/g",
            "confidenceDetailed": {
               "name": "licenzjatassewqan",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/rijbewijs/g",
            "confidenceDetailed": {
               "name": "rijbewijs",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/numer[-_ ]?licencyjny/g",
            "confidenceDetailed": {
               "name": "numerlicencyjny",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/prawo[-_ ]?jazdy/g",
            "confidenceDetailed": {
               "name": "prawojazdy",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/zezwolenie[-_ ]?na[-_ ]?prowadzenie/g",
            "confidenceDetailed": {
               "name": "zezwolenienaprowadzenie",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist)/g",
            "confidenceDetailed": {
               "name": "carteiradehabilitacao",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o/g",
            "confidenceDetailed": {
               "name": "cartadeconducao",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/permis[-_ ]?(?:de[-_ ]?)?conducere/g",
            "confidenceDetailed": {
               "name": "permisdeconducere",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov)/g",
            "confidenceDetailed": {
               "name": "povoleniavodicov",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/vozni[sš]ko[-_ ]?dovoljenje/g",
            "confidenceDetailed": {
               "name": "vozniskodovoljenje",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n)/g",
            "confidenceDetailed": {
               "name": "carnetdeconducer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ajokortin[ _-]?numero/g",
            "confidenceDetailed": {
               "name": "ajokortinnumero",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/k[oö]rkort/g",
            "confidenceDetailed": {
               "name": "korkort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:f[oö]rare|drivere)[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "forarelic",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "validator": "drivers_license",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "driverlicense": {
            "value": "/driver'?s?[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "driverlicense",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "drivinglicense": {
            "value": "/driving[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "drivinglicense",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "fuehrerscheinnummer": {
            "value": "/fuehrerscheinnummer/g",
            "confidenceDetailed": {
               "name": "fuehrerscheinnummer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "fuhrerschein": {
            "value": "/f[üu]e?hrersch[ea]in/g",
            "confidenceDetailed": {
               "name": "fuhrerschein",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "permisconduire": {
            "value": "/permis[ _-]?conduire/g",
            "confidenceDetailed": {
               "name": "permisconduire",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "rijbewijsnummer": {
            "value": "/rijbewijsnummer/g",
            "confidenceDetailed": {
               "name": "rijbewijsnummer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cislolicence": {
            "value": "/[cč][ií]slo[ _-]?licenci?e/g",
            "confidenceDetailed": {
               "name": "cislolicence",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "korekort": {
            "value": "/k[øo]rekort/g",
            "confidenceDetailed": {
               "name": "korekort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vozackadozvola": {
            "value": "/voza[cč]ka[ _-]?dozvola/g",
            "confidenceDetailed": {
               "name": "vozackadozvola",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "illesztoprogramoklic": {
            "value": "/illeszt[oő]programok[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "illesztoprogramoklic",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "jogositvany": {
            "value": "/jogos[ií]tv[aá]ny/g",
            "confidenceDetailed": {
               "name": "jogositvany",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vezetoengedely": {
            "value": "/vezet[oő]i?[ _-]?enged[eé]ly/g",
            "confidenceDetailed": {
               "name": "vezetoengedely",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "juhiluba": {
            "value": "/juhiluba/g",
            "confidenceDetailed": {
               "name": "juhiluba",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "juhilitsentsi": {
            "value": "/juhi[ _-]?litsentsi/g",
            "confidenceDetailed": {
               "name": "juhilitsentsi",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "patenteguida": {
            "value": "/patente[ _-]?(?:di[ _-]?)?guida/g",
            "confidenceDetailed": {
               "name": "patenteguida",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vaditajaaplieciba": {
            "value": "/vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja)/g",
            "confidenceDetailed": {
               "name": "vaditajaaplieciba",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vairuotojopazymejimas": {
            "value": "/vairuotojo[ _-]?pa[zž]ym[eė]jimas/g",
            "confidenceDetailed": {
               "name": "vairuotojopazymejimas",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "licenzjatassewqan": {
            "value": "/li[cċ]enzja[ _-]?tas-?sewqan/g",
            "confidenceDetailed": {
               "name": "licenzjatassewqan",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "rijbewijs": {
            "value": "/rijbewijs/g",
            "confidenceDetailed": {
               "name": "rijbewijs",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "numerlicencyjny": {
            "value": "/numer[-_ ]?licencyjny/g",
            "confidenceDetailed": {
               "name": "numerlicencyjny",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "prawojazdy": {
            "value": "/prawo[-_ ]?jazdy/g",
            "confidenceDetailed": {
               "name": "prawojazdy",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "zezwolenienaprowadzenie": {
            "value": "/zezwolenie[-_ ]?na[-_ ]?prowadzenie/g",
            "confidenceDetailed": {
               "name": "zezwolenienaprowadzenie",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "carteiradehabilitacao": {
            "value": "/carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist)/g",
            "confidenceDetailed": {
               "name": "carteiradehabilitacao",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "cartadeconducao": {
            "value": "/(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o/g",
            "confidenceDetailed": {
               "name": "cartadeconducao",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "permisdeconducere": {
            "value": "/permis[-_ ]?(?:de[-_ ]?)?conducere/g",
            "confidenceDetailed": {
               "name": "permisdeconducere",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "povoleniavodicov": {
            "value": "/povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov)/g",
            "confidenceDetailed": {
               "name": "povoleniavodicov",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vozniskodovoljenje": {
            "value": "/vozni[sš]ko[-_ ]?dovoljenje/g",
            "confidenceDetailed": {
               "name": "vozniskodovoljenje",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "carnetdeconducer": {
            "value": "/(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n)/g",
            "confidenceDetailed": {
               "name": "carnetdeconducer",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ajokortinnumero": {
            "value": "/ajokortin[ _-]?numero/g",
            "confidenceDetailed": {
               "name": "ajokortinnumero",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "korkort": {
            "value": "/k[oö]rkort/g",
            "confidenceDetailed": {
               "name": "korkort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "forarelic": {
            "value": "/(?:f[oö]rare|drivere)[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "forarelic",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 79,
            "value": "/(?<driverlicense>driver'?s?[ _-]?(?:licen[cs]e|permit))|(?<drivinglicense>driving[ _-]?(?:licen[cs]e|permit))|(?<fuehrerscheinnummer>fuehrerscheinnummer)|(?<fuhrerschein>f[üu]e?hrersch[ea]in)|(?<permisconduire>permis[ _-]?conduire)|(?<rijbewijsnummer>rijbewijsnummer)|(?<cislolicence>[cč][ií]slo[ _-]?licenci?e)|(?<korekort>k[øo]rekort)|(?<vozackadozvola>voza[cč]ka[ _-]?dozvola)|(?<illesztoprogramoklic>illeszt[oő]programok[ _-]?lic)|(?<jogositvany>jogos[ií]tv[aá]ny)|(?<vezetoengedely>vezet[oő]i?[ _-]?enged[eé]ly)|(?<juhiluba>juhiluba)|(?<juhilitsentsi>juhi[ _-]?litsentsi)|(?<patenteguida>patente[ _-]?(?:di[ _-]?)?guida)|(?<vaditajaaplieciba>vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja))|(?<vairuotojopazymejimas>vairuotojo[ _-]?pa[zž]ym[eė]jimas)|(?<licenzjatassewqan>li[cċ]enzja[ _-]?tas-?sewqan)|(?<rijbewijs>rijbewijs)|(?<numerlicencyjny>numer[-_ ]?licencyjny)|(?<prawojazdy>prawo[-_ ]?jazdy)|(?<zezwolenienaprowadzenie>zezwolenie[-_ ]?na[-_ ]?prowadzenie)|(?<carteiradehabilitacao>carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist))|(?<cartadeconducao>(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o)|(?<permisdeconducere>permis[-_ ]?(?:de[-_ ]?)?conducere)|(?<povoleniavodicov>povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov))|(?<vozniskodovoljenje>vozni[sš]ko[-_ ]?dovoljenje)|(?<carnetdeconducer>(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n))|(?<ajokortinnumero>ajokortin[ _-]?numero)|(?<korkort>k[oö]rkort)|(?<forarelic>(?:f[oö]rare|drivere)[ _-]?lic)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "driverlicense": {
            "value": "/driver'?s?[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "driverlicense",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "drivinglicense": {
            "value": "/driving[ _-]?(?:licen[cs]e|permit)/g",
            "confidenceDetailed": {
               "name": "drivinglicense",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "fuehrerscheinnummer": {
            "value": "/fuehrerscheinnummer/g",
            "confidenceDetailed": {
               "name": "fuehrerscheinnummer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "fuhrerschein": {
            "value": "/f[üu]e?hrersch[ea]in/g",
            "confidenceDetailed": {
               "name": "fuhrerschein",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "permisconduire": {
            "value": "/permis[ _-]?conduire/g",
            "confidenceDetailed": {
               "name": "permisconduire",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "rijbewijsnummer": {
            "value": "/rijbewijsnummer/g",
            "confidenceDetailed": {
               "name": "rijbewijsnummer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cislolicence": {
            "value": "/[cč][ií]slo[ _-]?licenci?e/g",
            "confidenceDetailed": {
               "name": "cislolicence",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "kørekort": {
            "value": "/kørekort/g",
            "confidenceDetailed": {
               "name": "kørekort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vozackadozvola": {
            "value": "/voza[cč]ka[ _-]?dozvola/g",
            "confidenceDetailed": {
               "name": "vozackadozvola",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "illesztoprogramoklic": {
            "value": "/illeszt[oő]programok[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "illesztoprogramoklic",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "jogositvany": {
            "value": "/jogos[ií]tv[aá]ny/g",
            "confidenceDetailed": {
               "name": "jogositvany",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vezetoengedely": {
            "value": "/vezet[oő]i?[ _-]?enged[eé]ly/g",
            "confidenceDetailed": {
               "name": "vezetoengedely",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "juhiluba": {
            "value": "/juhiluba/g",
            "confidenceDetailed": {
               "name": "juhiluba",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "juhilitsentsi": {
            "value": "/juhi[ _-]?litsentsi/g",
            "confidenceDetailed": {
               "name": "juhilitsentsi",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "patenteguida": {
            "value": "/patente[ _-]?(?:di[ _-]?)?guida/g",
            "confidenceDetailed": {
               "name": "patenteguida",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vaditajaaplieciba": {
            "value": "/vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja)/g",
            "confidenceDetailed": {
               "name": "vaditajaaplieciba",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vairuotojopazymejimas": {
            "value": "/vairuotojo[ _-]?pa[zž]ym[eė]jimas/g",
            "confidenceDetailed": {
               "name": "vairuotojopazymejimas",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "licenzjatassewqan": {
            "value": "/li[cċ]enzja[ _-]?tas-?sewqan/g",
            "confidenceDetailed": {
               "name": "licenzjatassewqan",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "rijbewijs": {
            "value": "/rijbewijs/g",
            "confidenceDetailed": {
               "name": "rijbewijs",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "numerlicencyjny": {
            "value": "/numer[-_ ]?licencyjny/g",
            "confidenceDetailed": {
               "name": "numerlicencyjny",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "prawojazdy": {
            "value": "/prawo[-_ ]?jazdy/g",
            "confidenceDetailed": {
               "name": "prawojazdy",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "zezwolenienaprowadzenie": {
            "value": "/zezwolenie[-_ ]?na[-_ ]?prowadzenie/g",
            "confidenceDetailed": {
               "name": "zezwolenienaprowadzenie",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "carteiradehabilitacao": {
            "value": "/carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist)/g",
            "confidenceDetailed": {
               "name": "carteiradehabilitacao",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "cartadeconducao": {
            "value": "/(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o/g",
            "confidenceDetailed": {
               "name": "cartadeconducao",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "permisdeconducere": {
            "value": "/permis[-_ ]?(?:de[-_ ]?)?conducere/g",
            "confidenceDetailed": {
               "name": "permisdeconducere",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "povoleniavodicov": {
            "value": "/povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov)/g",
            "confidenceDetailed": {
               "name": "povoleniavodicov",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vozniskodovoljenje": {
            "value": "/vozni[sš]ko[-_ ]?dovoljenje/g",
            "confidenceDetailed": {
               "name": "vozniskodovoljenje",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "carnetdeconducer": {
            "value": "/(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n)/g",
            "confidenceDetailed": {
               "name": "carnetdeconducer",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "ajokortinnumero": {
            "value": "/ajokortin[ _-]?numero/g",
            "confidenceDetailed": {
               "name": "ajokortinnumero",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "korkort": {
            "value": "/k[oö]rkort/g",
            "confidenceDetailed": {
               "name": "korkort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "forarelic": {
            "value": "/(?:f[oö]rare|drivere)[ _-]?lic/g",
            "confidenceDetailed": {
               "name": "forarelic",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 79,
            "value": "/(?<driverlicense>driver'?s?[ _-]?(?:licen[cs]e|permit))|(?<drivinglicense>driving[ _-]?(?:licen[cs]e|permit))|(?<fuehrerscheinnummer>fuehrerscheinnummer)|(?<fuhrerschein>f[üu]e?hrersch[ea]in)|(?<permisconduire>permis[ _-]?conduire)|(?<rijbewijsnummer>rijbewijsnummer)|(?<cislolicence>[cč][ií]slo[ _-]?licenci?e)|(?<kørekort>kørekort)|(?<vozackadozvola>voza[cč]ka[ _-]?dozvola)|(?<illesztoprogramoklic>illeszt[oő]programok[ _-]?lic)|(?<jogositvany>jogos[ií]tv[aá]ny)|(?<vezetoengedely>vezet[oő]i?[ _-]?enged[eé]ly)|(?<juhiluba>juhiluba)|(?<juhilitsentsi>juhi[ _-]?litsentsi)|(?<patenteguida>patente[ _-]?(?:di[ _-]?)?guida)|(?<vaditajaaplieciba>vad[iī]t[aā]ja[ _-]?(?:apliec[iī]ba|licences|at[lļ]auja))|(?<vairuotojopazymejimas>vairuotojo[ _-]?pa[zž]ym[eė]jimas)|(?<licenzjatassewqan>li[cċ]enzja[ _-]?tas-?sewqan)|(?<rijbewijs>rijbewijs)|(?<numerlicencyjny>numer[-_ ]?licencyjny)|(?<prawojazdy>prawo[-_ ]?jazdy)|(?<zezwolenienaprowadzenie>zezwolenie[-_ ]?na[-_ ]?prowadzenie)|(?<carteiradehabilitacao>carteira[-_ ]?(?:de[-_ ]?)?(?:habilita[cç][aã]o|motorist))|(?<cartadeconducao>(?:licen[cç]a|carta|permiss[aã]o)[-_ ]?(?:de[-_ ]?)?condu[cç][aã]o)|(?<permisdeconducere>permis[-_ ]?(?:de[-_ ]?)?conducere)|(?<povoleniavodicov>povoleni[ae][-_ ]?(?:vodi[cč]a|jazdu|vodi[cč]ov))|(?<vozniskodovoljenje>vozni[sš]ko[-_ ]?dovoljenje)|(?<carnetdeconducer>(?:licencia|carnet|permiso)[ _-]?(?:de[ _-]?)?(?:conducer|manejo|conducci[oó]n))|(?<ajokortinnumero>ajokortin[ _-]?numero)|(?<korkort>k[oö]rkort)|(?<forarelic>(?:f[oö]rare|drivere)[ _-]?lic)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "LICENSE_PLATE_NUMBER": {
      "regexes": [
         {
            "value": "/[A-Z0-9-]{5,12}/g",
            "confidenceDetailed": {
               "name": "licplate1",
               "type": "reg",
               "confidence": 0.35
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehregplate",
               "type": "nb",
               "confidence": 0.65
            }
         },
         {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "licenseplatenumber",
               "type": "nb",
               "confidence": 0.65
            }
         },
         {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "licenseplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "regplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/veh(?:\\.?|icle)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:number|num|no\\.?)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "numberplate",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehregplate",
               "type": "nb",
               "confidence": 0.65
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "licenseplatenumber",
               "type": "nb",
               "confidence": 0.65
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "licenseplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "regplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/veh(?:\\.?|icle)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:number|num|no\\.?)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "numberplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "DRIVER_LICENSE_NUMBER",
                        "US_VEHICLE_IDENTIFICATION_NUMBER"
                     ]
                  }
               }
            ]
         },
         "structured": {
            "friends": [
               {
                  "confidenceDetailed": {
                     "confidence": 0.15,
                     "name": "friends",
                     "type": "bst"
                  },
                  "params": {
                     "friendInfoTypes": [
                        "DRIVER_LICENSE_NUMBER",
                        "US_VEHICLE_IDENTIFICATION_NUMBER"
                     ]
                  }
               }
            ]
         }
      },
      "validator": "license_plate",
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "vehregplate": {
            "value": "/veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehregplate",
               "type": "nb",
               "confidence": 0.65
            }
         },
         "licenseplatenumber": {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "licenseplatenumber",
               "type": "nb",
               "confidence": 0.65
            }
         },
         "licenseplate": {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "licenseplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "regplate": {
            "value": "/reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "regplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "vehplate": {
            "value": "/veh(?:\\.?|icle)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehplate",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "numberplate": {
            "value": "/(?:number|num|no\\.?)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "numberplate",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 52,
            "value": "/(?<vehregplate>veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate)|(?<licenseplatenumber>lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no))|(?<licenseplate>lic(?:\\.?|en[cs]e)[ _-]?plate)|(?<regplate>reg(?:\\.?|istration)[ _-]?plate)|(?<vehplate>veh(?:\\.?|icle)[ _-]?plate)|(?<numberplate>(?:number|num|no\\.?)[ _-]?plate)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "vehregplate": {
            "value": "/veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehregplate",
               "type": "nb",
               "confidence": 0.65
            },
            "matchNeighbourOnlyFront": true
         },
         "licenseplatenumber": {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "licenseplatenumber",
               "type": "nb",
               "confidence": 0.65
            },
            "matchNeighbourOnlyFront": true
         },
         "licenseplate": {
            "value": "/lic(?:\\.?|en[cs]e)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "licenseplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "regplate": {
            "value": "/reg(?:\\.?|istration)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "regplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "vehplate": {
            "value": "/veh(?:\\.?|icle)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "vehplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "numberplate": {
            "value": "/(?:number|num|no\\.?)[ _-]?plate/g",
            "confidenceDetailed": {
               "name": "numberplate",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 52,
            "value": "/(?<vehregplate>veh(?:\\.?|icle)[ _-]?reg(?:\\.?|istration)[ _-]?plate)|(?<licenseplatenumber>lic(?:\\.?|en[cs]e)[ _-]?plate[ _-]?(?:number|num|no))|(?<licenseplate>lic(?:\\.?|en[cs]e)[ _-]?plate)|(?<regplate>reg(?:\\.?|istration)[ _-]?plate)|(?<vehplate>veh(?:\\.?|icle)[ _-]?plate)|(?<numberplate>(?:number|num|no\\.?)[ _-]?plate)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "PASSPORT_NUMBER": {
      "regexes": [
         {
            "value": "/[A-Z]{0,2}\\d{6,12}[A-Z]{0,2}/g",
            "confidenceDetailed": {
               "name": "pspt1",
               "type": "reg",
               "confidence": 0.35
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/passe?port/g",
            "confidenceDetailed": {
               "name": "passport",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/ausstellungsdatum/g",
            "confidenceDetailed": {
               "name": "ausstellungsdatum",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/ausstellungsort/g",
            "confidenceDetailed": {
               "name": "ausstellungsort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/geburtsdatum/g",
            "confidenceDetailed": {
               "name": "geburtsdatum",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/reisepass/g",
            "confidenceDetailed": {
               "name": "reisepass",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/passaporto/g",
            "confidenceDetailed": {
               "name": "passaporto",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/pasaporte/g",
            "confidenceDetailed": {
               "name": "pasaporte",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/passe?port/g",
            "confidenceDetailed": {
               "name": "passport",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ausstellungsdatum/g",
            "confidenceDetailed": {
               "name": "ausstellungsdatum",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ausstellungsort/g",
            "confidenceDetailed": {
               "name": "ausstellungsort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/geburtsdatum/g",
            "confidenceDetailed": {
               "name": "geburtsdatum",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/reisepass/g",
            "confidenceDetailed": {
               "name": "reisepass",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/passaporto/g",
            "confidenceDetailed": {
               "name": "passaporto",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/pasaporte/g",
            "confidenceDetailed": {
               "name": "pasaporte",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<=(?:\\\\\\\"|\\s|^|\\\\n|['\"`([“‘]|(?:\\s|[a-zA-Z])[:=]))/g",
            "back": "/(?=(?:\\\\\\\"|['\"`“‘)]|[.,;)]?(?:\\s|$|\\\\n)))/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "neighbourhoodLength": 5,
      "preBuiltStructuredNeighboursMap": {
         "passport": {
            "value": "/passe?port/g",
            "confidenceDetailed": {
               "name": "passport",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ausstellungsdatum": {
            "value": "/ausstellungsdatum/g",
            "confidenceDetailed": {
               "name": "ausstellungsdatum",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "ausstellungsort": {
            "value": "/ausstellungsort/g",
            "confidenceDetailed": {
               "name": "ausstellungsort",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "geburtsdatum": {
            "value": "/geburtsdatum/g",
            "confidenceDetailed": {
               "name": "geburtsdatum",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "reisepass": {
            "value": "/reisepass/g",
            "confidenceDetailed": {
               "name": "reisepass",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "passaporto": {
            "value": "/passaporto/g",
            "confidenceDetailed": {
               "name": "passaporto",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "pasaporte": {
            "value": "/pasaporte/g",
            "confidenceDetailed": {
               "name": "pasaporte",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 17,
            "value": "/(?<passport>passe?port)|(?<ausstellungsdatum>ausstellungsdatum)|(?<ausstellungsort>ausstellungsort)|(?<geburtsdatum>geburtsdatum)|(?<reisepass>reisepass)|(?<passaporto>passaporto)|(?<pasaporte>pasaporte)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "passport": {
            "value": "/passe?port/g",
            "confidenceDetailed": {
               "name": "passport",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "ausstellungsdatum": {
            "value": "/ausstellungsdatum/g",
            "confidenceDetailed": {
               "name": "ausstellungsdatum",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "ausstellungsort": {
            "value": "/ausstellungsort/g",
            "confidenceDetailed": {
               "name": "ausstellungsort",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "geburtsdatum": {
            "value": "/geburtsdatum/g",
            "confidenceDetailed": {
               "name": "geburtsdatum",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "reisepass": {
            "value": "/reisepass/g",
            "confidenceDetailed": {
               "name": "reisepass",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "passaporto": {
            "value": "/passaporto/g",
            "confidenceDetailed": {
               "name": "passaporto",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "pasaporte": {
            "value": "/pasaporte/g",
            "confidenceDetailed": {
               "name": "pasaporte",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 17,
            "value": "/(?<passport>passe?port)|(?<ausstellungsdatum>ausstellungsdatum)|(?<ausstellungsort>ausstellungsort)|(?<geburtsdatum>geburtsdatum)|(?<reisepass>reisepass)|(?<passaporto>passaporto)|(?<pasaporte>pasaporte)/",
            "matchNeighbourOnlyFront": true
         }
      ]
   },
   "GENERIC_ID": {
      "regexes": [
         {
            "value": "/(?=[^\\s]*[0-9])(?=[^\\s]*[a-zA-Z])[a-zA-Z0-9!#$%&()*+.;<>?@\\[\\]^_{\\|}~-]{8,256}/g",
            "confidenceDetailed": {
               "name": "id1",
               "type": "reg",
               "confidence": 0.35
            }
         },
         {
            "value": "/[0-9_-]{5,}/g",
            "confidenceDetailed": {
               "name": "id2",
               "type": "reg",
               "confidence": 0.35
            }
         }
      ],
      "structuredNeighbours": [
         {
            "value": "/(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "bookingid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "idnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/(?:\\b|_)id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "someid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         {
            "value": "/version/g",
            "confidenceDetailed": {
               "name": "version",
               "type": "nb",
               "confidence": 0.5
            }
         }
      ],
      "unstructuredNeighbours": [
         {
            "value": "/(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "bookingid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "idnumber",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/id[`\"'”]? ?(?:=>?|:=?|->|#)/g",
            "confidenceDetailed": {
               "name": "id:",
               "alternateCaptureGroupName": "idcolon",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/ id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/version/g",
            "confidenceDetailed": {
               "name": "version",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         {
            "value": "/(?:\\b|_)[a-z]+id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "someid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      ],
      "boosters": {
         "unstructured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "CREDIT_CARD_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "US_SOCIAL_SECURITY_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PASSPORT_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DRIVER_LICENSE_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "POSTAL_CODE",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PASSWORD",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "GENERIC_API_KEY",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DOMAIN_NAME",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "EMAIL_ADDRESS",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               }
            ]
         },
         "structured": {
            "dominatedBy": [
               {
                  "confidenceDetailed": {
                     "confidence": -0.25,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DATE",
                     "ifDominantInfoTypeConfAbove": 0.725
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "CREDIT_CARD_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "US_SOCIAL_SECURITY_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.6
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PASSPORT_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DRIVER_LICENSE_NUMBER",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "POSTAL_CODE",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "PASSWORD",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "GENERIC_API_KEY",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "DOMAIN_NAME",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               },
               {
                  "confidenceDetailed": {
                     "confidence": -1,
                     "name": "dominatedBy",
                     "type": "bst"
                  },
                  "params": {
                     "dominantInfoType": "EMAIL_ADDRESS",
                     "ifDominantInfoTypeConfAbove": 0.85
                  }
               }
            ]
         }
      },
      "boundaries": {
         "lowSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         },
         "highSensitivity": {
            "front": "/(?<![a-zA-Z0-9][._-])(?<![a-zA-Z0-9])/g",
            "back": "/(?![a-zA-Z0-9])(?![._-][a-zA-Z0-9])/g"
         }
      },
      "validator": "generic_id",
      "neighbourhoodLength": 5,
      "internalOnly": true,
      "preBuiltStructuredNeighboursMap": {
         "bookingid": {
            "value": "/(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "bookingid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "userid": {
            "value": "/(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "idnumber": {
            "value": "/id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "idnumber",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "id": {
            "value": "/(?:\\b|_)id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "someid": {
            "value": "/id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "someid",
               "type": "nb",
               "confidence": 0.5
            }
         },
         "version": {
            "value": "/version/g",
            "confidenceDetailed": {
               "name": "version",
               "type": "nb",
               "confidence": 0.5
            }
         }
      },
      "preBuiltStructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 104,
            "value": "/(?<bookingid>(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no))|(?<userid>(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no))|(?<idnumber>id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no))|(?<id>(?:\\b|_)id(?:\\b|_))|(?<someid>id(?:\\b|_))|(?<version>version)/"
         }
      ],
      "preBuiltUnstructuredNeighboursMap": {
         "bookingid": {
            "value": "/(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "bookingid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "userid": {
            "value": "/(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no)/g",
            "confidenceDetailed": {
               "name": "userid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "idnumber": {
            "value": "/id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no)/g",
            "confidenceDetailed": {
               "name": "idnumber",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "idcolon": {
            "value": "/id[`\"'”]? ?(?:=>?|:=?|->|#)/g",
            "confidenceDetailed": {
               "name": "id:",
               "alternateCaptureGroupName": "idcolon",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "id": {
            "value": "/ id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "id",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "version": {
            "value": "/version/g",
            "confidenceDetailed": {
               "name": "version",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         },
         "someid": {
            "value": "/(?:\\b|_)[a-z]+id(?:\\b|_)/g",
            "confidenceDetailed": {
               "name": "someid",
               "type": "nb",
               "confidence": 0.5
            },
            "matchNeighbourOnlyFront": true
         }
      },
      "preBuiltUnstructuredNeighbourJointRegexes": [
         {
            "maxRegexSourceLength": 104,
            "value": "/(?<bookingid>(?:transaction|hotel|receipt|ticket|booking|passenger|travel)[-_ ]?(?:id|number|num|no))|(?<userid>(?:employe[er]|type|app|project|user|default|code|version|policy|acc(?:ount)?)[-_ ]?(?:id|number|num|no))|(?<idnumber>id(?:enti(?:ty|fication))?[-_ ]?(?:number|num|no))|(?<idcolon>id[`\"'”]? ?(?:=>?|:=?|->|#))|(?<id> id(?:\\b|_))|(?<version>version)|(?<someid>(?:\\b|_)[a-z]+id(?:\\b|_))/",
            "matchNeighbourOnlyFront": true
         }
      ]
   }
}
